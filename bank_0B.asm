.include "Constants.inc"
.include "variables.inc"

.import Set_IRQ_JMP		;FA2A
.import	Copy_char_tile		;FBBA
.import	Set_wpn_pal		;FC03
.import	Multi			;FC79
.import	Weapon_type		;FDC7
.import Wait_NMI_end		;FD46
.import	Wait_MENU_snd		;FD5B
.import	Set_buf_to_Ppu		;FD6F
.import	Set_PpuAddr_00		;FD7E

.segment "BANK_0B"

; ========== map random battle rates ($8000-$80FF) START ==========
;; [$8000 :: 0x2C000]

.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$10,$00,$00,$00,$09,$09,$09
.byte $09,$00,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$00
.byte $04,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$10,$00,$80
.byte $09,$09,$09,$09,$09,$09,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $09,$00,$09,$09,$09,$09,$09,$10,$10,$09,$80,$00,$09,$00,$00,$00
.byte $80,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$10,$10,$80
.byte $00,$09,$09,$09,$09,$09,$00,$09,$09,$09,$09,$09,$09,$09,$09,$09
.byte $09,$80,$09,$09,$20,$20,$09,$09,$20,$20,$09,$09,$09,$09,$09,$09
.byte $09,$09,$09,$00,$00,$80,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09
.byte $09,$09,$80,$09,$09,$09,$09,$09,$09,$00,$00,$09,$80,$09,$00,$09
.byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$80,$09,$09,$09,$09
.byte $09,$09,$09,$09,$09,$09,$80,$09,$09,$09,$09,$09,$09,$00,$08,$80
.byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$80,$09,$09,$09
.byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$80,$00,$00,$00,$00,$00
; ========== map random battle rates ($8000-$80FF) END ==========


; ========== normal map battle groups ($8100-$81FF) START ==========
;; [$8100 :: 0x2C100]

.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$6F,$00,$00,$00,$0B,$0B,$0C
.byte $0C,$00,$22,$23,$24,$24,$24,$24,$25,$25,$25,$26,$26,$26,$26,$00
.byte $01,$30,$30,$31,$31,$31,$32,$32,$32,$32,$32,$32,$30,$70,$00,$32
.byte $33,$34,$35,$6D,$6E,$6E,$6E,$32,$00,$00,$00,$00,$00,$00,$00,$00
.byte $0E,$00,$15,$16,$17,$17,$18,$71,$71,$18,$18,$00,$2F,$00,$00,$2F
.byte $2F,$54,$54,$54,$55,$55,$56,$57,$58,$59,$59,$5A,$5A,$72,$72,$5A
.byte $00,$28,$29,$29,$29,$29,$00,$2A,$2A,$2A,$2A,$2B,$2B,$2B,$2C,$2C
.byte $2C,$2C,$41,$42,$43,$43,$43,$44,$45,$45,$45,$46,$46,$47,$47,$48
.byte $48,$49,$49,$00,$00,$49,$4C,$4D,$4D,$4E,$4E,$4F,$4F,$50,$50,$51
.byte $51,$51,$51,$06,$07,$07,$08,$09,$0A,$00,$00,$0A,$0A,$3D,$00,$3E
.byte $1B,$1B,$1C,$1C,$1D,$1D,$1D,$1E,$1E,$1F,$1F,$1F,$38,$38,$39,$39
.byte $3A,$3A,$3B,$3B,$3C,$3C,$3C,$10,$11,$11,$12,$13,$14,$00,$14,$14
.byte $5D,$5D,$5E,$5E,$5F,$5F,$60,$60,$61,$61,$62,$60,$62,$63,$64,$65
.byte $66,$67,$67,$68,$68,$66,$69,$6A,$6B,$6C,$73,$00,$2F,$00,$00,$00
; ========== normal map battle groups ($8100-$81FF) END ==========


; ========== world map battle groups ($8200-$827F) START ==========
; $8200-$823F : before tornado
; $8240-$827F : after tornado
; world map devide as 32 x 32 area
;; [$8200 :: 0x2C200]

.byte $19,$20,$05,$0F,$0F,$0F,$27,$19,$19,$19,$05,$05,$03,$04,$27,$27
.byte $1A,$00,$00,$02,$03,$04,$04,$04,$1A,$40,$00,$00,$04,$0D,$0D,$0D
.byte $36,$40,$36,$36,$36,$2D,$2E,$2E,$36,$37,$37,$36,$20,$2D,$2E,$2E
.byte $36,$37,$37,$20,$20,$2D,$2E,$2E,$20,$20,$20,$21,$20,$20,$1A,$1A
.byte $4B,$3F,$4A,$4A,$0F,$0F,$27,$4B,$4B,$4B,$4B,$4A,$4A,$4A,$27,$27
.byte $4B,$4B,$4A,$4A,$4A,$4A,$4A,$4A,$4B,$40,$4A,$4A,$4A,$52,$52,$52
.byte $5B,$40,$5B,$5B,$5C,$53,$53,$53,$5B,$5B,$5B,$5B,$3F,$52,$53,$53
.byte $5B,$5B,$5B,$3F,$3F,$52,$53,$53,$3F,$3F,$3F,$21,$3F,$3F,$4B,$4B
; ========== world map battle groups ($8200-$827F) END ==========


; ========== random battle groups (116 * 8 bytes) ($8280-$861F) START ==========
;; [$8280 :: 0x2C280]
.byte $5F,$5F,$20,$20,$A0,$A0,$21,$21,$5F,$20,$20,$A0,$A0,$21,$21,$E4
.byte $20,$A0,$21,$E4,$DF,$E0,$23,$24,$21,$E4,$DF,$E0,$23,$24,$A2,$27
.byte $E4,$DF,$E0,$23,$24,$A2,$27,$60,$DF,$E0,$23,$24,$A2,$27,$60,$A6
.byte $E0,$24,$27,$60,$A6,$E1,$6B,$A7,$24,$27,$60,$A6,$E1,$6B,$A7,$57
.byte $27,$60,$A6,$E1,$6B,$A7,$57,$61,$60,$A6,$E1,$6B,$A7,$57,$61,$2F
.byte $A6,$E1,$6B,$A7,$57,$61,$2F,$A4,$6B,$61,$2F,$A1,$A4,$EB,$22,$A3
.byte $61,$2F,$A1,$A4,$EB,$22,$A3,$30,$2F,$A1,$A4,$EB,$22,$A3,$30,$84
.byte $A1,$A4,$EB,$22,$A3,$30,$84,$6F,$25,$25,$25,$25,$A5,$A5,$A5,$A5

;; [$8300 :: 0x2C300]

.byte $AF,$25,$82,$81,$A5,$B0,$B1,$26,$25,$82,$81,$A5,$B0,$B1,$26,$8A
.byte $82,$81,$A5,$B0,$B1,$26,$8A,$01,$81,$A5,$B0,$B1,$26,$8A,$01,$64
.byte $A5,$B0,$B1,$26,$8A,$01,$64,$02,$02,$A8,$31,$03,$B2,$70,$AA,$29
.byte $A8,$31,$03,$B2,$70,$AA,$29,$A9,$31,$03,$B2,$70,$AA,$29,$A9,$83
.byte $03,$B2,$70,$AA,$29,$A9,$83,$87,$03,$AA,$29,$2B,$F0,$A9,$28,$AC
.byte $AA,$29,$2B,$F0,$A9,$28,$AC,$04,$83,$87,$04,$32,$8D,$63,$42,$E3
.byte $87,$04,$32,$8D,$63,$42,$E3,$FA,$04,$32,$8D,$63,$42,$E3,$FA,$3F
.byte $32,$8D,$63,$42,$E3,$FA,$3F,$AB,$8D,$63,$42,$E3,$FA,$3F,$AB,$05
.byte $BE,$3E,$3F,$C0,$40,$40,$BF,$BF,$D7,$D7,$C2,$C2,$AD,$AD,$D6,$D6
.byte $D7,$C2,$C2,$AD,$AD,$D6,$D6,$C1,$C2,$C2,$AD,$AD,$D6,$D6,$C1,$C1
.byte $AD,$AD,$D6,$D6,$C1,$C1,$41,$41,$D6,$D6,$C1,$C1,$41,$41,$2D,$2D
.byte $C1,$C1,$41,$41,$2D,$2D,$48,$48,$2A,$2A,$80,$80,$07,$07,$86,$86
.byte $80,$80,$07,$07,$86,$86,$92,$92,$07,$07,$86,$86,$92,$92,$34,$34
.byte $86,$86,$92,$92,$34,$34,$AE,$AE,$92,$92,$34,$34,$AE,$AE,$2C,$2C
.byte $34,$34,$AE,$AE,$2C,$2C,$88,$88,$0A,$88,$33,$33,$B3,$B3,$43,$43
.byte $33,$33,$B3,$B3,$43,$43,$C3,$C3,$49,$AB,$B7,$B4,$B6,$6C,$B5,$36

;; [$8400 :: 0x2C400]

.byte $AB,$B7,$0B,$B4,$B6,$6C,$B5,$36,$B7,$0B,$B4,$B6,$6C,$B5,$36,$C9
.byte $0B,$B4,$B6,$6C,$B5,$36,$C9,$8C,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$89
.byte $62,$62,$62,$62,$62,$62,$62,$89,$58,$58,$58,$58,$58,$58,$58,$89
.byte $58,$FB,$38,$B8,$44,$C8,$0E,$F7,$FB,$38,$B8,$44,$C8,$0E,$D9,$F7
.byte $38,$B8,$44,$C8,$0E,$D9,$59,$F2,$B8,$44,$C8,$0E,$D9,$59,$F2,$E2
.byte $C8,$0E,$D9,$59,$F2,$E2,$F1,$0F,$0E,$D9,$59,$F2,$E2,$F1,$0F,$8F
.byte $59,$F2,$E2,$F1,$0F,$8F,$47,$91,$45,$45,$46,$46,$C5,$C5,$C6,$C6
.byte $45,$45,$46,$46,$C5,$C5,$C6,$C6,$45,$45,$46,$46,$C5,$C5,$C6,$C6
.byte $10,$11,$F5,$CA,$4B,$5E,$90,$97,$11,$F5,$CA,$4B,$5E,$90,$97,$37
.byte $F5,$CA,$4B,$5E,$90,$97,$37,$4E,$CA,$4B,$90,$4E,$4A,$BA,$CE,$CB
.byte $4B,$5E,$90,$97,$37,$4E,$4A,$BA,$5E,$90,$37,$4E,$4A,$BA,$8E,$4F
.byte $90,$97,$37,$4E,$4A,$BA,$8E,$CE,$97,$37,$4E,$4A,$BA,$8E,$CE,$DE
.byte $37,$4E,$4A,$BA,$8E,$CE,$DE,$4F,$4E,$4A,$BA,$8E,$CE,$DE,$4F,$CB
.byte $35,$35,$EF,$EF,$C7,$C7,$EE,$EE,$35,$EF,$EF,$C7,$C7,$EE,$EE,$EE
.byte $C7,$3B,$EE,$C4,$7D,$66,$13,$6D,$3B,$EE,$C4,$7D,$66,$13,$6D,$ED
.byte $EE,$C4,$7D,$66,$13,$6D,$ED,$CC,$C4,$7D,$66,$13,$6D,$ED,$CC,$65

;; [$8500 :: 0x2C500]

.byte $7D,$66,$13,$6D,$ED,$CC,$65,$E5,$66,$13,$6D,$ED,$CC,$65,$E5,$D8
.byte $B9,$B9,$4D,$4D,$39,$39,$CD,$17,$B9,$4D,$4D,$39,$39,$CD,$CD,$17
.byte $D8,$5B,$4C,$3A,$BB,$3C,$15,$17,$5B,$4C,$3A,$BB,$3C,$15,$E6,$17
.byte $4C,$3A,$BB,$3C,$15,$E6,$F4,$17,$3A,$BB,$3C,$15,$E6,$F4,$DB,$EC
.byte $BB,$3C,$15,$E6,$F4,$DB,$EC,$93,$3C,$15,$E6,$F4,$DB,$EC,$93,$95
.byte $15,$E6,$F4,$DB,$EC,$93,$95,$E7,$D4,$D4,$CF,$51,$5A,$55,$53,$D1
.byte $D4,$CF,$51,$5A,$55,$53,$D1,$54,$55,$94,$53,$D1,$54,$D3,$3D,$50
.byte $94,$53,$D1,$54,$D3,$3D,$50,$52,$53,$D1,$54,$D3,$3D,$50,$52,$DA
.byte $D1,$54,$D3,$3D,$50,$52,$DA,$96,$54,$D3,$3D,$50,$52,$DA,$96,$BD
.byte $D3,$3D,$50,$52,$DA,$96,$BD,$D5,$5C,$DC,$5D,$98,$F6,$DD,$FF,$BC
.byte $5D,$98,$F6,$DD,$FF,$BC,$67,$F8,$98,$F6,$DD,$FF,$BC,$67,$F8,$D0
.byte $DD,$FF,$BC,$67,$F8,$D0,$18,$D2,$FF,$BC,$67,$F8,$D0,$18,$D2,$68
.byte $67,$F8,$D0,$18,$D2,$E9,$EA,$68,$F8,$D0,$18,$D2,$E9,$EA,$FC,$68
.byte $18,$D2,$E9,$EA,$FC,$99,$9A,$F9,$D2,$E9,$EA,$FC,$99,$9A,$F9,$69
.byte $EA,$FC,$99,$9A,$F9,$69,$6A,$9B,$2E,$2E,$2E,$2E,$2E,$2E,$2E,$89
.byte $8B,$8B,$8B,$8B,$8B,$8B,$8B,$89,$0F,$8F,$47,$91,$F1,$E2,$F2,$59

;; [$8600 :: 0x2C600]

.byte $B5,$36,$C9,$8C,$6C,$B6,$B4,$0B,$29,$A9,$83,$87,$AA,$70,$B2,$03
.byte $EC,$93,$95,$E7,$DB,$F4,$E6,$15,$F9,$69,$6A,$9B,$9A,$99,$FC,$EA
; ========== random battle groups (116 * 8 bytes) ($8280-$861F) END ==========



; ========== battle properties (128 * 8 bytes) ($8620-$8A1F) START ==========
;; [$8620 :: 0x2C620]
.byte $68,$56,$36,$23,$54,$02,$08,$46,$6D,$00,$11,$4D,$4E,$25,$5F,$60
.byte $79,$21,$23,$27,$29,$06,$21,$22,$79,$02,$30,$25,$2A,$07,$01,$00
.byte $3D,$01,$01,$4E,$4F,$31,$72,$71,$3D,$23,$23,$3C,$28,$28,$29,$64
.byte $2D,$23,$81,$3C,$22,$26,$61,$58,$39,$23,$23,$29,$2A,$09,$2A,$29
.byte $5A,$45,$57,$36,$37,$11,$1E,$2F,$2C,$01,$00,$45,$00,$1D,$2C,$19
.byte $78,$57,$34,$58,$54,$03,$0D,$15,$28,$43,$77,$23,$54,$04,$1A,$19
.byte $0D,$23,$23,$28,$00,$28,$65,$14,$39,$23,$02,$2A,$26,$08,$0A,$02
.byte $39,$23,$23,$2A,$26,$0A,$27,$2B,$59,$73,$64,$2F,$2B,$0D,$2F,$33
.byte $1D,$23,$81,$22,$47,$26,$25,$62,$99,$73,$64,$2B,$2F,$0D,$2C,$32
.byte $6C,$10,$10,$47,$46,$1C,$01,$24,$59,$55,$17,$28,$2E,$0E,$36,$24
.byte $0E,$A0,$00,$55,$56,$35,$08,$08,$ED,$82,$32,$2C,$22,$2F,$6D,$6E
.byte $0E,$A0,$00,$57,$58,$36,$08,$08,$6C,$30,$10,$48,$47,$1E,$08,$51
.byte $8D,$55,$40,$15,$50,$2C,$6A,$69,$0E,$A0,$00,$59,$5A,$37,$08,$08
.byte $0E,$90,$00,$53,$54,$34,$08,$08,$0E,$A0,$00,$5B,$5C,$38,$08,$08

;; [$8700 :: 0x2C700]

.byte $2A,$30,$67,$35,$2A,$13,$08,$30,$0E,$C0,$00,$5F,$75,$3A,$08,$79
.byte $0F,$D0,$00,$76,$77,$3B,$08,$79,$0F,$E0,$00,$78,$79,$3C,$08,$79
.byte $90,$01,$01,$1E,$1D,$00,$00,$01,$90,$01,$01,$1E,$1D,$00,$02,$05
.byte $90,$01,$01,$1E,$1D,$00,$04,$06,$90,$01,$01,$1E,$1D,$00,$0B,$07
.byte $25,$23,$40,$3C,$00,$27,$08,$34,$20,$42,$32,$1F,$21,$01,$00,$2F
.byte $A0,$42,$32,$1F,$21,$01,$0C,$34,$80,$42,$32,$20,$21,$01,$0E,$0F
.byte $60,$56,$36,$23,$54,$02,$0D,$10,$60,$56,$36,$23,$54,$02,$11,$12
.byte $60,$56,$36,$23,$54,$02,$03,$13,$25,$23,$40,$3C,$00,$27,$63,$00
.byte $60,$57,$34,$58,$54,$03,$16,$0E,$60,$43,$77,$23,$54,$04,$0E,$18
.byte $30,$63,$56,$23,$58,$05,$1C,$0F,$71,$21,$23,$27,$29,$06,$1D,$00
.byte $71,$21,$23,$27,$29,$06,$1E,$2F,$71,$21,$23,$27,$29,$06,$20,$1F
.byte $71,$02,$30,$25,$2A,$07,$02,$24,$79,$42,$36,$2C,$26,$0B,$1D,$2D
.byte $11,$42,$36,$26,$21,$0B,$2C,$2E,$35,$23,$23,$28,$22,$32,$74,$73
.byte $11,$23,$67,$26,$2F,$0C,$30,$75,$11,$23,$67,$26,$2F,$0C,$31,$2C
.byte $94,$30,$10,$47,$48,$1E,$50,$25,$51,$73,$64,$2F,$2D,$0D,$25,$1B
.byte $51,$55,$17,$28,$2E,$0E,$34,$35,$44,$22,$80,$49,$4E,$20,$55,$56

;; [$8800 :: 0x2C800]

.byte $51,$55,$17,$28,$2E,$0E,$38,$00,$41,$46,$00,$2D,$30,$0F,$15,$23
.byte $52,$20,$16,$33,$2F,$10,$3B,$2C,$52,$20,$16,$2F,$38,$10,$03,$0E
.byte $52,$20,$16,$2F,$38,$10,$3C,$6E,$52,$45,$57,$36,$37,$11,$0D,$15
.byte $E1,$01,$30,$26,$25,$07,$25,$26,$52,$45,$57,$36,$37,$11,$5F,$3D
.byte $02,$32,$17,$32,$2A,$12,$24,$3E,$82,$30,$67,$31,$2A,$13,$2C,$2F
.byte $92,$30,$67,$31,$35,$13,$41,$0E,$82,$44,$57,$36,$5A,$14,$42,$0D
.byte $53,$00,$14,$39,$3A,$15,$01,$2C,$53,$00,$14,$39,$3A,$15,$24,$0C
.byte $43,$32,$64,$3D,$3B,$16,$78,$2C,$43,$32,$64,$3D,$3B,$16,$3A,$0E
.byte $63,$32,$64,$3D,$41,$16,$2F,$30,$43,$54,$70,$44,$3D,$17,$2F,$47
.byte $43,$54,$70,$3F,$3D,$17,$0D,$48,$63,$12,$50,$30,$5D,$18,$2F,$01
.byte $63,$12,$50,$30,$5D,$18,$49,$2C,$03,$25,$34,$3E,$32,$19,$24,$0E
.byte $C3,$25,$34,$3E,$5D,$19,$4A,$4B,$33,$34,$57,$3E,$40,$1A,$2F,$0E
.byte $33,$34,$57,$3E,$40,$1A,$12,$4C,$23,$73,$76,$42,$40,$1B,$0E,$4D
.byte $64,$10,$10,$47,$46,$1C,$00,$4E,$24,$01,$00,$45,$47,$1D,$3B,$37
.byte $44,$42,$00,$3B,$49,$1F,$34,$54,$53,$00,$14,$39,$3A,$15,$46,$45
.byte $64,$42,$40,$3B,$4E,$21,$57,$28,$44,$58,$80,$49,$4B,$23,$5B,$56

;; [$8900 :: 0x2C900]

.byte $64,$54,$85,$4C,$49,$24,$0D,$15,$44,$54,$85,$4C,$49,$24,$11,$58
.byte $44,$42,$00,$3B,$49,$1F,$53,$76,$65,$00,$11,$4D,$00,$25,$0D,$5C
.byte $65,$00,$11,$4D,$4E,$25,$52,$5D,$65,$00,$11,$4D,$4E,$25,$37,$5E
.byte $53,$00,$14,$39,$3A,$15,$44,$0E,$25,$23,$40,$3C,$24,$27,$2F,$1F
.byte $90,$42,$32,$1F,$21,$01,$52,$08,$35,$23,$54,$22,$31,$2B,$2C,$32
.byte $35,$23,$54,$22,$15,$2B,$4C,$03,$35,$23,$54,$22,$15,$2B,$5F,$68
.byte $06,$B0,$00,$5D,$5E,$39,$08,$79,$25,$81,$10,$5B,$47,$2D,$34,$6B
.byte $25,$81,$10,$4F,$47,$2E,$34,$6C,$C5,$10,$20,$3C,$4E,$30,$70,$4C
.byte $19,$23,$67,$26,$2F,$0C,$2F,$0E,$6C,$35,$80,$4A,$4B,$22,$00,$58
.byte $2D,$28,$10,$22,$47,$2A,$08,$67,$4D,$24,$30,$28,$24,$29,$08,$66
.byte $68,$57,$34,$58,$54,$03,$08,$17,$1A,$32,$17,$34,$36,$12,$08,$0E
.byte $6C,$10,$10,$47,$46,$1C,$08,$4F,$8D,$20,$00,$00,$2C,$3F,$08,$08
.byte $1A,$32,$17,$32,$36,$12,$40,$3F,$1A,$44,$57,$5A,$36,$14,$08,$43
.byte $6D,$55,$40,$50,$15,$2C,$08,$6F,$0E,$90,$00,$51,$52,$33,$08,$08
.byte $59,$55,$17,$28,$2E,$0E,$08,$39,$3B,$73,$76,$43,$00,$1B,$08,$34
.byte $6D,$81,$10,$5B,$4F,$2D,$08,$00,$2D,$81,$10,$4F,$47,$2E,$08,$77

;; [$8A00 :: 0x2CA00]

.byte $4D,$81,$00,$51,$47,$3E,$08,$69,$6C,$35,$80,$4A,$4B,$22,$59,$5A
.byte $0F,$F0,$00,$7A,$7B,$3D,$08,$79,$1C,$54,$85,$4C,$49,$24,$09,$56
; ========== battle properties (128 * 8 bytes) ($8620-$8A1F) END ==========


; ========== surprise rate for each battle ($8A20-$8A9F) START ==========
;; [$8A20 :: 0x2CA20]
.byte $24,$10,$14,$14,$14,$18,$18,$28,$18,$20,$1C,$28,$18,$18,$20,$20
.byte $20,$24,$1C,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28
.byte $10,$10,$10,$10,$10,$14,$18,$10,$14,$18,$1C,$18,$28,$18,$28,$10
.byte $10,$18,$14,$1C,$1C,$1C,$1C,$20,$24,$24,$24,$24,$28,$28,$18,$18
.byte $18,$18,$18,$28,$24,$20,$20,$20,$1C,$18,$20,$20,$24,$28,$20,$24
.byte $28,$28,$28,$28,$28,$28,$18,$18,$20,$24,$28,$28,$28,$28,$24,$10
.byte $10,$10,$1C,$18,$10,$20,$28,$24,$2C,$28,$28,$10,$24,$20,$20,$18
.byte $14,$18,$20,$24,$28,$20,$28,$20,$28,$28,$18,$20,$28,$24,$2C,$28
; ========== surprise rate for each battle ($8A20-$8A9F) END ==========


; ========== monster sets (64 * 4 bytes) ($8AA0-$8B9F) START ==========
.byte $00,$02,$01,$03,$09,$04,$06,$05,$0C,$0D,$07,$0E,$0B,$10,$07,$0A
.byte $0A,$08,$10,$11,$0E,$08,$0B,$0F,$16,$14,$17,$1A,$12,$18,$1B,$13
.byte $18,$1B,$13,$19,$17,$1A,$18,$1B,$18,$1B,$19,$1C,$1E,$19,$1C,$22
.byte $19,$1C,$22,$25,$25,$1D,$23,$1F,$20,$21,$15,$26,$1F,$24,$00,$00
.byte $2C,$27,$29,$33,$30,$31,$32,$35,$2D,$2B,$2A,$37,$2E,$28,$34,$36
.byte $2F,$30,$32,$37,$38,$39,$3A,$40,$3E,$3C,$46,$41,$43,$41,$49,$00

;; [$8B00 :: 0x2CB00]

.byte $3B,$3D,$45,$00,$3D,$45,$3F,$42,$3F,$42,$44,$4A,$48,$3F,$4A,$47
.byte $4F,$4C,$51,$4D,$4B,$50,$4D,$00,$55,$4D,$4F,$4E,$56,$52,$00,$00
.byte $52,$53,$5D,$00,$56,$53,$57,$00,$54,$59,$5C,$00,$5A,$5C,$5D,$00
.byte $5B,$58,$5E,$5A,$5F,$60,$62,$63,$66,$6A,$71,$65,$66,$6A,$6D,$00
.byte $66,$6A,$67,$6B,$67,$6D,$6B,$00,$68,$71,$65,$00,$68,$6C,$6F,$6E
.byte $70,$6F,$6E,$00,$72,$64,$65,$00,$73,$64,$65,$00,$74,$68,$6C,$69
.byte $62,$60,$66,$00,$60,$62,$61,$64,$67,$6B,$68,$6C,$75,$00,$00,$00
.byte $76,$00,$00,$00,$77,$00,$00,$00,$78,$00,$00,$00,$79,$00,$00,$00
.byte $7A,$00,$00,$00,$7B,$00,$00,$00,$7C,$00,$00,$00,$7D,$00,$00,$00
.byte $7E,$00,$00,$00,$7F,$00,$00,$00,$74,$65,$00,$00,$69,$00,$00,$00
; ========== monster sets (64 * 4 bytes) ($8AA0-$8B9F) END ==========


; ========== monster min/max counts (122 * 4 bytes) ($8BA0-$8D87) START ==========
;; [$8BA0 :: 0x2CBA0]
.byte $00,$42,$00,$00,$52,$00,$00,$00,$31,$31,$00,$00,$00,$00,$42,$00
.byte $50,$00,$62,$00,$40,$40,$42,$00,$00,$77,$00,$11,$40,$70,$50,$11
.byte $11,$00,$00,$00,$00,$00,$00,$44,$30,$40,$20,$31,$00,$00,$31,$00
.byte $00,$30,$31,$00,$41,$00,$00,$00,$00,$00,$00,$51,$30,$00,$00,$31
.byte $00,$31,$00,$00,$21,$20,$00,$00,$00,$20,$00,$21,$10,$21,$00,$10
.byte $00,$00,$00,$81,$00,$41,$00,$00,$21,$20,$20,$00,$00,$10,$00,$31

;; [$8C00 :: 0x2CC00]

.byte $00,$00,$20,$31,$00,$73,$00,$00,$00,$31,$30,$30,$40,$00,$00,$31
.byte $20,$21,$20,$20,$42,$00,$00,$00,$21,$21,$00,$00,$20,$20,$21,$00
.byte $00,$00,$00,$62,$00,$00,$31,$31,$21,$21,$10,$10,$20,$31,$00,$00
.byte $00,$00,$62,$00,$00,$00,$00,$52,$50,$00,$00,$41,$30,$30,$20,$31
.byte $41,$21,$00,$00,$30,$30,$21,$00,$21,$31,$21,$31,$30,$30,$40,$41
.byte $00,$52,$00,$00,$31,$00,$00,$20,$00,$40,$31,$00,$00,$00,$41,$00
.byte $00,$00,$21,$20,$20,$20,$21,$20,$30,$31,$00,$00,$20,$10,$21,$00
.byte $31,$00,$00,$00,$00,$00,$00,$31,$20,$00,$00,$11,$00,$00,$62,$00
.byte $00,$00,$21,$21,$00,$31,$00,$20,$40,$31,$00,$00,$62,$00,$00,$00
.byte $00,$30,$00,$21,$21,$20,$10,$10,$00,$00,$73,$00,$00,$00,$21,$42
.byte $00,$88,$00,$00,$00,$21,$20,$10,$00,$20,$20,$21,$21,$00,$00,$20
.byte $30,$20,$21,$00,$00,$00,$30,$21,$20,$20,$20,$11,$00,$30,$21,$00
.byte $20,$21,$00,$00,$41,$00,$20,$00,$00,$10,$20,$21,$31,$20,$00,$10
.byte $30,$00,$21,$00,$00,$00,$20,$11,$00,$40,$00,$52,$21,$40,$30,$30
.byte $00,$40,$00,$32,$00,$20,$20,$42,$00,$72,$00,$00,$20,$41,$00,$00
.byte $41,$21,$00,$00,$62,$11,$00,$00,$20,$00,$11,$00,$52,$00,$11,$00

;; [$8D00 :: 0x2CD00]

.byte $00,$00,$21,$00,$00,$20,$11,$00,$11,$22,$11,$00,$20,$11,$00,$00
.byte $74,$00,$00,$00,$40,$41,$00,$00,$30,$20,$41,$00,$00,$00,$00,$61
.byte $30,$40,$40,$21,$10,$10,$11,$00,$00,$00,$11,$41,$50,$21,$00,$00
.byte $30,$40,$41,$00,$00,$00,$42,$31,$42,$20,$42,$00,$21,$11,$20,$00
.byte $42,$00,$00,$20,$11,$50,$00,$00,$11,$00,$50,$00,$11,$00,$43,$00
.byte $11,$00,$42,$00,$00,$00,$00,$21,$00,$30,$30,$11,$11,$20,$20,$00
.byte $00,$71,$11,$00,$76,$00,$21,$00,$00,$20,$00,$41,$21,$21,$21,$21
.byte $70,$60,$11,$00,$20,$00,$00,$31,$00,$62,$00,$00,$00,$60,$21,$00
.byte $82,$00,$00,$00,$00,$00,$00,$00
; ========== monster min/max counts (122 * 4 bytes) ($8BA0-$8D87) END ==========


; ========== weapon palettes offset (53 bytes) ($8D88-$8DBD) START ==========
; by weapon( from Knife(3Ah(00h)) to Yoichi Bow(6Fh(35h))
; bank_00 -> $9700,X $9780,X $9800,X
;; [$8D88 :: 0x2CD88]
.byte $60,$65,$67,$63,$6E,$6D,$6B,$6F
.byte $60,$67,$70,$6A,$69,$61,$63,$73,$60,$64,$67,$70,$6F,$61,$6A,$71
.byte $63,$6D,$64,$67,$71,$68,$66,$62,$6F,$61,$6A,$63,$6B,$6C,$60,$60
.byte $64,$67,$6F,$69,$62,$63,$6F,$60,$67,$74,$61,$6A,$69,$72
; ========== weapon palettes offset (53 bytes) ($8D88-$8DBD) END ==========


; ========== monster widths ($8DBE-$8DCD) START ==========
;; [$8DBE :: 0x2CDBE]
.byte $04,$04
.byte $04,$04,$06,$06,$06,$06,$06,$0C,$0C,$0C,$0C,$0C,$0C,$12
; ========== monster widths ($8DBE-$8DCD) END ==========


; ========== monster heights ($8DCE-$8DDD) START ==========
;; [$8DCE :: 0x2CDCE]
.byte $04,$04
.byte $06,$06,$06,$06,$06,$06,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C
; ========== monster heights ($8DCE-$8DDD) END ==========


; ========== boss tilemaps (6 * 144 bytes) ($8DDE-$9215) START ==========
;; [$8DDE :: 0x2CDDE]
.byte $00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$20,$21

;; [$8E00 :: 0x2CE00]

.byte $00,$00,$00,$00,$00,$00,$00,$00,$22,$23,$24,$25,$26,$27,$28,$29
.byte $2A,$00,$2B,$2C,$2D,$2E,$2F,$30,$31,$32,$00,$00,$33,$34,$35,$36
.byte $37,$38,$39,$3A,$3B,$3C,$00,$00,$3D,$3E,$3F,$40,$41,$42,$43,$44
.byte $45,$46,$00,$00,$47,$48,$49,$4A,$4B,$4C,$4D,$4E,$4F,$50,$00,$00
.byte $51,$52,$53,$54,$55,$56,$86,$87,$88,$00,$00,$00,$00,$00,$89,$8A
.byte $00,$00,$8B,$8C,$8D,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $58,$59,$5A,$00,$00,$00,$5B,$5C,$5D,$00,$00,$5E,$5F,$60,$61,$62
.byte $63,$64,$65,$66,$67,$00,$00,$00,$00,$68,$69,$6A,$6B,$6C,$6D,$6E
.byte $00,$00,$00,$00,$00,$00,$6F,$70,$71,$72,$73,$00,$00,$00,$00,$00
.byte $00,$00,$74,$75,$76,$77,$78,$00,$00,$00,$00,$00,$00,$00,$00,$79
.byte $7A,$7B,$7C,$00,$00,$00,$00,$00,$00,$00,$00,$7D,$7E,$7F,$80,$81
.byte $82,$00,$00,$00,$00,$00,$00,$83,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$84,$85,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

;; [$8F00 :: 0x2CF00]

.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$90,$91,$92,$93,$94,$00,$00
.byte $00,$00,$00,$00,$00,$95,$96,$97,$98,$99,$9A,$00,$00,$00,$00,$00
.byte $9B,$9C,$9D,$9E,$9F,$A0,$A1,$00,$00,$00,$00,$00,$A2,$A3,$A4,$A5
.byte $A6,$A7,$A8,$00,$00,$00,$00,$00,$00,$A9,$AA,$AB,$AC,$AD,$AE,$AF
.byte $00,$00,$00,$00,$00,$B0,$B1,$B2,$B3,$B4,$B5,$B6,$00,$00,$00,$00
.byte $00,$B7,$B8,$B9,$BA,$BB,$BC,$00,$00,$00,$00,$00,$BD,$BE,$BF,$C0
.byte $C1,$C2,$00,$00,$00,$00,$00,$00,$C4,$C5,$C6,$00,$C7,$C3,$8E,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$C8,$C9,$CA,$CB,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$CC,$CD,$CE,$CF,$D0,$D1,$D2,$00,$00,$00,$00
.byte $00,$D3,$D4,$D5,$D6,$D7,$D8,$D9,$DA,$00,$00,$00,$00,$DB,$DC,$DD
.byte $DE,$DF,$E0,$E1,$E2,$00,$00,$00,$00,$E3,$E4,$E5,$E6,$E7,$E8,$00
.byte $E9,$00,$00,$00,$00,$EA,$EB,$EC,$ED,$EE,$EF,$00,$00,$00,$00,$00
.byte $00,$F0,$F1,$F2,$F3,$F4,$F5,$F6,$F7,$00,$00,$00,$00,$F8,$F9,$FA

;; [$9000 :: 0x2D000]

.byte $FB,$FC,$FD,$FE,$00,$00,$00,$00,$00,$00,$00,$FF,$57,$8F,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$20,$21,$22,$23,$24,$00
.byte $00,$00,$00,$00,$00,$00,$25,$26,$27,$28,$29,$00,$00,$00,$00,$00
.byte $00,$2A,$2B,$2C,$2D,$2E,$2F,$30,$00,$00,$00,$00,$00,$31,$32,$33
.byte $34,$35,$36,$37,$00,$00,$00,$00,$00,$38,$39,$3A,$3B,$3C,$3D,$3E
.byte $00,$00,$00,$00,$00,$3F,$40,$41,$42,$43,$44,$45,$00,$00,$00,$00
.byte $00,$46,$47,$48,$49,$4A,$4B,$4C,$00,$00,$00,$00,$00,$4D,$4E,$4F
.byte $50,$51,$52,$53,$00,$00,$00,$00,$00,$00,$54,$55,$00,$56,$57,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$58,$59
.byte $00,$00,$5A,$5B,$00,$00,$00,$00,$00,$5C,$5D,$5E,$5F,$60,$61,$62
.byte $00,$00,$00,$00,$63,$64,$65,$66,$67,$68,$69,$6A,$00,$00,$00,$00
.byte $6B,$6C,$6D,$6E,$6F,$70,$71,$72,$00,$00,$00,$00,$73,$74,$75,$76
.byte $77,$78,$79,$7A,$7B,$7C,$00,$7D,$7E,$00,$7F,$80,$81,$82,$83,$84

;; [$9100 :: 0x2D100]

.byte $85,$86,$00,$00,$00,$00,$87,$88,$89,$8A,$8B,$00,$00,$00,$00,$00
.byte $00,$00,$8C,$8D,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$8F,$90,$00,$00,$00,$00,$00,$00,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$91,$92,$93,$94,$00,$00,$96,$00,$00
.byte $00,$00,$00,$00,$00,$97,$98,$99,$9A,$9B,$9C,$9D,$9E,$9F,$FF,$A0
.byte $00,$00,$00,$00,$00,$00,$00,$00,$A1,$A2,$A3,$A4,$A5,$A6,$A7,$A8
.byte $A9,$00,$00,$B4,$B5,$00,$00,$00,$00,$00,$AA,$AB,$AC,$AD,$AE,$AF
.byte $B0,$B1,$B2,$B3,$B4,$C2,$C3,$00,$00,$00,$B6,$B7,$B8,$B9,$BA,$BB
.byte $BC,$BD,$BE,$BF,$C0,$C1,$C2,$C3,$00,$00,$00,$00,$C4,$C5,$C6,$C7
.byte $C8,$C9,$CA,$CB,$CC,$CD,$CE,$CF,$D0,$00,$00,$00,$00,$D1,$D2,$D3
.byte $D4,$D5,$D6,$D7,$D8,$D9,$DA,$DB,$DC,$DD,$DE,$DF,$00,$00,$00,$E1
.byte $E2,$E3,$E4,$E5,$E6,$E7,$E8,$E9,$00,$EB,$00,$00,$00,$00,$00,$00
.byte $00,$EC,$00,$ED,$EE,$EF,$F0,$F1,$F2,$F3,$F4,$00,$00,$00,$00,$00
.byte $00,$00,$00,$F5,$00,$F6,$00,$F7,$00,$F8,$F9,$FA,$FB,$00,$00,$00

;; [$9200 :: 0x2D200]

.byte $00,$00,$00,$00,$00,$FC,$00,$00,$00,$FD,$00,$00,$EB,$FE,$00,$00
.byte $00,$00,$00,$00,$00,$00
; ========== boss tilemaps (6 * 144 bytes) ($8DDE-$9215) END ==========


; ========== (??? * 9 bytes) ($9216-$9263) START ==========
;; [$9216 :: 0x2D216]
.byte $00,$00,$15,$15,$51,$50,$05,$50,$00,$55
.byte $51,$54,$04,$40,$50,$05,$00,$00,$00,$00,$00,$00,$00,$54,$05,$40
.byte $00,$00,$01,$04,$10,$51,$45,$00,$00,$00,$00,$00,$50,$00,$00,$00
.byte $00,$00,$00,$00,$00,$10,$00,$00,$00,$00,$00,$00,$00,$04,$05,$55
.byte $01,$41,$40,$50,$00,$00,$00,$00,$00,$00,$2B,$00,$EE,$EF,$F0,$F1
.byte $F2,$F3,$F4,$00
;; [$9264 :: 0x2D264] (6 * 6 bytes)
.byte $00,$08,$00,$08,$00,$08,$F8,$00,$08,$F8,$00,$08
.byte $FC,$04,$FC,$04,$FC,$04,$00,$00,$08,$08,$10,$10,$08,$08,$08,$10
.byte $10,$10,$F8,$F8,$00,$00,$08,$08
;; [$9288 :: 0x2D288] (8 * 6 bytes) (6 * 6 bytes ??)
.byte $00,$01,$02,$03,$04,$05
.byte $00,$01,$02,$03,$06,$07
.byte $00,$01,$08,$09,$0A,$0B
.byte $00,$0F,$02,$11,$06,$07
.byte $0E,$0F,$10,$11,$12,$13
.byte $00,$01


; ========== status info (4 * 15 bytes) ($92A8-$92F3) START ==========
;; [$92A8 :: 0x2D2A8] (8 * 6 bytes)
.byte $0C,$0D,$06,$07,$14,$15,$16,$17
.byte $18,$19,$1A,$1B,$1C,$1D,$1E,$1F,$00,$09,$01,$0A,$02,$03,$0C,$04
.byte $0F,$0B,$0E,$0D,$05,$06,$07,$F6,$F6,$F7,$F0,$F8,$F9,$F2,$FA,$F5
.byte $F1,$F4,$F3,$FB,$FC,$FD,$00,$02,$02,$02,$02,$02,$02,$02,$00,$02
.byte $02,$00,$00,$03,$04,$FF,$FF,$00,$01,$01,$02,$05,$03,$06,$04,$FF
.byte $FF,$FF,$FF,$FF
; ========== status info (4 * 15 bytes) ($92A8-$92F3) END ==========


;; [$92F4 :: 0x2D2F4] (3 * 6 bytes)
.byte $00,$01,$02,$03,$04,$05,$00,$01,$02,$03,$06,$07

;; [$9300 :: 0x2D300]

.byte $20,$21,$22,$23,$24,$25


; ========== battle songs ($9306-$930A) START ==========
;; [$9306 :: 0x2D306]
.byte $52,$53,$54,$55,$56
; ========== battle sound effects ($930B-$9332) START ==========
;; [$930B :: 0x2D30B]
.byte $00,$01,$05,$08,$04
.byte $04,$1F,$03,$02,$06,$07,$00,$00,$0A,$1D,$00,$0B,$0C,$09,$11,$20
.byte $0D,$16,$13,$14,$15,$0E,$0E,$0F,$0F,$0E,$19,$1C,$1C,$10,$18,$10
.byte $17,$05,$17

.byte $00,$00,$00,$02,$01,$02,$02,$01,$00,$00,$00,$FB,$FF
.byte $00,$03,$03,$01,$01,$02,$02,$02,$02,$02,$01,$01,$02,$07,$07,$08

; ========== spell targeting (1 bit per sepll) ($9350-$9354) START ==========
;; [$9350 :: 0x2D350]
.byte $FF,$FF,$01,$E0,$F7
.byte $50,$51,$52,$53,$00,$51,$50,$53,$52,$01,$53
.byte $50,$50,$50,$00,$50,$51,$51,$50,$00,$51,$50,$50,$51,$02,$52,$53
.byte $53,$53,$02,$53,$52,$53,$53,$02,$53,$53,$53,$52,$02,$53,$52,$53
.byte $53,$02,$54,$54,$54,$54,$02,$55,$55,$55,$55,$02,$56,$56,$56,$56
.byte $02,$57,$57,$57,$57,$02,$54,$00,$55,$00,$00,$56,$57,$00,$00,$00
.byte $02,$02,$02,$02,$42,$42,$42,$42,$02,$42,$82,$C2,$08,$F8,$F0,$00
.byte $10,$F8,$FC,$04,$FC,$0A,$08,$02,$31,$04,$00,$33,$04,$02,$35,$04
.byte $00,$37,$04,$04,$39,$04,$00,$3B,$04,$05,$3D,$04,$00,$3F,$04,$00
.byte $08,$00,$00,$08,$52,$53,$00,$51,$50,$53,$52,$01,$53,$50
; $93DE - weapon type ?? (action type ??)
.byte $00			; 93DE	fist
.byte $00
.byte $01,$01,$01,$01,$01
.byte $03			; 93E5	bow
; $93E6 - 
.byte $01,$03,$02,$06,$05
; $93EB	-
.byte $01,$02,$02,$06,$05
.byte $01,$04,$02,$02,$05,$01,$06,$02,$02,$05,$00,$00,$08,$08,$10,$10

;; [$9400 :: 0x2D400]

.byte $18,$18,$20,$20,$28,$28,$00,$00,$08,$08,$10,$10,$18,$18,$20,$20
.byte $28,$28,$00,$08,$08,$10,$10,$18,$18,$18,$18,$20,$20,$20,$00,$00
.byte $00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$00,$08,$00,$08,$08,$18
.byte $08,$28,$00,$20,$10,$08,$20,$10,$00,$00,$08,$08,$10,$10,$10,$10
.byte $18,$18,$18,$18,$08,$00,$08,$00,$08,$00,$08,$00,$00,$08,$00,$00
.byte $08,$08,$00,$08,$08,$08,$08,$10,$08,$10,$00,$00,$08,$08,$00,$00
.byte $08,$08,$00,$00,$08,$08,$00,$08,$08,$00,$08,$08,$00,$08,$08,$00
.byte $08,$10,$00,$08,$10,$02,$05,$02,$11,$14,$44,$45,$46,$47,$48,$49
.byte $4A,$4B,$4C,$4D,$4E,$4F,$45,$44,$47,$46,$49,$48,$4B,$4A,$4D,$4C
.byte $4F,$4E,$44,$45,$46,$44,$44,$46,$45,$45,$46,$45,$44,$44,$45,$46
.byte $47,$48,$49,$4A,$4B,$44,$45,$46,$47,$45,$47,$47,$49,$4A,$4B,$44
.byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$45,$46,$47,$47,$46,$46,$47
.byte $45,$44,$44,$45,$44,$45,$45,$46,$46,$47,$47,$47,$46,$45,$4B,$4A
.byte $49,$48,$44,$44,$44,$45,$45,$46,$48,$49,$60,$61,$62,$63,$64,$65
.byte $66,$67,$68,$69,$6A,$6B,$48,$48,$48,$49,$49,$49,$4A,$4A,$4A,$44
.byte $45,$46,$47,$48,$49,$24,$12,$00,$00,$00,$02,$02,$02,$02,$02,$02

;; [$9500 :: 0x2D500]

.byte $02,$02,$02,$02,$02,$02,$42,$42,$42,$42,$42,$42,$42,$42,$42,$42
.byte $42,$42,$02,$02,$02,$42,$02,$42,$42,$02,$02,$42,$42,$02,$02,$02
.byte $02,$02,$02,$02,$02,$82,$82,$82,$82,$82,$02,$82,$02,$02,$02,$02
.byte $42,$82,$C2,$02,$42,$82,$C2,$02,$02,$02,$02,$02,$C2,$C2,$82,$82
.byte $C2,$C2,$82,$82,$C2,$42,$C2,$42,$C2,$42,$C2,$C2,$C2,$C2,$C2,$C2
.byte $C2,$C2,$42,$82,$C2,$02,$C2,$02,$02,$02,$02,$02,$02,$02,$02,$02
.byte $02,$02,$02,$02,$02,$02,$42,$82,$C2,$42,$82,$C2,$42,$82,$C2,$42
.byte $42,$42,$42,$42,$42,$00,$01,$00,$00,$00,$00,$08,$00,$08,$00,$08
.byte $00,$08,$00,$08,$00,$08,$00,$08,$00,$08,$00,$08,$00,$08,$00,$08
.byte $00,$08,$0A,$0A,$12,$08,$12,$00,$08,$12,$18,$02,$11,$1A,$00,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$08,$00,$08,$00
.byte $08,$08,$10,$10,$18,$20,$20,$28,$10,$18,$10,$18,$00,$08,$10,$18
.byte $00,$08,$10,$18,$08,$08,$08,$08,$08,$08,$08,$00,$08,$00,$00,$08
.byte $00,$08,$08,$00,$08,$00,$08,$00,$00,$00,$00,$08,$00,$08,$00,$08
.byte $00,$08,$00,$08,$00,$08,$08,$00,$08,$08,$00,$08,$08,$00,$08,$00
.byte $00,$00,$00,$00,$00,$00,$00,$00,$02,$00,$00,$00,$00,$00,$00,$00



; ========== battle graphics code ($9600-$BFFF) START ==========
;; [$9600 :: 0x2D600]
; Subroutine list
	JMP $9D63		; 9600	$4C $63 $9D
	JMP $9D68		; 9603	$4C $68 $9D
	JMP Apply_palettes	; 9606	$4C $7C $9D
	JMP $9D58		; 9609	$4C $58 $9D
	JMP $9D5B		; 960C	$4C $5B $9D
	JMP $9DA2		; 960F	$4C $A2 $9D	tile copy ppu
	JMP $A5BA		; 9612	$4C $BA $A5
	JMP $A6A2		; 9615	$4C $A2 $A6
	JMP $9A30		; 9618	$4C $30 $9A
	JMP $A970		; 961B	$4C $70 $A9
	JMP $B071		; 961E	$4C $71 $B0
	JMP $9CEE		; 9621	$4C $EE $9C
	JMP $ABDE		; 9624	$4C $DE $AB
	JMP $ADBF		; 9627	$4C $BF $AD
	JMP $9E79		; 962A	$4C $79 $9E
	JMP $AF32		; 962D	$4C $32 $AF
	JMP Status_move		; 9630	$4C $CB $AF	status animation ?? From FA88
	JMP $AE6E		; 9633	$4C $6E $AE
	JMP $AEF2		; 9636	$4C $F2 $AE
; End of Subroutine list

	JSR $96C3		; 9639	$20 $C3 $96
	JSR $97D5		; 963C	$20 $D5 $97
	JSR $FBC3		; 963F	$20 $C3 $FB
	JSR $983D		; 9642	$20 $3D $98
	JSR $FB17		; 9645	$20 $17 $FB
	LDA $7B4C		; 9648	$AD $4C $7B
	AND #$03		; 964B	$29 $03
	LDX #$0E		; 964D	$A2 $0E
	JSR Multi		; 964F	$20 $79 $FC
	LDA $02			; 9652	$A5 $02
	ADC #$80		; 9654	$69 $80
	STA $03			; 9656	$85 $03
	LDA #$00		; 9658	$A9 $00
	STA $02			; 965A	$85 $02
	STA $00			; 965C	$85 $00
	LDA #$12		; 965E	$A9 $12
	STA $01			; 9660	$85 $01
	JSR $FB62		; 9662	$20 $62 $FB
	JSR $FB84		; 9665	$20 $84 $FB
	JSR $976C		; 9668	$20 $6C $97
	JSR $A1E4		; 966B	$20 $E4 $A1
	JSR $A1F9		; 966E	$20 $F9 $A1
	JSR $9E9F		; 9671	$20 $9F $9E
	JSR $9EFA		; 9674	$20 $FA $9E
	LDX #$00		; 9677	$A2 $00
	LDA $7B72		; 9679	$AD $72 $7B
	CMP #$09		; 967C	$C9 $09
	BCC L2D686		; 967E	$90 $06
	BIT $7B48		; 9680	$2C $48 $7B
	BMI L2D686		; 9683	$30 $01
	INX			; 9685	$E8
L2D686:
	LDA $9306,X		; 9686	$BD $06 $93
	STA $E0			; 9689	$85 $E0
	JSR Copy_OAM		; 968B	$20 $4E $9E
	LDA #$1E		; 968E	$A9 $1E
	STA $3C			; 9690	$85 $3C
	STA PpuMask_2001	; 9692	$8D $01 $20
	JSR $A04E		; 9695	$20 $4E $A0
	LDX $7B49		; 9698	$AE $49 $7B
	LDY #$09		; 969B	$A0 $09
	JSR Set_wpn_pal		; 969D	$20 $03 $FC
	JSR $9E54		; 96A0	$20 $54 $9E
	; PPU set Some data : ??
	JSR $9FAE		; 96A3	$20 $AE $9F
	JSR $A3BD		; 96A6	$20 $BD $A3
	JSR $9B43		; 96A9	$20 $43 $9B
	JSR $A08D		; 96AC	$20 $8D $A0
	LDA #$00		; 96AF	$A9 $00
	STA $79B5		; 96B1	$8D $B5 $79
	LDA #$30		; 96B4	$A9 $30
	STA $79B7		; 96B6	$8D $B7 $79
	JSR Apply_OAM_pal	; 96B9	$20 $33 $9E
	LDA #$08		; 96BC	$A9 $08
	STA $36			; 96BE	$85 $36
	JMP $FB06		; 96C0	$4C $06 $FB
; End of

; Name	:
; Marks	:
	JSR $973E		; 96C3	$20 $3E $97
	JSR $FA2A		; 96C6	$20 $2A $FA	Wait NMI
	JSR Apply_palettes	; 96C9	$20 $7C $9D
	LDA #$90		; 96CC	$A9 $90
	STA PpuControl_2000	; 96CE	$8D $00 $20
	STA $3A			; 96D1	$85 $3A
	STA $3B			; 96D3	$85 $3B
	LDA #$00		; 96D5	$A9 $00
	STA PpuMask_2001	; 96D7	$8D $01 $20
	STA $3C			; 96DA	$85 $3C
	STA $38			; 96DC	$85 $38
	STA $39			; 96DE	$85 $39
	STA $37			; 96E0	$85 $37
	LDX #$FF		; 96E2	$A2 $FF
	STX $36			; 96E4	$86 $36
	TAY			; 96E6	$A8
	JSR $972B		; 96E7	$20 $2B $97
	LDY #$27		; 96EA	$A0 $27
L2D6EC:
	; PPU set #$00(zero) : ($1100-$11FF)
	JSR $9D68		; 96EC	$20 $68 $9D
	DEY			; 96EF	$88
	BNE L2D6EC		; 96F0	$D0 $FA
	LDY #$04		; 96F2	$A0 $04
	JSR $972B		; 96F4	$20 $2B $97
	LDX #$60		; 96F7	$A2 $60
	JSR $9D68		; 96F9	$20 $68 $9D
	LDY #$26		; 96FC	$A0 $26
	STY $01			; 96FE	$84 $01
	JSR $9D63		; 9700	$20 $63 $9D
	LDX #$60		; 9703	$A2 $60
	JSR $9D68		; 9705	$20 $68 $9D
	LDY #$08		; 9708	$A0 $08
	JSR $972B		; 970A	$20 $2B $97
	LDX #$26		; 970D	$A2 $26
	STX $01			; 970F	$86 $01
	LDX #$20		; 9711	$A2 $20
	JSR $9D63		; 9713	$20 $63 $9D
L2D716:
	LDA $97D1,X		; 9716	$BD $D1 $97
	STA $0200,X		; 9719	$9D $00 $02
	INX			; 971C	$E8
	CPX #$04		; 971D	$E0 $04
	BNE L2D716		; 971F	$D0 $F5
	LDX #$FC		; 9721	$A2 $FC
	JSR $9DE9		; 9723	$20 $E9 $9D
	JSR $974F		; 9726	$20 $4F $97
	LDY #$0C		; 9729	$A0 $0C
; Name	: is subroutine ??
	LDA $97B5,Y		; 972B	$B9 $B5 $97
	STA $00			; 972E	$85 $00
	LDA $97B6,Y		; 9730	$B9 $B6 $97
	STA $01			; 9733	$85 $01
	LDA $97B7,Y		; 9735	$B9 $B7 $97
	LDX $97B8,Y		; 9738	$BE $B8 $97
	JMP $9D63		; 973B	$4C $63 $9D
; End of

; Name	:
; Marks	:
	LDX #$00		; 973E	$A2 $00
	LDY #$20		; 9740	$A0 $20
	LDA #$0F		; 9742	$A9 $0F
L2D744:
	STA $79A8,X		; 9744	$9D $A8 $79
	INX			; 9747	$E8
	DEY			; 9748	$88
	BNE L2D744		; 9749	$D0 $F9		loop
	RTS			; 974B	$60
; End of

.byte $20,$3F,$9E

; Name	:
; Marks	:
	LDY #$10		; 974F	$A0 $10
	JSR $972B		; 9751	$20 $2B $97
	LDY #$14		; 9754	$A0 $14
	JSR $972B		; 9756	$20 $2B $97
	JMP Wait_NMI_end	; 9759	$4C $46 $FD
; End of

.byte $20,$3F,$9E,$A0
.byte $10,$20,$2B,$97,$A0,$18,$20,$2B,$97,$4C,$46,$FD
; Name	:
; Marks	:
	LDX #$00		; 976C	$A2 $00
	LDA #$FF		; 976E	$A9 $FF
L2D770:
	STA $79C8,X		; 9770	$9D $C8 $79
	INX			; 9773	$E8
	CPX #$80		; 9774	$E0 $80
	BNE L2D770		; 9776	$D0 $F8
	LDA #$00		; 9778	$A9 $00
	STA $00			; 977A	$85 $00
	STA $01			; 977C	$85 $01
	LDX #$10		; 977E	$A2 $10
	LDA #$03		; 9780	$A9,$03
	LDY #$02		; 9782	$A0 $02
	JSR $A10F		; 9784	$20 $0F $A1
	LDA #$08		; 9787	$A9 $08
	STA $00			; 9789	$85 $00
	LDA #$03		; 978B	$A9 $03
	STA $01			; 978D	$85 $01
	LDX #$0E		; 978F	$A2 $0E
	LDA #$06		; 9791	$A9 $06
	LDY #$02		; 9793	$A0 $02
	JSR $A10F		; 9795	$20 $0F $A1
	LDA #$00		; 9798	$A9 $00
	STA $0C			; 979A	$85 $0C
L2D79C:
	LDA $0C			; 979C	$A5 $0C
	JSR $A205		; 979E	$20 $05 $A2
	INC $0C			; 97A1	$E6 $0C
	LDA $0C			; 97A3	$A5 $0C
	CMP #$08		; 97A5	$C9 $08
	BNE L2D79C		; 97A7	$D0 $F3
	LDX #$40		; 97A9	$A2 $40
L2D7AB:
	LDA $79C7,X		; 97AB	$BD $C7 $79
	STA $7A07,X		; 97AE	$9D $07 $7A
	DEX			; 97B1	$CA
	BNE L2D7AB		; 97B2	$D0 $F7
	RTS			; 97B4	$60
; data block $97B5-$97D4
.byte $00,$00,$00,$00,$60,$22,$FF,$00,$40,$22,$05
.byte $20,$DF,$06,$FF,$01,$50,$10,$00,$10,$5F,$10,$FF,$01,$58,$10,$FF
.byte $08,$8F,$6D,$23,$F8

; Name	:
; Marks	:
	LDX #$00		; 97D5	$A2 $00
L2D7D7:
	ADC $00,X		; 97D7	$75 $00
	INX			; 97D9	$E8
	BNE L2D7D7		; 97DA	$D0 $FB
.byte $8D,$42,$00
	;STA $0042		; 97DC	$8D $42 $00
	AND #$02		; 97DF	$29 $02
	CLC			; 97E1	$18
	ADC #$03		; 97E2	$69 $03
	STA $0A			; 97E4	$85 $0A
	LDA #$01		; 97E6	$A9 $01
	STA $08			; 97E8	$85 $08
	LDA #$00		; 97EA	$A9 $00
	STA $09			; 97EC	$85 $09
	TAY			; 97EE	$A8
L2D7EF:
	LDA $0A			; 97EF	$A5 $0A
	STA $00			; 97F1	$85 $00
	LDA #$00		; 97F3	$A9 $00
	STA $01			; 97F5	$85 $01
	LDA $08			; 97F7	$A5 $08
	STA $02			; 97F9	$85 $02
	LDA $09			; 97FB	$A5 $09
	STA $03			; 97FD	$85 $03
	JSR $FC98		; 97FF	$20 $98 $FC
	LDA $04			; 9802	$A5 $04
	STA $00			; 9804	$85 $00
	LDA $05			; 9806	$A5 $05
	STA $01			; 9808	$85 $01
	LDA #$00		; 980A	$A9 $00
	STA $02			; 980C	$85 $02
	LDA #$04		; 980E	$A9 $04
	STA $03			; 9810	$85 $03
	JSR $FCC3		; 9812	$20 $C3 $FC
	SEC			; 9815	$38
	LDA $07			; 9816	$A5 $07
	SBC #$02		; 9818	$E9 $02
	ORA $06			; 981A	$05 $06
	BEQ L2D82C		; 981C	$F0 $0E
	BCC L2D82C		; 981E	$90 $0C
	LDA #$00		; 9820	$A9 $00
	SBC $06			; 9822	$E5 $06
	STA $06			; 9824	$85 $06
	LDA #$04		; 9826	$A9 $04
	SBC $07			; 9828	$E5 $07
	STA $07			; 982A	$85 $07
L2D82C:
	LDA $07			; 982C	$A5 $07
	STA $09			; 982E	$85 $09
	LSR A			; 9830	$4A
	LDA $06			; 9831	$A5 $06
	STA $08			; 9833	$85 $08
	ROR A			; 9835	$6A
	STA $7A48,Y		; 9836	$99 $48 $7A
	INY			; 9839	$C8
	BNE L2D7EF		; 983A	$D0 $B3
	RTS			; 983C	$60
; End of

; Name	:
; Marks	:
	LDX #$00		; 983D	$A2 $00
	LDA #$63		; 983F	$A9 $63
	JSR $FD11		; 9841	$20 $11 $FD
	STA $0A			; 9844	$85 $0A
	LDX #$00		; 9846	$A2 $00
	LDA #$63		; 9848	$A9 $63
	JSR $FD11		; 984A	$20 $11 $FD
	STA $0B			; 984D	$85 $0B
	LDX #$00		; 984F	$A2 $00
	STX $00			; 9851	$86 $00
	LDA $7B48		; 9853	$AD $48 $7B
	AND #$7F		; 9856	$29 $7F
	PHA			; 9858	$48
	TAY			; 9859	$A8
	LDA $8A20,Y		; 985A	$B9 $20 $8A
	CMP $0A			; 985D	$C5 $0A
	BEQ L2D865		; 985F	$F0 $04
	BCC L2D865		; 9861	$90 $02
	INC $00			; 9863	$E6 $00
L2D865:
	LDY #$21		; 9865	$A0 $21
	LDA $6100,Y		; 9867	$B9 $00 $61
	CMP $0B			; 986A	$C5 $0B
	BEQ L2D871		; 986C	$F0 $03
	BCC L2D871		; 986E	$90 $01
	INX			; 9870	$E8
L2D871:
	TXA			; 9871	$8A
	EOR $00			; 9872	$45 $00
	BEQ L2D87A		; 9874	$F0 $04
	TXA			; 9876	$8A
	ASL A			; 9877	$0A
	ORA $00			; 9878	$05 $00
L2D87A:
	STA $7B4A		; 987A	$8D $4A $7B
	PLA			; 987D	$68
	LDX #$08		; 987E	$A2 $08
	JSR Multi		; 9880	$20 $79 $FC
	LDA $02			; 9883	$A5 $02
	ADC #$20		; 9885	$69 $20
	STA $0A			; 9887	$85 $0A
	LDA $03			; 9889	$A5 $03
 	ADC #$86		; 988B	$69 $86
	STA $0B			; 988D	$85 $0B
	LDA $7B48		; 988F	$AD $48 $7B
	ROL A			; 9892	$2A
	LDA #$00		; 9893	$A9 $00
	ADC #$06		; 9895	$69 $06
	TAY			; 9897	$A8
	LDA ($0A),Y		; 9898	$B1 $0A
	LDX #$04		; 989A	$A2 $04
	JSR Multi		; 989C	$20 $79 $FC
	LDA $02			; 989F	$A5 $02
	ADC #$A0		; 98A1	$69 $A0
	STA $0C			; 98A3	$85 $0C
	LDA $03			; 98A5	$A5 $03
	ADC #$8B		; 98A7	$69 $8B
	STA $0D			; 98A9	$85 $0D
	LDY #$05		; 98AB	$A0 $05
	LDA ($0A),Y		; 98AD	$B1 $0A
	LDX #$04		; 98AF	$A2 $04
	JSR Multi		; 98B1	$20 $79 $FC
	LDA $02			; 98B4	$A5 $02
	ADC #$A0		; 98B6	$69 $A0
	STA $0E			; 98B8	$85 $0E
	LDA $03			; 98BA	$A5 $03
	ADC #$8A		; 98BC	$69 $8A
	STA $0F			; 98BE	$85 $0F
	LDY #$00		; 98C0	$A0 $00
L2D8C2:
	LDA ($0C),Y		; 98C2	$B1 $0C
	JSR $FD07		; 98C4	$20 $07 $FD
	JSR $FD11		; 98C7	$20 $11 $FD
	STA $7B52,Y		; 98CA	$99 $52 $7B
	LDA ($0E),Y		; 98CD	$B1 $0E
	STA $7B4E,Y		; 98CF	$99 $4E $7B
	INY			; 98D2	$C8
	CPY #$04		; 98D3	$C0 $04
	BNE L2D8C2		; 98D5	$D0 $EB
	LDY #$00		; 98D7	$A0,$00
	LDA ($0A),Y		; 98D9	$B1 $0A
	AND #$07		; 98DB	$29 $07
	STA $7B4C		; 98DD	$8D $4C $7B
	LDA ($0A),Y		; 98E0	$B1 $0A
	LDX #$00		; 98E2	$A2 $00
L2D8E4:
	STY $0C,X		; 98E4	$94 $0C
	ASL A			; 98E6	$0A
	ROL $0C,X		; 98E7	$36 $0C
	INX			; 98E9	$E8
	CPX #$04		; 98EA	$E0 $04
	BNE L2D8E4		; 98EC	$D0 $F6
	ASL A			; 98EE	$0A
	TYA			; 98EF	$98
	ROL A			; 98F0	$2A
	STA $7B4B		; 98F1	$8D $4B $7B
	INY			; 98F4	$C8
	LDA ($0A),Y		; 98F5	$B1 $0A
	JSR $FD07		; 98F7	$20 $07 $FD
	STA $000F,Y		; 98FA	$99 $0F $00
	STX $10,Y		; 98FD	$96 $10
	INY			; 98FF	$C8
	LDA ($0A),Y		; 9900	$B1 $0A
	JSR $FD07		; 9902	$20 $07 $FD
	STA $0010,Y		; 9905	$99 $10 $00
	STX $11,Y		; 9908	$96 $11
	INY			; 990A	$C8
	LDA ($0A),Y		; 990B	$B1 $0A
	STA $7B56		; 990D	$8D $56 $7B
	INY			; 9910	$C8
	LDA ($0A),Y		; 9911	$B1 $0A
	STA $7B57		; 9913	$8D $57 $7B
	LDX #$3F		; 9916	$A2 $3F
	LDA #$FF		; 9918	$A9 $FF
L2D91A:
	STA $7B62,X		; 991A	$9D $62 $7B
	DEX			; 991D	$CA
	BPL L2D91A		; 991E	$10 $FA
	LDX #$03		; 9920	$A2 $03
L2D922:
	LDA $7B52,X		; 9922	$BD $52 $7B
	BNE L2D92E		; 9925	$D0 $07
	STA $10,X		; 9927	$95 $10
	LDA #$FF		; 9929	$A9 $FF
	STA $7B4E,X		; 992B	$9D $4E $7B
L2D92E:
	DEX			; 992E	$CA
	BPL L2D922		; 992F	$10 $F1
	LDA #$0F		; 9931	$A9 $0F
	STA $04			; 9933	$85 $04
	LDA #$00		; 9935	$A9 $00
	STA $05			; 9937	$85 $05
	LDA #$FF		; 9939	$A9 $FF
	STA $06			; 993B	$85 $06
	LDA #$75		; 993D	$A9 $75
	STA $07			; 993F	$85 $07
	LDA #$01		; 9941	$A9 $01
	STA $02			; 9943	$85 $02
	LDA #$04		; 9945	$A9 $04
	JSR $FB0C		; 9947	$20 $0C $FB
	LDY #$00		; 994A	$A0 $00
L2D94C:
	LDX $7600,Y		; 994C	$BE $00 $76
	LDA $7B4E,X		; 994F	$BD $4E $7B
	STA $7604,Y		; 9952	$99 $04 $76
	LDA $7B52,X		; 9955	$BD $52 $7B
	STA $7608,Y		; 9958	$99 $08 $76
	LDA $0C,X		; 995B	$B5 $0C
	STA $760C,Y		; 995D	$99 $0C $76
	INY			; 9960	$C8
	CPY #$04		; 9961	$C0 $04
	BNE L2D94C		; 9963	$D0 $E7
	LDX #$00		; 9965	$A2 $00
	LDA $7B48		; 9967	$AD $48 $7B
	AND #$80		; 996A	$29 $80
	BNE L2D986		; 996C	$D0 $18
L2D96E:
	LDA $7604,X		; 996E	$BD $04 $76
	STA $7B4E,X		; 9971	$9D $4E $7B
	LDA $7608,X		; 9974	$BD $08 $76
	STA $7B52,X		; 9977	$9D $52 $7B
	LDA $760C,X		; 997A	$BD $0C $76
	STA $0C,X		; 997D	$95 $0C
	INX			; 997F	$E8
	CPX #$04		; 9980	$E0 $04
	BNE L2D96E		; 9982	$D0 $EA
	BEQ L2D9B0		; 9984	$F0 $2A
L2D986:
	LDA $10,X		; 9986	$B5 $10
	STA $7610,X		; 9988	$9D $10 $76
	INX			; 998B	$E8
	CPX #$04		; 998C	$E0 $04
	BNE L2D986		; 998E	$D0 $F6
	LDX #$00		; 9990	$A2 $00
	LDY #$03		; 9992	$A0 $03
L2D994:
	LDA $7604,Y		; 9994	$B9 $04 $76
	STA $7B4E,X		; 9997	$9D $4E $7B
	LDA $7608,Y		; 999A	$B9 $08 $76
	STA $7B52,X		; 999D	$9D $52 $7B
	LDA $760C,Y		; 99A0	$B9 $0C $76
	STA $0C,X		; 99A3	$95 $0C
	LDA $7610,Y		; 99A5	$B9 $10 $76
	STA $10,X		; 99A8	$95 $10
	DEY			; 99AA	$88
	INX			; 99AB	$E8
	CPX #$04		; 99AC	$E0 $04
	BNE L2D994		; 99AE	$D0 $E4
L2D9B0:
	LDX #$00		; 99B0	$A2 $00
L2D9B2:
	LDA $10,X		; 99B2	$B5 $10
	CMP #$09		; 99B4	$C9 $09
	BCS L2D9BF		; 99B6	$B0 $07
	INX			; 99B7	$E8
	CPX #$04		; 99B9	$E0 $04
	BNE L2D9B2		; 99BB	$D0 $F5
	BEQ L2D9E2		; 99BD	$F0 $23
L2D9BF:
	STA $10			; 99BF	$85 $10
L2D9C1:
	LDA $7B4E,X		; 99C1	$BD $4E $7B
	STA $7B4E		; 99C4	$8D $4E $7B
	LDA #$01		; 99C7	$A9 $01
	STA $7B52		; 99C9	$8D $52 $7B
	LDX #$01		; 99CC	$A2 $01
L2D9CE:
	LDA #$00		; 99CE	$A9 $00
	STA $10,X		; 99D0	$95 $10
	STA $7B52,X		; 99D2	$9D $52 $7B
	LDA #$FF		; 99D5	$A9 $FF
	STA $7B4E,X		; 99D7	$9D $4E $7B
	INX			; 99DA	$E8
	CPX #$04		; 99DB	$E0 $04
	BNE L2D9CE		; 99DD	$D0 $EF
	JMP L2DA5B		; 99DF	$4C $5B $9A
;
L2D9E2:
	LDX #$03		; 99E2	$A2 $03
L2D9E4:
	LDY $10,X		; 99E4	$B4 $10
	LDA $8DBE,Y		; 99E6	$B9 $BE $8D
	STA $18,X		; 99E9	$95 $18
	LDA $8DCE,Y		; 99EB	$B9 $CE $8D
	STA $1C,X		; 99EE	$95 $1C
	CPY #$02		; 99F0	$C0 $02
	BCS L2D9F8		; 99F2	$B0 $04
	INC $1C,X		; 99F4	$F6 $1C
	INC $1C,X		; 99F6	$F6 $1C
L2D9F8:
	DEX			; 99F8	$CA
	BPL L2D9E4		; 99F9	$10 $E9
	LDX #$03		; 99FB	$A2 $03
L2D9FD:
	LDA $7B52,X		; 99FD	$BD $52 $7B
	STA $14,X		; 9A00	$95 $14
	DEX			; 9A02	$CA
	BPL L2D9FD		; 9A03	$10 $F8
	JSR $9AAD		; 9A05	$20 $AD $9A
	LDX #$07		; 9A08	$A2 $07
L2DA0A:
	LDA $7B72,X		; 9A0A	$BD $72 $7B
	CMP #$02		; 9A0D	$C9 $02
	BCS L2DA1D		; 9A0F	$B0 $0C
	INC $7B92,X		; 9A11	$FE $92 $7B
	INC $7B92,X		; 9A14	$FE $92 $7B
	DEC $7B82,X		; 9A17	$DE $82 $7B
	DEC $7B82,X		; 9A1A	$DE $82 $7B
L2DA1D:
	CMP #$FF		; 9A1D	$C9 $FF
	BEQ L2DA2A		; 9A1F	$F0 $09
	LDA $7B9A,X		; 9A21	$BD $9A $7B
	CLC			; 9A24	$18
	ADC #$02		; 9A25	$69 $02
	STA $7B9A,X		; 9A27	$9D $9A $7B
L2DA2A:
	DEX			; 9A2A	$CA
	BPL L2DA0A		; 9A2B	$10 $DD
	JSR $9A97		; 9A2D	$20 $97 $9A
;9A30
	LDA #$00		; 9A30	$A9 $00
	STA $00			; 9A32	$85 $00
	TAX			; 9A34	$AA
L2DA35:
	STA $7B5A,X		; 9A35	$9D $5A $7B
	INX			; 9A38	$E8
	CPX #$08		; 9A39	$E0 $08
	BNE L2DA35		; 9A3B	$D0 $F8
	DEX			; 9A3D	$CA
L2DA3E:
	LDY $7B62,X		; 9A3E	$BC $62 $7B
	INY			; 9A41	$C8
	BNE L2DA48		; 9A42	$D0 $04
	DEX			; 9A44	$CA
	BPL L2DA3E		; 9A45	$10 $F7
	RTS			; 9A47	$60
; End of
L2DA48:
	TXA			; 9A48	$8A
	LSR A			; 9A49	$4A
	SEC			; 9A4A	$38
	SBC #$02		; 9A4B	$E9 $02
	BCC L2DA5A		; 9A4D	$90 $0B
	ASL A			; 9A4F	$0A
	TAX			; 9A50	$AA
	INX			; 9A51	$E8
	LDA #$01		; 9A52	$A9 $01
L2DA54:
	STA $7B5A,X		; 9A54	$9D $5A $7B
	DEX			; 9A57	$CA
	BPL L2DA54		; 9A58	$10 $FA
L2DA5A:
	RTS			; 9A5A	$60
; End of

L2DA5B:
.byte $A9,$00,$8D,$5A,$7B
.byte $AD,$4E,$7B,$8D,$62,$7B,$A5,$10,$8D,$72,$7B,$C9,$0F,$F0,$14,$A9
.byte $0C,$8D,$82,$7B,$8D,$8A,$7B,$A9,$06,$8D,$92,$7B,$A9,$04,$8D,$9A
.byte $7B,$D0,$14,$A9,$0C,$8D,$82,$7B,$A9,$12,$8D,$8A,$7B,$A9,$06,$8D
.byte $92,$7B,$A9,$02,$8D,$9A,$7B

; Name	:
; Marks	:
	LDA #$00		; 9A97	$A9 $00
	STA $7B4D		; 9A99	$8D $4D $7B
	LDX #$07		; 9A9C	$A2 $07
L2DA9E:
	LDA $7B62,X		; 9A9E	$BD $62 $7B
	STA $7B6A,X		; 9AA1	$9D $6A $7B
	BMI L2DAA9		; 9AA4	$30 $03
	INC $7B4D		; 9AA6	$EE $4D $7B
L2DAA9:
	DEX			; 9AA9	$CA
	BPL L2DA9E		; 9AAA	$10 $F2
	RTS			; 9AAC	$60
; End of

; Name	:
; Marks	;
	LDA #$00		; 9AAD	$A9 $00
	TAX			; 9AAF	$AA
	TAY			; 9AB0	$A8
	STA $02			; 9AB1	$85 $02
	LDA #$06		; 9AB3	$A9 $06
	STA $03			; 9AB5	$85 $03
L2DAB7:
	LDA $14,X		; 9AB7	$B5 $14
	BNE L2DAC1		; 9AB9	$D0 $06
	INX			; 9ABB	$E8
	CPX #$04		; 9ABC	$E0 $04
	BNE L2DAB7		; 9ABE	$D0 $F7
L2DAC0:
	RTS			; 9AC0	$60
; End of
L2DAC1:
	CPY #$08		; 9AC1	$C0 $08
	BCS L2DAC0		; 9AC3	$B0 $FB
	LDA $02			; 9AC5	$A5 $02
	CLC			; 9AC6	$18
	ADC $18,X		; 9AC8	$75 $18
	CMP #$13		; 9ACA	$C9 $13
	BCS L2DAC0		; 9ACC	$B0 $F2
	LDA $10,X		; 9ACE	$B5 $10
	STA $7B72,Y		; 9AD0	$99 $72 $7B
	LDA $7B4E,X		; 9AD3	$BD $4E $7B
	STA $7B62,Y		; 9AD6	$99 $62 $7B
	LDA $0C,X		; 9AD9	$B5 $0C
	STA $7B7A,Y		; 9ADB	$99 $7A $7B
	LDA $02			; 9ADE	$A5 $02
	STA $7B9A,Y		; 9AE0	$99 $9A $7B
	LDA $03			; 9AE3	$A5 $03
	STA $7B92,Y		; 9AE5	$99 $92 $7B
	LDA $18,X		; 9AE8	$B5 $18
	STA $7B8A,Y		; 9AEA	$99 $8A $7B
	STA $00			; 9AED	$85 $00
	LDA $1C,X		; 9AEF	$B5 $1C
	STA $7B82,Y		; 9AF1	$99 $82 $7B
	STA $01			; 9AF4	$85 $01
	LDA $03			; 9AF6	$A5 $03
	CLC			; 9AF8	$18
	ADC $01			; 9AF9	$65 $01
	STA $03			; 9AFB	$85 $03
	CMP #$12		; 9AFD	$C9 $12
	BCC L2DB0C		; 9AFF	$90 $0B
	LDA #$06		; 9B01	$A9 $06
	STA $03			; 9B03	$85 $03
	LDA $02			; 9B05	$A5 $02
	CLC			; 9B07	$18
	ADC $00			; 9B08	$65 $00
	STA $02			; 9B0A	$85 $02
L2DB0C:
	INY			; 9B0C	$C8
	LDA $10,X		; 9B0D	$B5 $10
	CMP #$08		; 9B0F	$C9 $08
	BNE L2DB14		; 9B11	$D0 $01
	INY			; 9B13	$C8
L2DB14:
	DEC $14,X		; 9B14	$D6 $14
	BNE L2DAB7		; 9B16	$D0 $9F
L2DB18:
	LDA $14,X		; 9B18	$B5 $14
	BNE L2DB22		; 9B1A	$D0 $06
	INX			; 9B1C	$E8
	CPX #$04		; 9B1D	$E0 $04
	BNE L2DB18		; 9B1F	$D0 $F7
	RTS			; 9B21	$60
; End of
L2DB22:
.byte $A5,$03,$C9,$06,$F0,$8F,$B5,$1C,$C9,$07,$B0,$06,$A5,$00
.byte $D5,$18,$F0,$83,$A5,$02,$18,$65,$00,$85,$02,$C8,$A9,$06,$85,$03
.byte $4C,$B7,$9A

; Name	:
; Marks	:
	LDX #$00		; 9B43	$A2 $00
L2DB45:
	TXA			; 9B45	$8A
	JSR $ADA2		; 9B46	$20 $A2 $AD
	TAY			; 9B49	$A8
	LDA $6100,Y		; 9B4A	$B9 $00 $61
	AND #$0F		; 9B4D	$29 $0F
	STA $7BBA,X		; 9B4F	$9D $BA $7B
	INX			; 9B52	$E8
	CPX #$04		; 9B53	$E0 $04
	BNE L2DB45		; 9B55	$D0 $EE
	BIT $62F5		; 9B57	$2C $F5 $62
	BPL L2DB5D		; 9B5A	$10 $01
	DEX			; 9B5C	$CA
L2DB5D:
	STX $7BDE		; 9B5D	$8E $DE $7B
	LDY #$03		; 9B60	$A0 $03
L2DB62:
	LDA #$F0		; 9B62	$A9 $F0
	STA $7BCA,Y		; 9B64	$99 $CA $7B
	TYA			; 9B67	$98
	LDX #$1B		; 9B68	$A2 $1B
	JSR Multi		; 9B6A	$20 $79 $FC
	LDA $02			; 9B6D	$A5 $02
	ADC #$2C		; 9B6F	$69 $2C
	STA $7BCE,Y		; 9B71	$99 $CE $7B
	LDA #$00		; 9B74	$A9 $00
	STA $7BD6,Y		; 9B75	$99 $D6 $7B
	STA $7BDA,Y		; 9B78	$99 $DA $7B
	DEY			; 9B7C	$88
	BPL L2DB62		; 9B7D	$10 $E3
	JSR $9C8B		; 9B7F	$20 $8B $9C
	LDX #$03		; 9B82	$A2 $03
L2DB84:
	STX $27			; 9B84	$86 $27
	JSR $ABDE		; 9B86	$20 $DE $AB
	LDX $27			; 9B89	$A6 $27
	DEX			; 9B8B	$CA
	BPL L2DB84		; 8B8C	$10 $F6
	RTS			; 9B8E	$60
; End of

; Name	:
; Marks	:
	LDA $925A		; 9B8F	$AD $5A $92
	STA $00			; 9B92	$85 $00
	LDA $925B		; 9B94	$AD $5B $92
	STA $01			; 9B97	$85 $01
	LDX $7BBA,Y		; 9B99	$BE $BA $7B
	JSR $9CD1		; 9B9C	$20 $D1 $9C
	PHP			; 9B9F	$08
	LDX #$00		; 9BA0	$A2 $00
	PLP			; 9BA2	$28
	BEQ L2DBA6		; 9BA3	$F0 $01
	INX			; 9BA5	$E8
L2DBA6:
	LDA $7BAE,Y		; 9BA6	$B9 $AE $7B
	CMP #$03		; 9BA9	$C9 $03
	BNE L2DBAF		; 9BAB	$D0 $02
	LDX #$03		; 9BAD	$A2 $03
L2DBAF:
	TXA			; 9BAF	$8A
	STA $7BB6,Y		; 9BB0	$99 $B6 $7B
	RTS			; 9BB3	$60
; End of

; Name	:
; Marks	:
	STX $06			; 9BB4	$86 $06
	LDA #$30		; 9BB6	$A9 $30
	JSR Multi		; 9BB8	$20 $79 $FC
	LDA $02			; 9BBB	$A5 $02
	ADC #$7A		; 9BBD	$69 $7A
	STA $00			; 9BBF	$85 $00
	LDA $03			; 9BC1	$A5 $03
	ADC #$7D		; 9BC3	$69 $7D
	STA $01			; 9BC5	$85 $01
	LDY #$08		; 9BC7	$A0 $08
	LDA ($00),Y		; 9BC9	$B1 $00
	AND #$FE		; 9BCB	$29 $FE
	STA $02			; 9BCD	$85 $02
	INY			; 9BCF	$C8
	LDA ($00),Y		; 9BD0	$B1 $00
	AND #$FE		; 9BD2	$29 $FE
	STA $03			; 9BD4	$85 $03
	LDY #$2C		; 9BD6	$A0 $2C
	LDA ($00),Y		; 9BD8	$B1 $00
	AND #$FE		; 9BDA	$29 $FE
	STA $04			; 9BDC	$85 $04
	INY			; 9BDE	$C8
	LDA ($00),Y		; 9BDF	$B1 $00
	AND #$FE		; 9BE1	$29 $FE
	STA $05			; 9BE3	$85 $05
	LDA $02			; 9BE5	$A5 $02
	EOR $04			; 9BE7	$45 $04
	AND $02			; 9BE9	$25 $02
	AND #$DE		; 9BEB	$29 $DE
	STA $00			; 9BED	$85 $00
	LDA $03			; 9BEF	$A5 $03
	EOR $05			; 9BF1	$45 $05
	AND $03			; 9BF3	$25 $03
	AND #$DE		; 9BF5	$29 $DE
	STA $01			; 9BF7	$85 $01
	LDX $06			; 9BF9	$A6 $06
	CPX #$03		; 9BFB	$E0 $03
	BNE L2DC04		; 9BFD	$D0 $05
	LDA $62F5		; 9BFF	$AD $F5 $62
	BMI L2DC1C		; 9C02	$30 $18
L2DC04:
	LDA $02			; 9C04	$A5 $02
	BPL L2DC0C		; 9C06	$10 $04
	LDA #$00		; 9C08	$A9 $00
	BEQ L2DC1C		; 9C0A	$F0 $10
L2DC0C:
	AND #$20		; 9C0C	$29 $20
	BEQ L2DC14		; 9C0E	$F0 $04
	LDA #$02		; 9C10	$A9 $02
	BNE L2DC1C		; 9C12	$D0 $08
L2DC14:
	LDA $03			; 9C14	$A5 $03
	AND #$20		; 9C16	$29 $20
	BEQ L2DC1C		; 9C18	$F0 $02
	LDA #$01		; 9C1A	$A9 $01
L2DC1C:
	STA $7BA2,X		; 9C1C	$9D $A2 $7B
	LDA $02			; 9C1F	$A5 $02
	AND #$DE		; 9C21	$29 $DE
	STA $02			; 9C23	$85 $02
	LDA $03			; 9C25	$A5 $03
	AND #$DE		; 9C27	$29 $DE
	STA $03			; 9C29	$85 $03
	LDY #$0E		; 9C2B	$A0 $0E
	BIT $02			; 9C2D	$24 $02
	BMI L2DC5C		; 9C2F	$30 $2B
	DEY			; 9C31	$88
	BVS L2DC5C		; 9C32	$70 $28
	LDY #$0E		; 9C34	$A0 $0E
L2DC36:
	LDX $92B8,Y		; 9C36	$BE $B8 $92
	JSR $9CD1		; 9C39	$20 $D1 $9C
	BNE L2DC5C		; 9C3C	$D0 $1E
	DEY			; 9C3E	$88
	BNE L2DC36		; 9C3F	$D0 $F5
	LDA $02			; 9C41	$A5 $02
	AND #$1E		; 9C43	$29 $1E
	STA $00			; 9C45	$85 $00
	LDA $03			; 9C47	$A5 $03
	AND #$DE		; 9C49	$29 $DE
	STA $01			; 9C4B	$85 $01
	LDY #$0E		; 9C4D	$A0 $0E
L2DC4F:
	LDX $92B8,Y		; 9C4F	$BE $B8 $92
	JSR $9CD1		; 9C52	$20 $D1 $9C
	BNE L2DC5C		; 9C55	$D0 $05
	DEY			; 9C57	$88
	BNE L2DC4F		; 9C58	$D0 $F5
	LDY #$00		; 9C5A	$A0 $00
L2DC5C:
	LDX $06			; 9C5C	$A6 $06
	TYA			; 9C5E	$98
	STA $7BAA,X		; 9C5F	$9D $AA $7B
	CPY #$00		; 9C62	$C0 $00
	BNE L2DC75		; 9C64	$D0 $0F
	LDA $7BA2,X		; 9C66	$BD $A2 $7B
	AND #$7F		; 9C69	$29 $7F
	BEQ L2DC75		; 9C6B	$F0 $08
	LDY #$0C		; 9C6D	$A0 $0C
	CMP #$02		; 9C6F	$C9 $02
	BEQ L2DC75		; 9C71	$F0 $02
	LDY #$0B		; 9C73	$A0 $0B
L2DC75:
	LDA $92C7,Y		; 9C75	$B9 $C7 $92
	STA $7BA6,X		; 9C78	$9D $A6 $7B
	LDY $7BAA,X		; 9C7B	$BC $AA $7B
	LDA $92D6,Y		; 9C7E	$B9 $D6 $92
	STA $7BAE,X		; 9C81	$9D $AE $7B
	LDA $92E5,Y		; 9C84	$B9 $E5 $92
	STA $7BB2,X		; 9C87	$9D $B2 $7B
	RTS			; 9C8A	$60
; End of

; Name	:
; Marks	: Check back/front row
;	  Set pointers to character sprite data
	LDX #$03		; 9C8B	$A2 $03
L2DC8D:
	TXA			; 9C8D	$8A
	JSR Calc_char_addr	; 9C8E	$20 $A2 $AD
	TAY			; 9C91	$A8
	LDA $6235,Y		; 9C92	$B9 $35 $62	back row/frond row ?
	AND #$01		; 9C95	$29 $01
	STA $7BBE,X		; 9C97	$9D $BE $7B	character row (0=front,1=back)
	DEX			; 9C9A	$CA
	BPL L2DC8D		; 9C9B	$10 $F0		loop
	LDA #$02		; 9C9D	$A9 $02
	STA $2D			; 9C9F	$85 $2D		pointers to character sprite data ($2C-$33)
	STA $2F			; 9CA1	$85 $2F
	STA $31			; 9CA3	$85 $31
	STA $33			; 9CA5	$85 $33
	LDA #$A0		; 9CA7	$A9 $A0
	STA $2C			; 9CA9	$85 $2C
	LDA #$B8		; 9CAB	$A9 $B8
	STA $2E			; 9CAD	$85 $2E
	LDA #$D0		; 9CAF	$A9 $D0
	STA $30			; 9CB1	$85 $30
	LDA #$E8		; 9CB3	$A9 $E8
	STA $32			; 9CB5	$85 $32
	RTS			; 9CB7	$60
; End of

; Name	:
; Marks	:
	LSR A			; 9CB8	$4A
	LSR A			; 9CB9	$4A
	PHA			; 9CBA	$48
	LDA #$00		; 9CBB	$A9 $00
	ROL A			; 9CBD	$2A
	STA $01			; 9CBE	$85 $01
	TXA			; 9CC0	$8A
	LSR A			; 9CC1	$4A
	LSR A			; 9CC2	$4A
	ROL $01			; 9CC3	$26 $01
	STA $00			; 9CC5	$85 $00
	PLA			; 9CC7	$68
	ASL A			; 9CC8	$0A
	ASL A			; 9CC9	$0A
	ASL A			; 9CCA	$0A
	CLC			; 9CCB	$18
	ADC $00			; 9CCC	$65 $00
	STA $00			; 9CCE	$85 $00
	RTS			; 9CD0	$60
; End of

; Name	:
; Marks	:
	LDA $9CDE,X		; 9CD1	$BD $DE $9C
	CPX #$08		; 9CD4	$E0 $08
	BCC L2DCDB		; 9CD6	$90 $03
	BIT $01			; 9CD8	$24 $01
	RTS			; 9CDA	$60
L2DCDB:
; End of
	BIT $00			; 9CDB	$24 $00
	RTS			; 9CDD	$60
; End of

; $9CDE - data block
.byte $01,$02
.byte $04,$08,$10,$20,$40,$80,$01,$02,$04,$08,$10,$20,$40,$80

;9CEE
	JSR $9D06		; 9CEE	$20 $06 $9D
	LDA #$80		; 9CF1	$A9 $80
	STA $00			; 9CF3	$85 $00
	LDA #$04		; 9CF5	$A9 $04
	STA $01			; 9CF7	$85 $01
	LDA #$C0		; 9CF9	$A9 $C0
	STA $02			; 9CFB	$85 $02
	LDA #$89		; 9CFD	$A9 $89
	STA $03			; 9CFF	$85 $03
	LDX #$40		; 9D01	$A2 $40
	JMP $FBAE		; 9D03	$4C $AE $FB
; End of

; Name	:
; Marks	:
	LDA #$02		; 9D06	$A9 $02
	STA $25			; 9D08	$85 $25
	STA $27			; 9D0A	$85 $27
	STA $29			; 9D0C	$85 $29
	STA $2B			; 9D0E	$85 $2B
	LDA #$40		; 9D10	$A9 $40
	STA $24			; 9D12	$85 $24
	LDA #$50		; 9D14	$A9 $50
	STA $26			; 9D16	$85 $26
	LDA #$60		; 9D18	$A9 $60
	STA $28			; 9D1A	$85 $28
	LDA #$70		; 9D1C	$A9 $70
	STA $2A			; 9D1E	$85 $2A
	LDY #$3F		; 9D20	$A0 $3F
	LDA #$F0		; 9D22	$A9 $F0
L2DD24:
	STA ($24),Y		; 9D24	$91 $24
	DEY			; 9D26	$88
	BPL L2DD24		; 9D27	$10 $FB
	LDA #$03		; 9D29	$A9 $03
	STA $0242		; 9D2B	$8D $42 $02	OAM ATTR
	STA $0246		; 9D2E	$8D $46 $02
	STA $024A		; 9D31	$8D $4A $02
	STA $024E		; 9D34	$8D $4E $02
	LDX #$48		; 9D37	$A2 $48
	STX $0241		; 9D39	$8E $41 $02	OAM INDEX
	INX			; 9D3C	$E8
	STX $0245		; 9D3D	$8E $45 $02
	INX			; 9D40	$E8
	STX $0249		; 9D41	$8E $49 $02
	INX			; 9D44	$E8
	STX $024D		; 9D45	$8E $4D $02
	LDY #$00		; 9D48	$A0 $00
L2DD4A:
	LDA ($24),Y		; 9D4A	$B1 $24
	STA ($26),Y		; 9D4C	$91 $26
	STA ($28),Y		; 9D4E	$91 $28
	STA ($2A),Y		; 9D50	$91 $2A
	INY			; 9D52	$C8
	CPY #$10		; 9D53	$C0 $10
	BNE L2DD4A		; 9D55	$D0 $F3
	RTS			; 9D57	$60
; End of

; Name	:
; Marks	:
	JSR Set_PpuAddr_00	; 9D58	$20 $7E $FD
; Name	:
; Marks	:
L2DD5B:
	STY PpuData_2007	; 9D5B	$8C $07 $20
	INY			; 9D5E	$C8
	DEX			; 9D5F	$CA
	BNE L2DD5B		; 9D60	$D0 $F9
	RTS			; 9D62	$60
; End of

; Name	:
; Marks	:
	PHA			; 9D63	$48
	JSR Set_PpuAddr_00	; 9D64	$20 $7E $FD
	PLA			; 9D67	$68
; Name	:
; Marks	:
L2DD68:
	STA PpuData_2007	; 9D68	$8D $07 $20
	DEX			; 9D6B	$CA
	BNE L2DD68		; 9D6C	$D0 $FA
	RTS			; 9D6E	$60
; End of

;9D6F
.byte $A9
.byte $0F,$A2,$1C,$9D,$A8,$79,$20,$03,$9E,$10,$F8,$60

; Name	: Apply_palettes
; Marks	:
Apply_palettes:
	LDA PpuStatus_2002	; 9D7C	$AD $02 $20
	JSR Set_PpuAddr_3F00	; 9D7F	$20 $97 $9D
L2DD82:
	LDA $79A8,X		; 9D82	$BD $A8 $79	color palettes
	STA PpuData_2007	; 9D85	$8D $07 $20
	INX			; 9D88	$E8
	CPX #$20		; 9D89	$E0 $20
	BNE L2DD82		; 9D8B	$D0 $F5		loop
	JSR Set_PpuAddr_3F00	; 9D8D	$20 $97 $9D
	STX PpuAddr_2006	; 9D90	$8E $06 $20
	STX PpuAddr_2006	; 9D93	$8E $06 $20
	RTS			; 9D96	$60
; End of Apply_palettes

; Name	: Set_PpuAddr_3F00
; Ret	: X = 00h
; Marks	: palette RAM indexes($3F00-$3F1F)
Set_PpuAddr_3F00:
	LDA #$3F		; 9D97	$A9 $3F
	STA PpuAddr_2006	; 9D99	$8D $06 $20
	LDX #$00		; 9D9C	$A2 $00
	STX PpuAddr_2006	; 9D9E	$8E $06 $20
	RTS			; 9DA1	$60
; End of Set_PpuAddr_3F00

; Name	: Tile_copy_PPU
; SRC	: $02(ADDR) - tile address
; DEST	: $00(ADDR) - PPU address
; Marks	: Tile copy to PPU $00(ADDR) size is #$100
	LDY #$00		; 9DA2	$A0 $00
	JSR Set_IRQ_JMP		; 9DA4	$20 $2A $FA
	LDA $01			; 9DA7	$A5 $01
	STA PpuAddr_2006	; 9DA9	$8D $06 $20
	LDA $00			; 9DAC	$A5 $00
	STA PpuAddr_2006	; 9DAE	$8D $06 $20
L2DDB1:
	LDA ($02),Y		; 9DB1	$B1 $02
	STA PpuData_2007	; 9DB3	$8D $07 $20
	INY			; 9DB6	$C8
	BPL L2DDB1		; 9DB7	$10 $F8		loop
	RTS			; 9DB9	$60
; End of

; Name	: Apply_OAM_tile
; X	: Size to copy
; SRC	: $02(ADDR)
; DEST	: $00(ADDR)
; Marks	:
Apply_OAM_tile:
	JSR Set_02_gfxbuf	; 9DBA	$20 $C6 $9D
	JSR Set_IRQ_JMP		; 9DBD	$20 $2A $FA	Wait_NMI
	JSR Copy_OAM_dma_	; 9DC0	$20 $60 $9E
	JMP Set_buf_to_Ppu	; 9DC3	$4C $6F $FD
; End of Apply_OAM_tile

; Name	: Set_02_gfxbuf
; Marks	: Set $02(ADDR) to $7600
Set_02_gfxbuf:
	LDA #$00		; 9DC6	$A9 $00
	STA $02			; 9DC8	$85 $02
	LDA #$76		; 9DCA	$A9 $76
	STA $03			; 9DCC	$85 $03
	RTS			; 9DCE	$60
; End of Set_02_gfxbuf

; Name	: Init_gfx_buf
; Marks	: Init graphic buffer ??
Init_gfx_buf:
	LDY #$00		; 9DCF	$A0 $00
	LDA #$00		; 9DD1	$A9 $00
L2DDD3:
	STA $7600,Y		; 9DD3	$99 $00 $76
	INY			; 9DD6	$C8
	BNE L2DDD3		; 9DD7	$D0 $FA		loop
	RTS			; 9DD9	$60
; End of Init_gfx_buf

; Name	;
; Marks	:
	LDY $9DF5,X		; 9DDA	$BC $F5 $9D
	LDX #$18		; 9DDD	$A2 $18
	BNE L2DDEB		; 9DDF	$D0 $0A
; End of
	LDY #$70		; 9DE1	$A0 $70
	LDX #$30		; 9DE3	$A2 $30
	BNE L2DDEB		; 9DE5	$D0 $04
; End of
; Name	:
; Marks	:
	LDX #$9C		; 9DE7	$A2 $9C
	LDY #$04		; 9DE9	$A0 $04
L2DDEB:
	LDA #$F0		; 9DEB	$A9 $F0
L2DDED:
	STA $0200,Y		; 9DED	$99 $00 $02
	INY			; 9DF0	$C8
	DEX			; 9DF1	$CA
	BNE L2DDED		; 9DF2	$D0 $F9		loop
	RTS			; 9DF4	$60
; End of

;9DF5 - data block
.byte $A0,$B8,$D0,$E8,$99,$00,$02

; Name	:
; Marks	:
	INY			; 9DFC	$C8
	INY			; 9DFD	$C8
	INY			; 9DFE	$C8
	INY			; 9DFF	$C8
	RTS			; 9E00	$60
; End of

;; [$9E00 :: 0x2DE00]

.byte $A6,$27,$CA,$CA,$CA,$CA,$60,$A5,$01,$99,$00,$02,$A5,$02,$99
.byte $01,$02,$A5,$03,$99,$02,$02,$A5,$00,$99,$03,$02,$4C,$FC,$9D
L2DE1F:
	PHA			; 9E1F	$48
	JSR Apply_OAM_pal	; 9E20	$20 $33 $9E
	PLA			; 9E23	$68
	SEC			; 9E24	$38
	SBC #$01		; 9E25	$E9 $01
	BNE L2DE1F		; 9E27	$D0 $F6
	RTS			; 9E29	$60
; End of

; Name	: Apply_OAM
; Marks	: Have to be called in scanline 241 - 151(before MENU/sprite 0 hit)
;	  Use 1 frame
Apply_OAM:
	JSR Wait_MENU_NMI	; 9E2A	$20 $3F $9E
	JSR Copy_OAM_dma_	; 9E2D	$20 $60 $9E
	JMP Wait_NMI_end	; 9E30	$4C $46 $FD
; End of Apply_OAM

; Name	: Apply_OAM_pal
; Marks	:
Apply_OAM_pal:
	JSR Wait_MENU_NMI	; 9E33	$20 $3F $9E
	JSR Copy_OAM_dma_	; 9E36	$20 $60 $9E
	JSR Apply_palettes	; 9E39	$20 $7C $9D
	JMP Wait_NMI_end	; 9E3C	$4C $46 $FD
; End of Apply_OAM_pal

; Name	: Wait_MENU_NMI
; Marks	:
Wait_MENU_NMI:
	JSR Wait_MENU_snd	; 9E3F	$20 $5B $FD
	JMP Set_IRQ_JMP		; 9E42	$4C $2A $FA	Wait NMI
; End of Wait_MENU_NMI

;9E45
.byte $20,$2A,$FA,$20,$36,$9E,$4C,$48,$FA

; Name	: Copy_OAM
; Marks	:
Copy_OAM:
	JSR Set_IRQ_JMP		; 9E4E	$20 $2A $FA	Wait NMI
	JMP Copy_OAM_dma_	; 9E51	$4C $60 $9E
; End of Copy_OAM

; Name	:
; Marks	:
	JSR $FA48		; 9E54	$20 $48 $FA
	JSR Copy_OAM		; 9E57	$20 $4E $9E
	JSR Apply_palettes	; 9E5A	$20 $7C $9D
	JMP $FD4B		; 9E5D	$4C $4B $FD
; End of

; Name	: Copy_OAM_dma_
; Marks	: Copy OAM by DMA from 0x0200 to PPU OAM
Copy_OAM_dma_:
	LDA #$00		; 9E60	$A9 $00
	STA $2003		; 9E62	$8D $03 $20	OamAddr_2003
	LDA #$02		; 9E65	$A9 $02
	STA SpriteDma_4014	; 9E67	$8D $14 $40
	RTS			; 9E6A	$60
; End of Copy_OAM_dma_

; $9E6B
.byte $AD,$B0,$7C,$18,$69
.byte $10,$AA

; Name	:
; Marks	:
	LDA $930B,X		; 9E72	$BD $0B $93
	TAX			; 9E75	$AA
	JMP $FA59		; 9E76	$4C $59 $FA
; End of

;9E79
.byte $A9,$1F,$85,$00,$A9,$04,$85
.byte $01,$A6,$00,$BD,$A8,$79,$C9,$10,$B0,$02,$A9,$1F,$38,$E9,$10,$9D
.byte $A8,$79,$CA,$10,$EE,$A9,$06,$20,$1F,$9E,$C6,$01,$D0,$E3,$60

; Name	:
; Marks	:
	LDA #$20		; 9E9F	$A9 $20
	STA $01			; 9EA1	$85 $01
	LDA #$20		; 9EA3	$A9 $20
	STA $00			; 9EA5	$85 $00
	JSR Set_PpuAddr_00	; 9EA7	$20 $7E $FD
	LDA #$10		; 9EAA	$A9 $10
	STA $02			; 9EAC	$85 $02
	LDA #$04		; 9EAE	$A9 $04
	STA $05			; 9EB0	$85 $05
	LDA $7B49		; 9EB2	$AD $49 $7B
	CMP #$07		; 9EB5	$C9 $07
	BEQ L2DEE4		; 9EB7	$F0 $2B
L2DEB9:
	LDA #$04		; 9EB9	$A9 $04
	STA $04			; 9EBB	$85 $04
L2DEBD:
	LDY $02			; 9EBD	$A4 $02
	LDX #$04		; 9EBF	$A2 $04
	JSR $9D5B		; 9EC1	$20 $5B $9D
	LDY $02			; 9EC4	$A4 $02
	INY			; 9EC6	$C8
	INY			; 9EC7	$C8
	LDX #$02		; 9EC8	$A2 $02
	JSR $9D5B		; 9ECA	$20 $5B $9D
	LDY $02			; 9ECD	$A4 $02
	LDX #$02		; 9ECF	$A2 $02
	JSR $9D5B		; 9ED1	$20 $5B $9D
	DEC $04			; 9ED4	$C6 $04
	BNE L2DEBD		; 9ED6	$D0 $E5
	LDA $02			; 9ED8	$A5 $02
	CLC			; 9EDA	$18
	ADC #$04		; 9EDB	$69 $04
	STA $02			; 9EDD	$85 $02
	DEC $05			; 9EDF	$C6 $05
	BNE L2DEB9		; 9EE1	$D0 $D6
	RTS			; 9EE3	$60
; End of
L2DEE4:
.byte $A9,$08,$85,$04,$A4,$02,$A2,$04,$20,$5B,$9D,$C6
.byte $04,$D0,$F5,$84,$02,$C6,$05,$D0,$EB,$60

; Name	:
; Marks	:
	LDA $7B72		; 9EFA	$AD $72 $7B
	CMP #$09		; 9EFD	$C9 $09
	BCS L2DF57		; 9EFF	$B0 $56
	LDY #$07		; 9F01	$A0 $07
	STY $04			; 9F03	$84 $04
L2DF05:
	LDY $04			; 9F05	$A4 $04
	LDA $7B62,Y		; 9F07	$B9 $62 $7B
	BMI L2DF0F		; 9F0A	$30 $03
	JSR $9F14		; 9F0C	$20 $14 $9F
L2DF0F:
	DEC $04			; 9F0F	$C6 $04
	BPL L2DF05		; 9F11	$10 $F2
	RTS			; 9F13	$60
; End of

; Name	:
; Marks	:
	LDX $7B72,Y		; 9F14	$BE $72 $7B
	LDA $9FA5,X		; 9F17	$BD $A5 $9F
	STA $05			; 9F1A	$85 $05
	LDA $7B92,Y		; 9F1C	$B9 $92 $7B
	LDX #$20		; 9F1F	$A2 $20
	JSR Multi		; 9F21	$20 $79 $FC
	LDA $02			; 9F24	$A5 $02
	ADC $7B9A,Y		; 9F26	$79 $9A $7B
	STA $00			; 9F29	$85 $00
	LDA $03			; 9F2B	$A5 $03
	ADC #$20		; 9F2D	$69 $20
	STA $01			; 9F2F	$85 $01
	LDA $7B8A,Y		; 9F31	$B9 $8A $7B
	STA $02			; 9F34	$85 $02
	LDA $7B82,Y		; 9F36	$B9 $82 $7B
	STA $03			; 9F39	$85 $03
	JSR $FA2A		; 9F3B	$20 $2A $FA	Wait NMI
L2DF3E:
	LDY $05			; 9F3E	$A4 $05
	LDX $02			; 9F40	$A6 $02
	JSR $9D58		; 9F42	$20 $58 $9D
	STY $05			; 9F45	$84 $05
	LDA $00			; 9F47	$A5 $00
	CLC			; 9F49	$18
	ADC #$20		; 9F4A	$69 $20
	STA $00			; 9F4C	$85 $00
	BCC L2DF52		; 9F4E	$90 $02
	INC $01			; 9F50	$E6 $01
L2DF52:
	DEC $03			; 9F52	$C6 $03
	BNE L2DF3E		; 9F54	$D0 $E8
	RTS			; 9F56	$60
; End of

;; [$9F57 :: 0x2DF57]
L2DF57:
.byte $AD,$72,$7B,$48,$38,$E9,$09,$A2,$90
.byte $20,$79,$FC,$A5,$02,$69,$DE,$85,$02,$A5,$03,$69,$8D,$85,$03,$AD
.byte $82,$7B,$85,$04,$A9,$C4,$85,$00,$A9,$20,$85,$01,$68,$C9,$0F,$D0
.byte $04,$C6,$00,$C6,$00,$AE,$8A,$7B,$20,$6F,$FD,$98,$18,$65,$02,$85
.byte $02,$90,$02,$E6,$03,$A5,$00,$18,$69,$20,$85,$00,$90,$02,$E6,$01
;; $9FA0-$9FAD
.byte $C6,$04,$D0,$E1,$60,$20,$30,$40,$58,$70,$94,$B8,$DC,$B8

; Name	:
; Marks	:
	LDA $7B49		; 9FAE	$AD $49 $7B
	AND #$07		; 9FB1	$29 $07
	CLC			; 9FB3	$18
	ADC #$B8		; 9FB4	$69 $B8
	STA $01			; 9FB6	$85 $01
	LDA #$00		; 9FB8	$A9 $00
	STA $00			; 9FBA	$85 $00
	JSR $FB53		; 9FBC	$20 $53 $FB
	; Init to #$00(zero) $7700-$77FF
	LDA #$00		; 9FBF	$A9 $00
	TAX			; 9FC1	$AA
L2DFC2:
	STA $7700,X		; 9FC2	$9D $00 $77
	INX			; 9FC5	$E8
	BNE L2DFC2		; 9FC6	$D0 $FA
	; Set RAM $07=$08,$09=$00,$05,$06=$01,$08=$10
	LDA #$08		; 9FC8	$A9 $08
	STA $07			; 9FCA	$85 $07
	LDA #$00		; 9FCC	$A9 $00
	STA $09			; 9FCE	$85 $09
	LDA #$01		; 9FD0	$A9 $01
	STA $05			; 9FD2	$85 $05
	STA $06			; 9FD4	$85 $06
	LDA #$10		; 9FD6	$A9 $10
	STA $08			; 9FD8	$85 $08
	; $06->$05
	LDA $06			; 9FDA	$A5 $06
	STA $05			; 9FDC	$85 $05
	; $7700,X = ($7600,X & $05) | $7700,X
	LDX $09			; 9FDE	$A6 $09
L2DFE0:
	LDY #$08		; 9FE0	$A0 $08
L2DFE2:
	LDA $7600,X		; 9FE2	$BD $00 $76
L2DFE5:
	AND $05			; 9FE5	$25 $05
	ORA $7700,X		; 9FE7	$1D $00 $77
	STA $7700,X		; 9FEA	$9D $00 $77
	ASL $05			; 9FED	$06 $05
	BCC L2DFF5		; 9FEF	$90 $04
	LDA #$01		; 9FF1	$A9 $01
	STA $05			; 9FF3	$85 $05
L2DFF5:
	INX			; 9FF5	$E8
	DEY			; 9FF6	$88
	BNE L2DFE2		; 9FF7	$D0 $E9
	TXA			; 9FF9	$8A
	CLC			; 9FFA	$18
	ADC #$08		; 9FFB	$69 $08
	TAX			; 9FFD	$AA
	DEC $08			; 9FFE	$C6 $08
	BNE L2DFE0		; A000	$D0 $DE
	ASL $06			; A002	$06 $06
	BCC L2E00A		; A004	$90 $04
	LDA #$01		; A006	$A9 $01
	STA $06			; A008	$85 $06
L2E00A:
	LDA #$00		; A00A	$A9 $00
	STA $00			; A00C	$85 $00
	LDA #$11		; A00E	$A9 $11
	STA $01			; A010	$85 $01
	LDA #$00		; A012	$A9 $00
	STA $02			; A014	$85 $02
	LDA #$77		; A016	$A9 $77
	STA $03			; A018	$85 $03
L2E01A:
	; Copy tile to PPU as fade in effect(Diagonal)
	JSR $9DA2		; A01A	$20 $A2 $9D	tile copy to PPU
	TYA			; A01D	$98
	CLC			; A01E	$18
	ADC $00			; A01F	$65 $00
	STA $00			; A021	$85 $00
	TYA			; A023	$98
	CLC			; A024	$18
	ADC $02			; A025	$65 $02
	STA $02			; A027	$85 $02
	BCC L2E02D		; A029	$90 $02
	INC $03			; A02B	$E6 $03
L2E02D:
	JSR Wait_NMI_end	; A02D	$20 $46 $FD
	JSR $FA48		; A030	$20 $48 $FA
	LDA $00			; A033	$A5 $00
	BNE L2E01A		; A035	$D0 $E3
	DEC $07			; A037	$C6 $07
	BEQ L2E03E		; A039	$F0 $03
	JMP $9FD6		; A03B	$4C $D6 $9F
L2E03E:
	LDA #$08		; A03E	$A9 $08
	STA $07			; A040	$85 $07
	LDA $09			; A042	$A5 $09
	EOR #$08		; A044	$49 $08
	STA $09			; A046	$85 $09
	BEQ L2E04D		; A048	$F0 $03
	JMP $9FD6		; A04A	$4C $D6 $9F
L2E04D:
	RTS			; A04D	$60
; End of
	
; Name	:
; Marks	:
	LDX $7B56		; A04E	$AE $56 $7B
	LDY #$01		; A051	$A0 $01
	JSR Set_wpn_pal		; A053	$20 $03 $FC
	LDX $7B57		; A056	$AE $57 $7B
	LDY #$05		; A059	$A0 $05
	JSR Set_wpn_pal		; A05B	$20 $03 $FC
	LDA #$A0		; A05E	$A9 $A0
	STA $01			; A060	$85 $01
	JSR $9E54		; A062	$20 $54 $9E
	LDA $01			; A065	$A5 $01
	SEC			; A067	$38
	SBC #$10		; A068	$E9 $10
	STA $01			; A06A	$85 $01
	BCS L2E06F		; A06C	$B0 $01
	RTS			; A06E	$60
; End of

L2E06F:
	LDA #$31		; A06F	$A9 $31
	STA $00			; A071	$85 $00
L2E073:
	BIT PpuStatus_2002	; A073	$2C $02 $20
	BVS L2E073		; A076	$70 $FB
L2E078:
	LDX #$12		; A078	$A2 $12
	JSR $A089		; A07A	$20 $89 $A0
	DEC $00			; A07D	$C6 $00
	BNE L2E078		; A07F	$D0 $F7
	LDA $01			; A081	$A5 $01
	STA PpuScroll_2005	; A083	$8D $05 $20
	JMP $A062		; A086	$4C $62 $A0
; End of

; Name	:
; Marks	:
L2E089:
	DEX			; A089	$CA
	BNE L2E089		; A08A	$D0 $FD
	RTS			; A08C	$60
; End of

; Name	:
; Marks	:
	LDX #$7D		; A08D	$A2 $7D
	LDY #$1D		; A08F	$A0 $1D
	JSR Set_wpn_pal		; A091	$20 $03 $FC
	INX			; A094	$E8
	LDY #$11		; A095	$A0 $11
	JSR Set_wpn_pal		; A097	$20 $03 $FC
	INX			; A09A	$E8
	LDY #$15		; A09B	$A0 $15
	JSR Set_wpn_pal		; A09D	$20 $03 $FC
	LDX #$03		; A0A0	$A2 $03
L2E0A2:
	STX $10			; A0A2	$86 $10
	LDA #$00		; A0A4	$A9 $00
	LDY $7BAE,X		; A0A6	$BC $AE $7B
	CPY #$03		; A0A9	$C0 $03
	BCS L2E0AF		; A0AB	$B0 $02
	LDA #$02		; A0AD	$A9 $02
L2E0AF:
	STA $7BC2,X		; A0AF	$9D $C2 $7B
	STA $7BC6,X		; A0B2	$9D $C6 $7B
	JSR $A102		; A0B5	$20 $02 $A1
	LDX $10			; A0B8	$A6 $10
	JSR $A43A		; A0BA	$20 $3A $A4
	LDX $10			; A0BD	$A6 $10
	DEX			; A0BF	$CA
	BPL L2E0A2		; A0C0	$10 $E0
L2E0C2:
	JSR Apply_OAM_pal	; A0C2	$20 $33 $9E
	LDX #$03		; A0C5	$A2 $03
L2E0C7:
	STX $10			; A0C7	$86 $10
	LDA $7BCA,X		; A0C9	$BD $CA $7B
	CMP $7BD2,X		; A0CC	$DD $D2 $7B
	BEQ L2E0D6		; A0CF	$F0 $05
	LDA #$80		; A0D1	$A9 $80
	JSR $A512		; A0D3	$20 $12 $A5
L2E0D6:
	LDX $10			; A0D6	$A6 $10
	JSR $A43A		; A0D8	$20 $3A $A4
	LDX $10			; A0DB	$A6 $10
	DEX			; A0DD	$CA
	BPL L2E0C7		; A0DE	$10 $E7
	LDX #$03		; A0E0	$A2 $03
L2E0E2:
	LDA $7BCA,X		; A0E2	$BD $CA $7B
	CMP $7BD2,X		; A0E5	$DD $D2 $7B
	BNE L2E0C2		; A0E8	$D0 $D8
	DEX			; A0EA	$CA
	BPL L2E0E2		; A0EB	$10 $F5
	JSR Apply_OAM_pal	; A0ED	$20 $33 $9E
	LDX #$03		; A0F0	$A2 $03
L2E0F2:
	STX $10			; A0F2	$86 $10
	JSR $ABFD		; A0F4	$20 $FD $AB
	JSR $A43A		; A0F7	$20 $3A $A4
	LDX $10			; A0FA	$A6 $10
	DEX			; A0FC	$CA
	BPL L2E0F2		; A0FD	$10 $F3
	JMP Apply_OAM_pal	; A0FF	$4C $33 $9E
; End of

; Name	: Get_char_x
; X	: Character index(00h-03h)
; Marks	: Character back/front row to character x position (base)
Get_char_x:
	LDA #$D0		; A102	$A9 $D0		x = 208
	LDY $7BBE,X		; A104	$BC $BE $7B
	BEQ L2E10B		; A107	$F0 $02
	LDA #$E0		; A109	$A9 $E0		x = 224
L2E10B:
	STA $7BD2,X		; A10B	$9D $D2 $7B	character x position (base)
	RTS			; A10E	$60
; End of Get_char_x

; Name	:
; Marks	:
	STX $02			; A10F	$86 $02
	STA $03			; A111	$85 $03
	STY $04			; A113	$84 $04
L2E115:
	LDA $04			; A115	$A5 $04
	STA $05			; A117	$85 $05
	LDA #$FC		; A119	$A9 $FC
	LDY $01			; A11B	$A4 $01
	STY $07			; A11D	$84 $07
	BEQ L2E12B		; A11F	$F0 $0A
L2E121:
	SEC			; A121	$38
	ROL A			; A122	$2A
	ROL A			; A123	$2A
	ASL $05			; A124	$06 $05
	ASL $05			; A126	$06 $05
	DEY			; A128	$88
	BNE L2E121		; A129	$D0 $F6
L2E12B:
	STA $06			; A12B	$85 $06
	LDX $02			; A12D	$A6 $02
	LDY $00			; A12F	$A4 $00
L2E131:
	LDA $79C8,Y		; A131	$B9 $C8 $79
	AND $06			; A134	$25 $06
	ORA $05			; A136	$05 $05
	STA $79C8,Y		; A138	$99 $C8 $79
	LDA $07			; A13B	$A5 $07
	EOR #$01		; A13D	$49 $01
	STA $07			; A13F	$85 $07
	AND #$01		; A141	$29 $01
	SEC			; A143	$38
	BEQ L2E150		; A144	$F0 $0A
	ROL $06			; A146	$26 $06
	ROL $06			; A148	$26 $06
	ASL $05			; A14A	$06 $05
	ASL $05			; A14C	$06 $05
	BCC L2E159		; A14E	$90 $09
L2E150:
	ROR $06			; A150	$66 $06
	ROR $06			; A152	$66 $06
	LSR $05			; A154	$46 $05
	LSR $05			; A156	$46 $05
	INY			; A158	$C8
L2E159:
	DEX			; A159	$CA
	BNE L2E131		; A15A	$D0 $D5
	LDA $01			; A15C	$A5 $01
	EOR #$02		; A15E	$49 $02
	STA $01			; A160	$85 $01
	AND #$02		; A162	$29 $02
	BNE L2E16D		; A164	$D0 $07
	LDA $00			; A166	$A5 $00
	CLC			; A168	$18
	ADC #$08		; A169	$69 $08
	STA $00			; A16B	$85 $00
L2E16D:
	DEC $03			; A16D	$C6 $03
	BNE L2E115		; A16F	$D0 $A4
	RTS			; A171	$60
; End of

;A172
.byte $86,$05,$85,$04,$A0,$00,$20,$DA,$A1,$A5,$00,$85,$0B,$A5
.byte $05,$85,$0A,$A5,$01,$85,$09,$A9,$00,$85,$08,$06,$06,$26,$08,$06
.byte $06,$26,$08,$A9,$FC,$A6,$09,$F0,$0A,$38,$2A,$2A,$06,$08,$06,$08
.byte $CA,$D0,$F6,$A6,$0B,$3D,$C8,$79,$05,$08,$9D,$C8,$79,$A5,$09,$49
.byte $01,$85,$09,$29,$01,$D0,$02,$E6,$0B,$C6,$07,$D0,$03,$20,$DA,$A1
.byte $C6,$0A,$D0,$C3,$A5,$01,$49,$02,$85,$01,$29,$02,$D0,$07,$A5,$00
.byte $18,$69,$08,$85,$00,$C6,$04,$D0,$A2,$60,$B1,$02,$85,$06,$C8,$A9
.byte $04,$85,$07,$60

; Name	:
; Marks	:
	LDA #$C8		; A1E4	$A9 $C8
	STA $02			; A1E6	$85 $02
	LDA #$79		; A1E8	$A9 $79
	STA $03			; A1EA	$85 $03
	LDA #$23		; A1EC	$A9 $23
L2E1EE:
	STA $01			; A1EE	$85 $01
	LDA #$C0		; A1F0	$A9 $C0
	STA $00			; A1F2	$85 $00
	LDX #$40		; A1F4	$A2 $40
	JMP Set_buf_to_Ppu	; A1F6	$4C $6F $FD
; End of

; Name	:
; Marks	:
	LDA #$08		; A1F9	$A9 $08
	STA $02			; A1FB	$85 $02
	LDA #$7A		; A1FD	$A9 $7A
	STA $03			; A1FF	$85 $03
	LDA #$27		; A201	$A9 $27
	BNE L2E1EE		; A203	$D0 $E9
; End of
; Name	:
; Marks	:
	TAY			; A205	$A8
	LDA $7B62,Y		; A206	$B9 $62 $7B
	BPL L2E20C		; A209	$10 $01
	RTS			; A20B	$60
; End of
L2E20C:
	LDA $7B72,Y		; A20C	$B9 $72 $7B
	CMP #$09		; A20F	$C9 $09
	BCS L2E22F		; A211	$B0 $1C
	LDA $7B7A,Y		; A213	$B9 $7A $7B
	STA $02			; A216	$85 $02
	LDX $7B9A,Y		; A218	$BE $9A $7B
	LDA $7B92,Y		; A21B	$B9 $92 $7B
	JSR $9CB8		; A21E	$20 $B8 $9C
	LDA $7B8A,Y		; A221	$B9 $8A $7B
	LSR A			; A224	$4A
	TAX			; A225	$AA
	LDA $7B82,Y		; A226	$B9 $82 $7B
	LSR A			; A229	$4A
	LDY $02			; A22A	$A4 $02
	JMP $A10F		; A22C	$4C $0F $A1
; End of
L2E22F:
.byte $E9
.byte $09,$48,$A2,$09,$20,$79,$FC,$A5,$02,$69,$16,$85,$02,$A5,$03,$69
.byte $92,$85,$03,$68,$C9,$06,$F0,$0E,$A9,$09,$85,$00,$A9,$02,$85,$01
.byte $A2,$06,$A9,$06,$D0,$0C,$A9,$08,$85,$00,$A9,$03,$85,$01,$A2,$09
.byte $A9,$06,$4C,$72,$A1

; Name	:
; Marks	:
	STX $04			; A265	$86 $04
	JSR Init_gfx_buf	; A267	$20 $CF $9D
	LDY $7BA2,X		; A26A	$BC $A2 $7B
	BMI L2E2A2		; A26D	$30 $33
	BNE L2E283		; A26F	$D0 $12
	LDA $7BBA,X		; A271	$BD $BA $7B
	ASL A			; A274	$0A
	ADC #$9E		; A275	$69 $9E
	STA $01			; A277	$85 $01
	LDA #$00		; A279	$A9 $00
	STA $00			; A27B	$85 $00
	LDX #$00		; A27D	$A2 $00
	LDY #$80		; A27F	$A0 $80
	BNE L2E29F		; A281	$D0 $1C
L2E283:
	DEY			; A283	$88
	TYA			; A284	$98
	JSR $ADA2		; A285	$20 $A2 $AD
;A288
.byte $69,$80,$85,$00,$A9,$9D,$85,$01
.byte $A2,$50,$A0,$10,$20,$BA,$FB,$98,$18,$65,$00,$85,$00,$A2,$70
L2E29F:
	JSR Copy_char_tile	; A29F	$20 $BA $FB
L2E2A2:
	JSR Wait_MENU_snd	; A2A2	$20 $5B $FD
	LDA $04			; A2A5	$A5 $04
	LDX #$80		; A2A7	$A2 $80
	JSR Multi		; A2A9	$20 $79 $FC
	LDA $02			; A2AC	$A5 $02
	STA $00			; A2AE	$85 $00
	LDA $03			; A2B0	$A5 $03
	STA $01			; A2B2	$85 $01
	JSR Set_02_gfxbuf	; A2B4	$20 $C6 $9D
	JSR $9DA2		; A2B7	$20 $A2 $9D
	JMP $FD46		; A2BA	$4C $46 $FD
; End of

; Name	:
; A	: weapon action type ??
; Marks	:
	STA $08			; A2BD	$85 $08		weapon action type temp ??
	LDX $26			; A2BF	$A6 $26
	LDA $06			; A2C1	$A5 $06		weapon properties temp ??
	JSR $A321		; A2C3	$20 $21 $A3
	JSR $A2E9		; A2C6	$20 $E9 $A2
	LDA #$80		; A2C9	$A9 $80
	STA $00			; A2CB	$85 $00
	LDA #$03		; A2CD	$A9 $03
	STA $01			; A2CF	$85 $01
	JSR $A3AB		; A2D1	$20 $AB $A3
	LDX $26			; A2D4	$A6 $26
	LDA $07			; A2D6	$A5 $07
	JSR $A321		; A2D8	$20 $21 $A3
	JSR $A2E9		; A2DB	$20 $E9 $A2
	LDA #$E0		; A2DE	$A9 $E0
	STA $00			; A2E0	$85 $00
	LDA #$03		; A2E2	$A9 $03
	STA $01			; A2E4	$85 $01
	JMP $A3AB		; A2E6	$4C $AB $A3
; End of

; Name	:
; Marks	:
	LDA $08			; A2E9	$A5 $08
	CMP #$02		; A2EB	$C9 $02
	BEQ L2E2F0		; A2ED	$F0 $01
	RTS			; A2EF	$60
; End of

L2E2F0:
.byte $A0,$25,$20,$F7,$A2,$A0,$2D,$A2,$03,$B9,$00,$76,$29,$1F,$99,$00

;; [A300 : 0x2E300]

.byte $76,$C8,$CA,$D0,$F4,$60

; Name	:
; Marks	:
	TXA			; A306	$8A
	PHA			; A307	$48
	LDA $7BC2,X		; A308	$BD $C2 $7B
	JSR $A321		; A30B	$20 $21 $A3
	PLA			; A30E	$68
	LDX #$60		; A30F	$A2 $60
	JSR Multi		; A311	$20 $79 $FC
	LDA $02			; A314	$A5 $02
	STA $00			; A316	$85 $00
	LDA $03			; A318	$A5 $03
	ADC #$02		; A31A	$69 $02
	STA $01			; A31C	$85 $01
	JMP $A3AB		; A31E	$4C $AB $A3
; End of

; Name	:
; A	: weapon properties ??
; X	:
; Marks	:
	STA $00			; A321	$85 $00
	JSR Init_gfx_buf	; A323	$20 $CF $9D
	LDA $7BA2,X		; A326	$BD $A2 $7B	character graphics type
	BEQ L2E32E		; A329	$F0 $03
	BPL L2E370		; A32B	$10 $43
	RTS			; A32D	$60
; End of
L2E32E:
	LDA $7BBA,X		; A32E	$BD $BA $7B	character id
	ASL A			; A331	$0A
	ADC #$9E		; A332	$69 $9E
	STA $04			; A334	$85 $04
	LDX $00			; A336	$A6 $00
	BEQ L2E36F		; A338	$F0 $35
	DEX			; A33A	$CA
	LDA #$06		; A33B	$A9 $06
	JSR Multi		; A33D	$20 $79 $FC	Some calcuration ??
	LDA $02			; A340	$A5 $02
	STA $05			; A342	$85 $05
	LDA #$00		; A344	$A9 $00
	STA $03			; A346	$85 $03
L2E348:
	LDA #$00		; A348	$A9 $00
	STA $01			; A34A	$85 $01
	LDX $05			; A34C	$A6 $05
	LDA $9288,X		; A34E	$BD $88 $92	??
	INC $05			; A351	$E6 $05
	JSR $ADA4		; A353	$20 $A4 $AD	Get address ??
	ROL $01			; A356	$26 $01
	ADC #$00		; A358	$69 $00
	STA $00			; A35A	$85 $00
	LDA $01			; A35C	$A5 $01
	ADC $04			; A35E	$65 $04
	STA $01			; A360	$85 $01
	LDX $03			; A362	$A6 $03
	LDY #$10		; A364	$A0 $10
	JSR Copy_char_tile	; A366	$20 $BA $FB
	STX $03			; A369	$86 $03
	CPX #$60		; A36B	$E0 $60
	BNE L2E348		; A36D	$D0 $D9
L2E36F:
	RTS			; A36F	$60
; End of

L2E370:
.byte $A9,$9D,$85,$01,$BC,$A2,$7B,$88,$98,$20,$A4,$AD,$85,$02,$A4,$00
.byte $F0,$04,$C0,$08,$D0,$01,$60,$88,$18,$B9,$B6,$A3,$10,$0C,$A9,$40
.byte $65,$02,$85,$00,$A9,$88,$85,$01,$D0,$0A,$06,$02,$06,$02,$65,$02
.byte $69,$80,$85,$00,$A2,$50,$A0,$10,$4C,$BA,$FB

; Name	:
; Marks	:
	JSR Wait_MENU_snd	; A3AB	$20 $5B $FD
	LDX #$60		; A3AE	$A2 $60
	JSR Apply_OAM_tile	; A3B0	$20 $BA $9D
	JMP $FD46		; A3B3	$4C $46 $FD
; End of

;A3B6 - data block ??
.byte $00,$10,$C0,$C0,$20,$10,$30

; Name	:
; Marks	:
	LDA #$00		; A3BD	$A9 $00
	STA $04			; A3BF	$85 $04
	STA $00			; A3C1	$85 $00
	LDA #$79		; A3C3	$A9 $79
	STA $05			; A3C5	$85 $05
L2E3C7:
	LDX $00			; A3C7	$A6 $00
	LDY $A42C,X		; A3C9	$BC $2C $A4
	JSR $A3E3		; A3CC	$20 $E3 $A3
	LDX $00			; A3CF	$A6 $00
	LDY $A433,X		; A3D1	$BC $33 $A4
	JSR $A3F1		; A3D4	$20 $F1 $A3
	JSR $A404		; A3D7	$20 $04 $A4
	INC $00			; A3DA	$E6 $00
	LDX $00			; A3DC	$A6 $00
	CPX #$07		; A3DE	$E0 $07
	BNE L2E3C7		; A3E0	$D0 $E5
	RTS			; A3E2	$60
; End of

; Name	:
; Marks	:
	LDX #$00		; A3E3	$A2 $00
L2E3E5:
	LDA $92F4,Y		; A3E5	$B9 $F4 $92
	STA $14,X		; A3E8	$95 $14
	INX			; A3EA	$E8
	INY			; A3EB	$C8
	CPX #$06		; A3EC	$E0 $06
	BNE L2E3E5		; A3EE	$D0 $F5
	RTS			; A3F0	$60
; End of

; Name	:
; Marks	:
	LDX #$00		; A3F1	$A2 $00
L2E3F3:
	LDA $9264,Y		; A3F3	$B9 $64 $92
	STA $0E,X		; A3F6	$95 $0E
	LDA $9276,Y		; A3F8	$B9 $76 $92
	STA $08,X		; A3FB	$95 $08
	INX			; A3FD	$E8
	INY			; A3FE	$C8
	CPX #$06		; A3FF	$E0 $06
	BNE L2E3F3		; A401	$D0 $F0
	RTS			; A403	$60
; End of

; Name	:
; Marks	:
	LDY #$00		; A404	$A0 $00
	LDX #$00		; A406	$A2 $00
L2E408:
	LDA $08,X		; A408	$B5 $08
	STA ($04),Y		; A40A	$91 $04
	INY			; A40C	$C8
	LDA $14,X		; A40D	$B5 $14
	STA ($04),Y		; A40F	$91 $04
	INY			; A411	$C8
	LDA #$00		; A412	$A9 $00
	STA ($04),Y		; A414	$91 $04
	INY			; A416	$C8
	LDA $0E,X		; A417	$B5 $0E
	STA ($04),Y		; A419	$91 $04
	INY			; A41B	$C8
	INX			; A41C	$E8
	CPY #$18		; A41D	$C0 $18
	BNE L2E408		; A41F	$D0 $E7
	TYA			; A421	$98
	CLC			; A422	$18
	ADC $04			; A423	$65 $04
	STA $04			; A425	$85 $04
	BCC L2E42B		; A427	$90 $02
	INC $05			; A429	$E6 $05
L2E42B:
	RTS			; A42B	$60
; End of

; $A42C-$A439 data block
.byte $00,$06,$0C,$00
.byte $06,$0C,$0C,$00,$00,$00,$0C,$0C,$0C,$06

; Name	:
; X	: char_idx
; Marks	:
	STX $04			; A43A	$86 $04
	LDA $7BA2,X		; A43C	$BD $A2 $7B	character graphics type (hidden if msb set) normal/mini/toad
	BPL L2E442		; A43F	$10 $01
	RTS			; A441	$60
; End of

L2E442:
	STA $05			; A442	$85 $05
	LDA $7BC2,X		; A444	$BD $C2 $7B	character lower sprite pose ?? - 01h stand, 02h walk ??
	STA $06			; A447	$85 $06
	AND #$7F		; A449	$29 $7F
	STA $07			; A44B	$85 $07
	LDX #$08		; A44D	$A2 $08
	LDA $07			; A44F	$A5 $07
	CMP #$03		; A451	$C9 $03
	BCC L2E457		; A453	$90 $02
	LDX #$06		; A455	$A2 $06
L2E457:
	LDA $04			; A457	$A5 $04
	JSR Multi		; A459	$20 $79 $FC	some calcuration ?? - character sprite low address ??
	LDA $02			; A45C	$A5 $02
	STA $08			; A45E	$85 $08
	LDA #$00		; A460	$A9 $00
	LDX $07			; A462	$A6 $07
	BEQ L2E477		; A464	$F0 $11
	LDA #$06		; A466	$A9 $06
	CPX #$08		; A468	$E0 $08
	BEQ L2E477		; A46A	$F0 $0B
	DEX			; A46C	$CA
	LDA $A50B,X		; A46D	$BD $0B $A5
	LDX $05			; A470	$A6 $05
	BEQ L2E477		; A472	$F0 $03
	CLC			; A474	$18
	ADC #$03		; A475	$69 $03
L2E477:
	LDX #$18		; A477	$A2 $18
	JSR Multi		; A479	$20 $79 $FC	some calcuration ?? - character sprite low address ??
	LDA $02			; A47C	$A5 $02
	ADC #$00		; A47E	$69 $00
	STA $00			; A480	$85 $00
	LDA $03			; A482	$A5 $03
	ADC #$79		; A484	$69 $79		$00(ADDR) character sprite data ??
	STA $01			; A486	$85 $01
	LDA $04			; A488	$A5 $04
	ASL A			; A48A	$0A
	TAX			; A48B	$AA
	LDA $2C,X		; A48D	$B5 $2C
	STA $02			; A48E	$85 $02
	LDA $2D,X		; A490	$B5 $2D
	STA $03			; A492	$85 $03		$02(ADDR) OAM buffer
	LDY #$00		; A494	$A0 $00
	LDX #$00		; A496	$A2 $00
L2E498:
	INY			; A498	$C8
	LDA ($00),Y		; A499	$B1 $00		OAM INDEX(character sprite data) ex> $7901
	CLC			; A49B	$18
	ADC $08			; A49C	$65 $08
	STA $0A,X		; A49E	$95 $0A
	INY			; A4A0	$C8
	INY			; A4A1	$C8
	INY			; A4A2	$C8		y = 1,5,9,D,11,15
	INX			; A4A3	$E8		y = 0,1,2,3, 4, 5
	CPY #$18		; A4A4	$C0 $18
	BNE L2E498		; A4A6	$D0 $F0		loop - character sprite (2x3 = 6)
	BIT $06			; A4A8	$24 $06
	BPL L2E4C0		; A4AA	$10 $14
	LDA $05			; A4AC	$A5 $05
	BNE L2E4C0		; A4AE	$D0 $10
	LDX #$00		; A4B0	$A2 $00
L2E4B2:
	LDA $0A,X		; A4B2	$B5 $0A
	LDY $0B,X		; A4B4	$B4 $0B
	STY $0A,X		; A4B6	$94 $0A
	STA $0B,X		; A4B8	$95 $0B
	INX			; A4BA	$E8
 	INX			; A4BB	$E8
	CPX #$06		; A4BC	$E0 $06
	BNE L2E4B2		; A4BE	$D0 $F2
L2E4C0:
	LDX $04			; A4C0	$A6 $04
	LDA $7BCA,X		; A4C2	$BD $CA $7B	character x position (current)
	STA $08			; A4C5	$85 $08
	LDA $7BCE,X		; A4C7	$BD $CE $7B	character y position
	STA $09			; A4CA	$85 $09
	LDA $7BB6,X		; A4CC	$BD $B6 $7B	character palette id
	BIT $06			; A4CF	$24 $06
	BPL L2E4D5		; A4D1	$10 $02
	ORA #$40		; A4D3	$09 $40
L2E4D5:
	STA $05			; A4D5	$85 $05
	LDA $07			; A4D7	$A5 $07
	BNE L2E4E7		; A4D9	$D0 $0C
	LDY #$00		; A4DB	$A0 $00
	LDA #$F0		; A4DD	$A9 $F0
L2E4DF:
	STA ($02),Y		; A4DF	$91 $02
	INY			; A4E1	$C8
	CPY #$18		; A4E2	$C0 $18
	BNE L2E4DF		; A4E4	$D0 $F9
	RTS			; A4E6	$60
; End of
; Character sprite struct
; 1st character not move motion = 7900(OAM buffer)
; 1st character move motion = 7918(OAM buffer)
L2E4E7:
	LDY #$00		; A4E7	$A0 $00
	LDX #$00		; A4E9	$A2 $00
L2E4EB:
	LDA ($00),Y		; A4EB	$B1 $00		ex> $7900 - character sprite data(OAM)
	CLC			; A4ED	$18
	ADC $09			; A4EE	$65 $09		Y
	STA ($02),Y		; A4F0	$91 $02		ex> $02A0 - OAM buffer - Y
	INY			; A4F2	$C8
	LDA $0A,X		; A4F3	$B5 $0A
	INX			; A4F5	$E8
	STA ($02),Y		; A4F6	$91 $02		INDEX
	INY			; A4F8	$C8
	LDA $05			; A4F9	$A5 $05
	STA ($02),Y		; A4FB	$91 $02		ATTR
	INY			; A4FD	$C8
	LDA ($00),Y		; A4FE	$B1 $00
	CLC			; A500	$18
	ADC $08			; A501	$65 $08		X
	STA ($02),Y		; A503	$91 $02		OAM X
	INY			; A505	$C8
	CPY #$18		; A506	$C0 $18
	BNE L2E4EB		; A508	$D0 $E1		loop - char sprite (2x3 = 6)
	RTS			; A50A	$60
; End of

; $A50B - data block
.byte $00,$01,$02,$02,$02
.byte $02,$02

; Name	:
; A	:
; Marks	: every 4 step, lower sprite(leg) graphic will change
	STA $00			; A512	$85 $00
	LDA $7BA2,X		; A514	$BD $A2 $7B	character graphics type
	BMI L2E556		; A517	$30 $3D
	BEQ L2E556		; A519	$F0 $3B
	CMP #$01		; A51B	$C9 $01
	BEQ L2E586		; A51D	$F0 $67
	LDA $7BD6,X		; A51F	$BD $D6 $7B
	AND #$07		; A522	$29 $07
	STA $7BD6,X		; A524	$9D $D6 $7B
	TAY			; A527	$A8
	LDA $7BCA,X		; A528	$BD $CA $7B
	BIT $00			; A52B	$24 $00
	BPL L2E536		; A52D	$10 $07
	SEC			; A52F	$38
	SBC $9333,Y		; A530	$F9 $33 $93
	JMP $A53A		; A533	$4C $3A $A5
; End of
L2E536:
.byte $18,$79,$33,$93,$9D,$CA,$7B,$BD,$CE,$7B
.byte $18,$79,$3B,$93,$9D,$CE,$7B,$BD,$C2,$7B,$F0,$06,$B9,$43,$93,$9D
.byte $C2,$7B,$FE,$D6,$7B,$60
L2E556:
	LDA $7BCA,X		; A556	$BD $CA $7B	character x position (current)
	BIT $00			; A559	$24 $00
	BPL L2E563		; A55B	$10 $06
	SEC			; A55D	$38
	SBC #$02		; A55E	$E9 $02
	JMP $A566		; A560	$4C $66 $A5
;
L2E563:
	CLC			; A563	$18
	ADC #$02		; A564	$69 $02		moving step(2 pixel)
	STA $7BCA,X		; A566	$9D $CA $7B	character x position (current)
	LDA $7BD6,X		; A569	$BD $D6 $7B
	CMP #$03		; A56C	$C9 $03		run motion step(change every 3)
	BCC L2E582		; A56E	$90 $12
	LDA #$00		; A570	$A9 $00
	STA $7BD6,X		; A572	$9D $D6 $7B	counter reset ??
	LDA $7BDA,X		; A575	$BD $DA $7B
	EOR #$FF		; A578	$49 $FF
	STA $7BDA,X		; A57A	$9D $DA $7B
	BEQ L2E582		; A57D	$F0 $03
	JSR $A5A7		; A57F	$20 $A7 $A5	character lower sprite pose calc ??
L2E582:
	INC $7BD6,X		; A582	$FE $D6 $7B
	RTS			; A585	$60
; End of

L2E586:
.byte $BD,$CA,$7B,$24,$00,$10,$06,$38,$E9,$01
.byte $4C,$96,$A5,$18,$69,$01,$9D,$CA,$7B,$BD,$D6,$7B,$29,$01,$F0,$03
.byte $20,$A7,$A5,$FE,$D6,$7B,$60

; Name	:
; Marks	:
	LDY $7BC6,X		; A5A7	$BC $C6 $7B
	LDA $7BC2,X		; A5AA	$BD $C2 $7B	character lower sprite pose ??
	BEQ L2E5B9		; A5AD	$F0 $0A
	CMP #$01		; A5AF	$C9 $01
	BEQ L2E5B5		; A5B1	$F0 $02
	LDY #$01		; A5B3	$A0 $01
L2E5B5:
	TYA			; A5B5	$98
	STA $7BC2,X		; A5B6	$9D $C2 $7B	character lower sprite pose ??
L2E5B9:
	RTS			; A5B9	$60
; End of

	JSR $9C8B		; A5BA	$20 $8B $9C	Check back/front row, set pointers to char sprite
	LDX #$03		; A5BD	$A2 $03
	STX $10			; A5BF	$86 $10		temp char idx ??
L2E5C1:
	JSR Get_char_x		; A5C1	$20 $02 $A1
	LDA $7BCA,X		; A5C4	$BD $CA $7B	character x position (current)
	CMP $7BD2,X		; A5C7	$DD $D2 $7B
	BEQ L2E5CF		; A5CA	$F0 $03
	JSR $A680		; A5CC	$20 $80 $A6	set OAM buffer
L2E5CF:
	DEC $10			; A5CF	$C6 $10		temp char idx ??
	LDX $10			; A5D1	$A6 $10		temp char idx ??
	BPL L2E5C1		; A5D3	$10 $EC		loop
	JSR Show_char_pos	; A5D5	$20 $95 $A6	Show character status move graphic
	LDX #$03		; A5D8	$A2 $03
	STX $10			; A5DA	$86 $10
L2E5DC:
	LDA $7BD2,X		; A5DC	$BD $D2 $7B	character x position (base)
	CMP $7BCA,X		; A5DF	$DD $CA $7B	character x position (current)
	BEQ L2E5EF		; A5E2	$F0 $0B
	BCC L2E5EC		; A5E4	$90 $06
	JSR Char_mov_base	; A5E6	$20 $33 $A6
	JMP $A5EF		; A5E9	$4C $EF $A5
L2E5EC:
.byte $20,$22,$A6
L2E5EF:
	DEC $10			; A5EF	$C6 $10
	LDX $10			; A5F1	$A6 $10
	BPL L2E5DC		; A5F3	$10 $E7		loop - for all characters
	JSR Show_char_pos	; A5F5	$20 $95 $A6	Show character status move graphic
	LDX #$03		; A5F8	$A2 $03
	STX $10			; A5FA	$86 $10
L2E5FC:
	JSR $A678		; A5FC	$20 $78 $A6	character pose calc / copy to OAM
	DEC $10			; A5FF	$C6 $10
	LDX $10			; A601	$A6 $10
	BPL L2E5FC		; A603	$10 $F7		loop - for all characters
	LDX cur_char_idx	; A605	$A6 $9E
	CPX #$04		; A607	$E0 $04
	BCC L2E615		; A609	$90 $0A
	JSR $9DE7		; A60B	$20 $E7 $9D
.byte $A9,$00
.byte $85,$43,$4C,$1D,$A6
L2E615:
	LDX cur_char_idx	; A615	$A6 $9E
	JSR Char_mov_act	; A617	$20 $20 $A6
	JSR Set_char_pose_idx	; A61A	$20 $76 $A6
	JMP Show_char_pos	; A61D	$4C $95 $A6	Show character status move graphic
; End of

;////////// temporary variables //////////
char_mov_x_dest	= $11
char_idx_tmp	= $12
char_mov_dir	= $13
act_mov_back	= $00
act_mov_front	= $80
act_pos_x	= $C0

; Name	: Char_mov_act
; X	: character idx
; Marks	: character move to action position (C0h)
Char_mov_act:
	LDA #act_pos_x		; A620	$A9 $C0
	STA $11			; A622	$85 $11
	STX char_idx_tmp	; A624	$86 $12
	LDA #act_mov_front	; A626	$A9 $80
	STA char_mov_dir	; A628	$85 $13
	JSR Walk_motion		; A62A	$20 $47 $A6	loop subroutine
	JSR $A67E		; A62D	$20 $7E $A6	graphics calc (init pose) ??
	JMP Show_char_pos	; A630	$4C $95 $A6	Show character status move graphic
; End of Char_mov_act

; Name	: Char_mov_base
; X	: character idx
; Marks	: character move to base position
Char_mov_base:
	STX char_idx_tmp	; A633	$86 $12
	LDA $7BD2,X		; A635	$BD $D2 $7B	character x position (base)
	STA $11			; A638	$85 $11
	LDA #act_mov_back	; A63A	$A9 $00
	STA char_mov_dir	; A63C	$85 $13
	JSR Walk_motion		; A63E	$20 $47 $A6	loop subroutine
	JSR Set_char_pose_idx	; A641	$20 $76 $A6	graphics calc (init pose) ??
	JMP Show_char_pos	; A644	$4C $95 $A6	Show status move graphic
; End of Char_mov_base

; Name	: Walk_motion
; Marks	:
Walk_motion:
	JSR $A67E		; A647	$20 $7E $A6	OAM buffer process ?? (character pose ??)
Walk_motion_loop:
	JSR Show_char_pos	; A64A	$20 $95 $A6	Show character status move graphic
	LDX char_idx_tmp	; A64D	$A6 $12
	LDA $7BCA,X		; A64F	$BD $CA $7B	character x position (current)
	CMP $11			; A652	$C5 $11
	BEQ L2E673		; A654	$F0 $1D		if $11==$7BCA,X break loop
	LDA char_mov_dir	; A656	$A5 $13
	JSR $A512		; A658	$20 $12 $A5	walk move ??
	LDX char_idx_tmp	; A65B	$A6 $12
	LDY $7BA2,X		; A65D	$BC $A2 $7B	character graphics type
	CPY #$02		; A660	$C0 $02		toad
	BNE L2E66D		; A662	$D0 $09
	LDY char_mov_dir	; A664	$A4 $13
	BMI L2E66D		; A666	$30 $05
	ORA #$80		; A668	$09 $80
	STA $7BC2,X		; A66A	$9D $C2 $7B	character lower sprite pose ???
L2E66D:
	JSR $A43A		; A66D	$20 $3A $A4	character graphics OAM buffer calc(walk motion)
	JMP Walk_motion_loop	; A670	$4C $4A $A6	loop - walk to destination
L2E673:
	JMP Show_char_pos	; A673	$4C $95 $A6	Show character status move graphic
; End of Walk_motion

; Name	: Set_char_pose_idx
; Marks	:
Set_char_pose_idx:
	LDX char_idx_tmp	; A676	$A6 $12
; Name	: Set_char_pose
; X	: character index ??
; Marks	:
Set_char_pose:
	JSR $ABFD		; A678	$20 $FD $AB	character pose calc ?? set variables
	JMP $A43A		; A67B	$4C $3A $A4	calc pose and copy to OAM buffer(init pose ??)
; End of Set_char_pose(_idx)

; Name	:
; Marks	:
	LDX char_idx_tmp	; A67E	$A6 $12
; Name	:
; X	: character index
; Marks	: Init somethin ?? OAM set, character OAM address start from $02A0
	LDA #$00		; A680	$A9 $00
	STA $7BD6,X		; A682	$9D $D6 $7B
	STA $7BDA,X		; A685	$9D $DA $7B
	LDA #$01		; A688	$A9 $01		stand pose ??
	STA $7BC2,X		; A68A	$9D $C2 $7B	character lower sprite pose ???
	LDA #$02		; A68D	$A9 $02
	STA $7BC6,X		; A68F	$9D $C6 $7B
	JMP $A43A		; A692	$4C $3A $A4	calc pose and copy to OAM buffer(init pose ??)
; End of

; Name	: Show_char_pos
; Marks	: Show status move graphic
Show_char_pos:
	BIT $43			; A695	$24 $43
	BMI L2E69C		; A697	$30 $03
	JMP Apply_OAM		; A699	$4C $2A $9E
; End of Show_char_pos
L2E69C:
	JSR Status_move		; A69C	$20 $CB $AF
	JMP Wait_NMI_end	; A69F	$4C $46 $FD
; End of Show_char_pos

	LDX #$04		; A6A2	$A2 $04
L2E6A4:
	LDA $9350,X		; A6A4	$BD $50 $93
	STA $00,X		; A6A7	$95 $00
	DEX			; A6A9	$CA
	BPL L2E6A4		; A6AA	$10 $F8
	LDA #$00		; A6AC	$A9 $00
	STA $0C			; A6AE	$85 $0C
	STA $0D			; A6B0	$85 $0D
	STA $0E			; A6B2	$85 $0E
	LDA #$FF		; A6B4	$A9 $FF
	STA $0B			; A6B6	$85 $0B
	LDY #$2A		; A6B8	$A0 $2A
	LDA ($80),Y		; A6BA	$B1 $80
	BEQ L2E6D0		; A6BC	$F0,$12
	TAX			; A6BE	$AA
L2E6BF:
	ROR $04			; A6BF	$66 $04
	ROR $03			; A6C1	$66 $03
	ROR $02			; A6C3	$66 $02
	ROR $01			; A6C5	$66 $01
	ROR $00			; A6C7	$66 $00
	DEX			; A6C9	$CA
	BNE L2E6BF		; A6CA	$D0 $F3
	BCC L2E6D6		; A6CC	$90 $08
	BCS L2E6DC		; A6CE	$B0 $0C
L2E6D0:
	JSR $A6F1		; A6D0	$20 $F1 $A6
	JMP $A707		; A6D3	$4C $07 $A7
;
L2E6D6:
.byte $A9,$00,$85,$0B,$F0,$2B
L2E6DC:
.byte $20,$E2,$A6,$4C
.byte $07,$A7,$A2,$00,$86,$0D,$BD,$62,$7B,$10,$05,$E8,$E0,$08,$D0,$F4
.byte $60

; Name	:
; Marks	:
	LDA #$FF		; A6F1	$A9 $FF
	STA $0E			; A6F3	$85 $0E
	LDX #$07		; A6F5	$A2 $07
L2E6F7:
	STX $0D			; A6F7	$86 $0D
	LDA $7B62,X		; A6F9	$BD $62 $7B
	BMI L2E703		; A6FC	$30 $05
	LDA $7B5A,X		; A6FE	$BD $5A $7B
	BEQ L2E706		; A701	$F0 $03
L2E703:
	DEX			; A703	$CA
	BPL L2E6F7		; A704	$10 $F1
L2E706:
	RTS			; A706	$60
; End of
	LDA #$00		; A707	$A9 $00
	STA $0F			; A709	$85 $0F
	JSR $A86F		; A70B	$20 $6F $A8
	JSR $A94B		; A70E	$20 $4B $A9
	LDA $0C			; A711	$A5 $0C
	ORA $0D			; A713	$05 $0D
	AND #$80		; A715	$29 $80
	BEQ L2D71F		; A717	$F0 $06
	JSR $A86F		; A719	$20 $6F $A8
.byte $20,$4B,$A9
L2D71F:
	JSR $FC34		; A71F	$20 $34 $FC
	LDA $0B			; A722	$A5 $0B
	BNE L2E72C		; A724	$D0 $06
	JSR $A7DC		; A726	$20 $DC $A7
.byte $4C,$2F,$A7
L2E72C:
	JSR $A732		; A72C	$20 $32 $A7
	JMP $A707		; A72F	$4C $07,$A7
; End of

; Name	:
; Marks	:
	LDA $34			; A732	$A5 $34
	AND #$03		; A734	$29 $03
	BEQ L2E73B		; A736	$F0 $03
	JMP $A848		; A738	$4C $48 $A8
;
L2E73B:
	LDA $34			; A73B	$A5 $34
	ASL A			; A73D	$0A
	BCS L2E798		; A73E	$B0 $58
	ASL A			; A740	$0A
	BCS L2E7B3		; A741	$B0 $70
	ASL A			; A743	$0A
	BCS L2E76E		; A744	$B0 $28
	ASL A			; A746	$0A
	BCS L2E74A		; A747	$B0 $01
	RTS			; A749	$60
; End of

L2E74A:
	LDA $0D			; A74A	$A5 $0D
	AND #$0F		; A74C	$29 $0F
	STA $0D			; A74E	$85 $0D
	BEQ L2E765		; A750	$F0 $13
	DEC $0D			; A752	$C6 $0D
	LDX $0D			; A754	$A6 $0D
	LDA $7B62,X		; A756	$BD $62 $7B
	BMI L2E74A		; A759	$30 $EF
	LDA $0E			; A75B	$A5 $0E
	BEQ L2E764		; A75D	$F0 $05
	LDA $7B5A,X		; A75F	$BD $5A $7B
	BNE L2E74A		; A762	$D0 $E6
L2E764:
	RTS			; A764	$60
; End of

L2E765:
.byte $A9,$88,$85,$0D,$A5,$0E,$D0,$DD,$60
L2E76E:
.byte $A5,$0D
.byte $10,$06,$A9,$00,$85,$0D,$F0,$06,$C9,$07,$B0,$13,$E6,$0D,$A6,$0D
.byte $BD,$62,$7B,$30,$E9,$A5,$0E,$F0,$05,$BD,$5A,$7B,$D0,$E0,$60,$A9
.byte $80,$85,$0D,$A5,$0E,$D0,$D7,$60
L2E798:
.byte $A5,$0D,$C9,$06,$B0,$0C,$E6,$0D
.byte $E6,$0D,$A6,$0D,$BD,$62,$7B,$30,$EF,$60,$A9,$00,$85,$0B,$A9,$00
.byte $85,$0C,$60
L2E7B3:
	LDA $0D			; A7B3	$A5 $0D
	BMI L2E7D0		; A7B5	$30 $19
	CMP #$02		; A7B7	$C9 $02
	BCC L2E7D0		; A7B9	$90 $15
	DEC $0D			; A7BB	$C6 $0D
	DEC $0D			; A7BD	$C6 $0D
	LDX $0D			; A7BF	$A6 $0D
	LDA $7B62,X		; A7C1	$BD $62 $7B
	BMI L2E7B3		; A7C4	$30 $ED
	LDA $0E			; A7C6	$A5 $0E
	BEQ L2E7CF		; A7C8	$F0 $05
	LDA $7B5A,X		; A7CA	$BD $5A $7B
	BNE L2E7B3		; A7CD	$D0 $E4
L2E7CF:
	RTS			; A7CF	$60
; End of

L2E7D0:
.byte $A9,$00,$85,$0B,$AD,$DE,$7B,$85,$0C,$C6,$0C,$60,$A5,$34,$29,$03
.byte $D0,$66,$A5,$34,$0A,$B0,$4B,$0A,$B0,$53,$0A,$B0,$22,$0A,$B0,$01
.byte $60,$A5,$0C,$29,$07,$85,$0C,$F0,$03,$C6,$0C,$60,$AD,$DE,$7B,$18

;; [A800 : 0x2E800]

.byte $69,$80,$85,$0C,$A5,$0E,$F0,$06,$AE,$DE,$7B,$CA,$86,$0C,$60,$A5
.byte $0C,$10,$05,$A9,$00,$85,$0C,$60,$AD,$DE,$7B,$38,$E9,$02,$C5,$0C
.byte $90,$03,$E6,$0C,$60,$A9,$80,$85,$0C,$A5,$0E,$F0,$04,$A9,$00,$85
.byte $0C,$60,$A9,$FF,$85,$0B,$A9,$80,$85,$0D,$4C,$6E,$A7,$A9,$FF,$85
.byte $0B,$A9,$08,$85,$0D,$4C,$4A,$A7
	LSR A			; A848	$4A
	BCS L2E84F		; A849	$B0 $04
	LDA #$FF		; A84B	$A9 $FF
	BNE L2E863		; A84D	$D0 $14
L2E84F:
	LDA $0B			; A84F	$A5 $0B
	BNE L2E85B		; A851	$D0 $08
	LDA $0C			; A853	$A5 $0C
	BPL L2E863		; A855	$10 $0C
	LDA #$08		; A857	$A9 $08
	BNE L2E863		; A859	$D0 $08
L2E85B:
	LDA $0D			; A85B	$A5 $0D
	BPL L2E861		; A85D	$10 $02
	LDA #$08		; A85F	$A9 $08
L2E861:
	ORA #$80		; A861	$09 $80
L2E863:
	LDY #$2B		; A863	$A0 $2B
	STA ($80),Y		; A865	$91 $80
	JSR $9D06		; A867	$20 $06 $9D
	PLA			; A86A	$68
	PLA			; A86B	$68
	JMP $A94B		; A86C	$4C $4B $A9
; End of

; Name	:
; Marks	:
	JSR $9D06		; A86F	$20 $06 $9D
	LDA $0B			; A872	$A5 $0B
	BNE L2E895		; A874	$D0 $1F
	LDA #$00		; A876	$A9 $00
	LDX $0C			; A878	$A6 $0C
	BPL L2E8B4		; A87A	$10 $38
	LDA #$00		; A87C	$A9 $00
	STA $0A			; A87E	$85 $0A
	LDX $0F			; A880	$A6 $0F
	CPX $7BDE		; A882	$EC $DE $7B
	BCS L2E894		; A885	$B0 $0D
	JSR $A8B4		; A887	$20 $B4 $A8
.byte $E6,$0F,$E6,$0A,$A5,$0A
.byte $C9,$02,$D0,$EC
L2E894:
	RTS			; A894	$60
; End of
L2E895:
	LDA #$00		; A895	$A9 $00
	LDX $0D			; A897	$A6 $0D
	BPL L2E8F8		; A899	$10 $5D
	LDA #$00		; A89B	$A9 $00
	STA $0A			; A89D	$85 $0A
	LDX $0F			; A89F	$A6 $0F
	LDY $7B62,X		; A8A1	$BC $62 $7B
	BMI L2E8A9		; A8A4	$30 $03
	JSR $A8F8		; A8A6	$20 $F8 $A8
L2E8A9:
.byte $E6,$0F,$E6,$0A,$A5,$0A,$C9
.byte $04,$D0,$EC,$60

; Name	:
; Marks	:
L2E8B4:
.byte $85,$02,$BD,$A2,$7B,$F0,$12,$BD,$CA,$7B,$38,$E9
.byte $10,$85,$00,$BD,$CE,$7B,$18,$69,$08,$85,$04,$D0,$26,$BD,$C2,$7B
.byte $C9,$08,$D0,$12,$BD,$CA,$7B,$38,$E9,$18,$85,$00,$BD,$CE,$7B,$18
.byte $69,$08,$85,$04,$D0,$0D,$BD,$CA,$7B,$38,$E9,$10,$85,$00,$BD,$CE
.byte $7B,$85,$04,$A5,$02,$4C,$15,$A9
L2E8F8:
	STA $02			; A8F8	$85 $02
	LDA $7B9A,X		; A8FA	$BD $9A $7B
	BPL L2E900		; A8FD	$10 $01
	RTS			; A8FF	$60
; End of

L2E900:
	ASL A			; A900	$0A
	ASL A			; A901	$0A
	ASL A			; A902	$0A
	SEC			; A903	$38
	SBC #$10		; A904	$E9 $10
	STA $00			; A906	$85 $00
	LDA $7B92,X		; A908	$BD $92 $7B
	ASL A			; A90B	$0A
	ASL A			; A90C	$0A
	ASL A			; A90D	$0A
	STA $04			; A90E	$85 $04
	LDA $02			; A910	$A5 $02
	JMP $A915		; A912	$4C $15 $A9

	ASL A			; A915	$0A
	TAX			; A916	$AA
	LDA $24,X		; A917	$B5 $24
	STA $08			; A919	$85 $08
	LDA $25,X		; A91B	$B5 $25
	STA $09			; A91D	$85 $09
	LDA $00			; A91F	$A5 $00
	STA $02			; A921	$85 $02
	CLC			; A923	$18
	ADC #$08		; A924	$69 $08
	STA $01			; A926	$85 $01
	STA $03			; A928	$85 $03
	LDA $04			; A92A	$A5 $04
	STA $05			; A92C	$85 $05
	CLC			; A92E	$18
	ADC #$08		; A92F	$69 $08
	STA $06			; A931	$85 $06
	STA $07			; A933	$85 $07
	LDY #$00		; A935	$A0 $00
	LDX #$00		; A937	$A2 $00
L2E939:
	LDA $04,X		; A939	$B5 $04
	STA ($08),Y		; A93B	$91 $08
	INY			; A93D	$C8
	INY			; A93E	$C8
	INY			; A93F	$C8
	LDA $00,X		; A940	$B5 $00
	STA ($08),Y		; A942	$91 $08
	INY			; A944	$C8
	INX			; A945	$E8
	CPY #$10		; A946	$C0 $10
	BNE L2E939		; A948	$D0 $EF
	RTS			; A94A	$60
; End of

; Name	:
; Marks	:
	JSR Status_move		; A94B	$20 $CB $AF
	JMP Wait_NMI_end	; A94E	$4C $46 $FD
;

.byte $A9,$03,$85,$A5,$20,$70,$A9,$A0,$08,$B1,$A1,$09,$80,$91,$A1
.byte $A0,$2B,$B1,$9F,$29,$7F,$AA,$A9,$FF,$9D,$62,$7B,$CE,$4D,$7B,$60
	LDA $27			; A970	$A5 $27
	PHA			; A972	$48
	JSR $A97A		; A973	$20 $7A $A9
	PLA			; A976	$68
	STA $27			; A977	$85 $27
	RTS			; A979	$60
; End of

; Name	:
; Marks	:
	STX $00			; A97A	$86 $00
	LDA $A5			; A97C	$A5 $A5
	BNE L2E981		; A97E	$D0 $01
	RTS			; A980	$60
; End of
L2E981:
	LDY #$04		; A981	$A0 $04
	LDX #$18		; A983	$A2 $18
	JSR $9742		; A985	$20 $42 $97
	JSR Apply_OAM_pal	; A988	$20 $33 $9E
	LDX $00			; A98B	$A6 $00
	LDA $7B9A,X		; A98D	$BD $9A $7B
	STA $04			; A990	$85 $04
	ASL A			; A992	$0A
	ASL A			; A993	$0A
	ASL A			; A994	$0A
	STA $08			; A995	$85 $08
	LDA $7B92,X		; A997	$BD $92 $7B
	STA $05			; A99A	$85 $05
	ASL A			; A99C	$0A
	ASL A			; A99D	$0A
	ASL A			; A99E	$0A
	SEC			; A99F	$38
	SBC #$01		; A9A0	$E9 $01
	STA $09			; A9A2	$85 $09
	LDA $7B8A,X		; A9A4	$BD $8A $7B
	STA $06			; A9A7	$85 $06
	LDA $7B82,X		; A9A9	$BD $82 $7B
	STA $07			; A9AC	$85 $07
	JSR $9DE7		; A9AE	$20 $E7 $9D
	LDX $00			; A9B1	$A6 $00
	LDA $7B72,X		; A9B3	$BD $72 $7B
	CMP #$09		; A9B6	$C9 $09
	BCC L2E9BD		; A9B8	$90 $03
	JMP $AADB		; A9BA	$4C $DB $AA
L2E9BD:
	LDA #$10		; A9BD	$A9 $10
	STA $20			; A9BF	$85 $20
	LDA #$02		; A9C1	$A9 $02
	STA $21			; A9C3	$85 $21
	LDY #$00		; A9C5	$A0 $00
	LDX #$00		; A9C7	$A2 $00
L2E9C9:
	LDA $20,X		; A9C9	$B5 $20
	CLC			; A9CB	$18
	ADC #$18		; A9CC	$69 $18
	STA $22,X		; A9CE	$95 $22
	LDA #$02		; A9D0	$A9 $02
	STA $23,X		; A9D2	$95 $23
	INX			; A9D4	$E8
	INX			; A9D5	$E8
	INY			; A9D6	$C8
	CPY #$05		; A9D7	$C0 $05
	BNE L2E9C9		; A9D9	$D0 $EE
	LDA $08			; A9DB	$A5 $08
	STA $00			; A9DD	$85 $00
	LDY #$00		; A9DF	$A0 $00
L2E9E1:
	INY			; A9E1	$C8
	LDA #$58		; A9E2	$A9 $58
	STA ($20),Y		; A9E4	$91 $20
	LDA #$59		; A9E6	$A9 $59
	STA ($22),Y		; A9E8	$91 $22
	LDA #$5A		; A9EA	$A9 $5A
	STA ($24),Y		; A9EC	$91 $24
	LDA #$5B		; A9EE	$A9 $5B
	STA ($26),Y		; A9F0	$91 $26
	LDA #$5C		; A9F2	$A9 $5C
	STA ($28),Y		; A9F4	$91 $28
	LDA #$5D		; A9F6	$A9 $5D
	STA ($2A),Y		; A9F8	$91 $2A
	INY			; A9FA	$C8
	LDA #$02		; A9FB	$A9 $02
	STA ($20),Y		; A9FD	$91 $20
	STA ($22),Y		; A9FF	$91 $22
	STA ($24),Y		; AA01	$91 $24
	STA ($26),Y		; AA03	$91 $26
	STA ($28),Y		; AA05	$91 $28
	STA ($2A),Y		; AA07	$91 $2A
	INY			; AA09	$C8
	LDA $00			; AA0A	$A5 $00
	STA ($20),Y		; AA0C	$91 $20
	STA ($22),Y		; AA0E	$91 $22
	STA ($24),Y		; AA10	$91 $24
	STA ($26),Y		; AA12	$91 $26
	STA ($28),Y		; AA14	$91 $28
	STA ($2A),Y		; AA16	$91 $2A
	CLC			; AA18	$18
	ADC #$08		; AA19	$69 $08
	STA $00			; AA1B	$85 $00
	INY			; AA1D	$C8
	CPY #$18		; AA1E	$C0 $18
	BNE L2E9E1		; AA20	$D0 $BF
	LDX #$00		; AA22	$A2 $00
	LDY #$00		; AA24	$A0 $00
L2EA26:
	STY $0A,X		; AA26	$94 $0A
	DEY			; AA28	$88
	INX			; AA29	$E8
	CPX #$07		; AA2A	$E0 $07
	BNE L2EA26		; AA2C	$D0 $F8
	LDY $A5			; AA2E	$A4 $A5
	CPY #$03		; AA30	$C0 $03
	BEQ L2EA3B		; AA32	$F0 $07
	DEY			; AA34	$88
	LDX $ABA7,Y		; AA35	$BE $A7 $AB
	JSR $9E72		; AA38	$20 $72 $9E
L2EA3B:
	LDA #$00		; AA3B	$A9 $00
	STA $12			; AA3D	$85 $12
	LDA #$20		; AA3F	$A9 $20
	STA $13			; AA41	$85 $13
	LDA #$04		; AA43	$A9 $04
	STA $14			; AA45	$85 $14
L2EA47:
	JSR $AB7D		; AA47	$20 $7D $AB
	DEC $14			; AA4A	$C6 $14
	BNE L2EA47		; AA4C	$D0 $F9
	LDX #$00		; AA4E	$A2 $00
	STX $11			; AA50	$86 $11
L2EA52:
	LDA $0A,X		; AA52	$B5 $0A
	BMI L2EA6B		; AA54	$30 $15
	ASL A			; AA56	$0A
	ASL A			; AA57	$0A
	ASL A			; AA58	$0A
	ADC $09			; AA59	$65 $09
	PHA			; AA5B	$48
	TXA			; AA5C	$8A
	ASL A			; AA5D	$0A
	TAX			; AA5E	$AA
	LDA $20,X		; AA5F	$B5 $20
	STA $00			; AA61	$85 $00
	LDA $21,X		; AA63	$B5 $21
	STA $01			; AA65	$85 $01
	PLA			; AA67	$68
	JSR $AAB8		; AA68	$20 $B8 $AA
L2EA6B:
	INC $11			; AA6B	$E6 $11
	LDX $11			; AA6D	$A6 $11
	CPX #$06		; AA6F	$E0 $06
	BNE L2EA52		; AA71	$D0 $DF
	LDA $10			; AA73	$A5 $10
	BMI L2EA7C		; AA75	$30 $05
	JSR $AAC7		; AA77	$20 $C7 $AA
	INC $05			; AA7A	$E6 $05
L2EA7C:
	LDX #$00		; AA7C	$A2 $00
	STX $11			; AA7E	$86 $11
L2EA80:
	LDA $0A,X		; AA80	$B5 $0A
	BMI L2EA98		; AA82	$30 $14
	CMP $07			; AA84	$C5 $07
	BCC L2EA98		; AA86	$90 $10	
	TXA			; AA88	$8A
	ASL A			; AA89	$0A
	TAX			; AA8A	$AA
	LDA $20,X		; AA8B	$B5 $20
	STA $00			; AA8D	$85 $00
	LDA $21,X		; AA8F	$B5 $21
	STA $01			; AA91	$85 $01
	LDA #$F0		; AA93	$A9 $F0
	JSR $AAB8		; AA95	$20 $B8 $AA
L2EA98:
	LDX $11			; AA98	$A6 $11
	INC $0A,X		; AA9A	$F6 $0A
	INX			; AA9C	$E8
	STX $11			; AA9D	$86 $11
	CPX #$06		; AA9F	$E0 $06
	BNE L2EA80		; AAA1	$D0 $DD
	INC $10			; AAA3	$E6 $10
	LDA $10			; AAA5	$A5 $10
	BMI L2EAAF		; AAA7	$30 $06
	LDA $07			; AAA9	$A5 $07
	CMP $10			; AAAB	$C5 $10
	BCC L2EAB2		; AAAD	$90 $03
L2EAAF:
	JMP $AA43		; AAAF	$4C $43 $AA
L2EAB2:
	JSR $9DE7		; AAB2	$20 $E7 $9D
	JMP $9E2A		; AAB5	$4C $2A $9E
; End of

; Name	:
; Marks	:
	LDY #$00		; AAB8	$A0 $00
	LDX #$00		; AABA	$A2 $00
L2EABC:
	STA ($00),Y		; AABC	$91 $00
	JSR $9DFC		; AABE	$20 $FC $9D
	INX			; AAC1	$E8
	CPX $06			; AAC2	$E4 $06
	BNE L2EABC		; AAC4	$D0 $F6
	RTS			; AAC6	$60
; End of

; Name	:
; Marks	:
	LDA $05			; AAC7	$A5 $05
	LDX #$20		; AAC9	$A2 $20
	JSR Multi		; AACB	$20 $79 $FC
	LDA $04			; AACE	$A5 $04
	ADC $02			; AAD0	$65 $02
	STA $12			; AAD2	$85 $12
	LDA $03			; AAD4	$A5 $03
	ADC #$20		; AAD6	$69 $20
	STA $13			; AAD8	$85 $13
	RTS			; AADA	$60
; End of

;AADB
.byte $AD,$72,$7B,$C9,$0F
.byte $F0,$0C,$A2,$05,$20,$72,$9E,$A9,$07,$85,$00,$4C,$7D,$9E,$A9,$40
.byte $85,$E0,$A2,$06,$20,$72,$9E,$20,$CF,$9D,$A2,$90,$A0,$70,$A9,$80

;; [AB00 : 0x2EB00]

.byte $85,$00,$A9,$9A,$85,$01,$20,$BA,$FB,$20,$C6,$9D,$A9,$E0,$85,$04
.byte $A9,$76,$85,$05,$A9,$07,$85,$06,$A9,$00,$85,$00,$A9,$18,$85,$01
.byte $20,$76,$AB,$20,$3F,$9E,$20,$95,$AB,$20,$46,$FD,$A2,$00,$A0,$00
.byte $BD,$00,$76,$31,$04,$9D,$00,$76,$E8,$C8,$C0,$10,$D0,$F2,$E0,$80
.byte $D0,$EC,$20,$76,$AB,$20,$5B,$FD,$20,$A2,$9D,$20,$46,$FD,$A5,$00
.byte $18,$69,$80,$85,$00,$A5,$01,$69,$00,$85,$01,$C9,$20,$D0,$C1,$A5
.byte $04,$38,$E9,$10,$85,$04,$A9,$04,$20,$1F,$9E,$C6,$06,$D0,$A9,$A9
.byte $00,$85,$39,$4C,$33,$9E,$A5,$39,$49,$01,$85,$39,$60

; Name	:
; Marks	:
	JSR $9E3F		; AB7D	$20 $3F $9E
	JSR Copy_OAM_dma_	; AB80	$20 $60 $9E
	LDA $12			; AB83	$A5 $12
	STA $00			; AB85	$85 $00
	LDA $13			; AB87	$A5 $13
	STA $01			; AB89	$85 $01
	LDX $06			; AB8B	$A6 $06
	LDA #$00		; AB8D	$A9 $00
	JSR $9D63		; AB8F	$20 $63 $9D
	JMP $FD46		; AB92	$4C $46 $FD
; End of

;AB95
.byte $20,$7E,$FD,$AD,$07,$20,$A0,$00,$AD,$07,$20
.byte $99,$00,$76,$C8,$10,$F7,$60,$04,$0E

; Name	:
; Marks	:
	TAX			; ABA9	$AA
	CPX #$01		; ABAA	$E0 $01
	BCC L2EBAF		; ABAC	$90 $01
	DEX			; ABAE	$CA
L2EBAF:
	CPX #$07		; ABAF	$E0 $07
	BNE L2EBB4		; ABB1	$D0 $01
	INX			; ABB3	$E8
L2EBB4:
	LDA #$40		; ABB4	$A9 $40
	JSR Multi		; ABB6	$20 $79 $FC
	LDA $02			; ABB9	$A5 $02
	STA $00			; ABBB	$85 $00
	LDA #$98		; ABBD	$A9 $98
	ADC $03			; ABBF	$65 $03
	STA $01			; ABC1	$85 $01
	LDX #$00		; ABC3	$A2 $00
	LDY #$80		; ABC5	$A0 $80
	JSR Copy_char_tile	; ABC7	$20 $BA $FB
	JSR Wait_MENU_snd	; ABCA	$20 $5B $FD
	LDA #$00		; ABCD	$A9 $00
	STA $00			; ABCF	$85 $00
	LDA #$05		; ABD1	$A9 $05
	STA $01			; ABD3	$85 $01
	JSR Set_02_gfxbuf	; ABD5	$20 $C6 $9D
	JSR $9DA2		; ABD8	$20 $A2 $9D
	JMP $FD46		; ABDB	$4C $46 $FD
; End of

; Name	:
; Marks	:
	LDX $27			; ABDE	$A6 $27
	JSR $9BB4		; ABE0	$20 $B4 $9B
	LDX $27			; ABE3	$A6 $27
	JSR $ABFD		; ABE5	$20 $FD $AB
	JSR $A306		; ABE8	$20 $06 $A3
	LDX $27			; ABEB	$A6 $27
	JSR $A265		; ABED	$20 $65 $A2
	LDY $27			; ABF0	$A4 $27
	JSR $9B8F		; ABF2	$20 $8F $9B
	LDX $27			; ABF5	$A6 $27
	JSR $A43A		; ABF7	$20 $3A $A4
	JMP $9E2A		; ABFA	$4C $2A $9E
; End of

; Name	:
; X	:
; Y	:
; Marks	:
	LDY $7BAE,X		; ABFD	$BC $AE $7B	character pose
	LDA $934B,Y		; AC00	$B9 $4B $93	battle sound effect ??
	STA $7BC2,X		; AC03	$9D $C2 $7B	character lower sprite pose ??
	RTS			; AC06	$60
; End of

; Name	:
; Marks	:
	STA $00			; AC07	$85 $00
	LDA $7BB6,X		; AC09	$BD $B6 $7B
	STA $01			; AC0C	$85 $01
	LDA $7BCA,X		; AC0E	$BD $CA $7B
	STA $02			; AC11	$85 $02
	LDA $7BCE,X		; AC13	$BD $CE $7B
	STA $03			; AC16	$85 $03
	LDY #$00		; AC18	$A0 $00
	LDA $7BA2,X		; AC1A	$BD $A2 $7B
	BEQ L2EC21		; AC1D	$F0 $02
	LDY #$0C		; AC1F	$A0 $0C
L2EC21:
	LDX #$00		; AC21	$A2 $00
L2EC23:
	CLC			; AC23	$18
	LDA $9276,Y		; AC24	$B9 $76 $92
	ADC $03			; AC27	$65 $03
	STA $0270,X		; AC29	$9D $70 $02
	INX			; AC2C	$E8
	LDA $00			; AC2D	$A5 $00
	STA $0270,X		; AC2F	$9D $70 $02
	INC $00			; AC32	$E6 $00
	INX			; AC34	$E8
	LDA $01			; AC35	$A5 $01
	STA $0270,X		; AC37	$9D $70 $02
	INX			; AC3A	$E8
	CLC			; AC3B	$18
	LDA $9264,Y		; AC3C	$B9 $64 $92
	ADC $02			; AC3F	$65 $02
	STA $0270,X		; AC41	$9D $70 $02
	INX			; AC44	$E8
	INY			; AC45	$C8
	CPX #$18		; AC46	$E0 $18
	BNE L2EC23		; AC48	$D0 $D9
	RTS			; AC4A	$60
; End of

; Name	:
; Marks	:
	STX $02			; AC4B	$86 $02
	STA $03			; AC4D	$85 $03
	LDX $26			; AC4F	$A6 $26
	LDA $7BCA,X		; AC51	$BD $CA $7B
	STA $04			; AC54	$85 $04
	LDA $7BCE,X		; AC56	$BD $CE $7B
	STA $05			; AC59	$85 $05
	LDX $02			; AC5B	$A6 $02
	BNE L2EC60		; AC5D	$D0 $01
	RTS			; AC5F	$60
; End of
L2EC60:
	DEX			; AC60	$CA
	TXA			; AC61	$8A
	ASL A			; AC62	$0A
	TAX			; AC63	$AA
	LDA $AD95,X		; AC64	$BD $95 $AD
	STA $00			; AC67	$85 $00
	LDA $AD96,X		; AC69	$BD $96 $AD
	STA $01			; AC6C	$85 $01
.byte $6C,$00,$00
	;JMP ($0000)		; AC6E	$6C $00 $00
	LDA $03			; AC71	$A5 $03
	AND #$01		; AC73	$29 $01
	EOR #$01		; AC75	$49 $01
	STA $06			; AC77	$85 $06
	JSR $AD64		; AC79	$20 $64 $AD
	LDA $06			; AC7C	$A5 $06
	EOR #$01		; AC7E	$49 $01
	JSR $AD3F		; AC90	$20 $3F $AD
	JMP $AD19		; AC93	$4C $19 $AD
;
; AC96
.byte $A5,$03,$29,$01,$49,$01,$85,$06,$20,$64
.byte $AD,$A6,$06,$E8,$8A,$20,$3F,$AD,$4C,$19,$AD,$A5,$03,$29,$01,$D0
.byte $06,$A9,$F0,$8D,$88,$02,$60,$A5,$04,$38,$E9,$05,$85,$06,$A5,$05
.byte $18,$69,$09,$85,$07,$A5,$03,$29,$02,$F0,$04,$E6,$06,$E6,$06,$A5
.byte $07,$8D,$88,$02,$A9,$53,$8D,$89,$02,$A6,$26,$BD,$B6,$7B,$8D,$8A
.byte $02,$A5,$06,$8D,$8B,$02,$60

	LDA #$03		; ACD7	$A9 $03
	JSR $AD3F		; ACD9	$20 $3F $AD
	LDA $03			; ACDC	$A5 $03
	BEQ L2ECE8		; ACDE	$F0 $08
	LDA #$F0		; ACE0	$A9 $F0
	STA $0B			; ACE2	$85 $0B
	STA $0D			; ACE4	$85 $0D
	LDA #$0D		; ACE6	$A9 $0D
L2ECE8:
	JSR $AD64		; ACE8	$20 $64 $AD
	JMP $AD19		; ACEA	$4C $19 $AD
;
	LDA #$0E		; ACEE	$A9 $0E
	JSR $AD64		; ACF0	$20 $64 $AD
	LDA $1C			; ACF3	$A5 $1C
	STA $06			; ACF5	$85 $06
	CLC			; ACF7	$18
	ADC #$08		; ACF8	$69 $08
	STA $07			; ACFA	$85 $07
	LDA $1D			; ACFC	$A5 $1D
	STA $0A			; ACFE	$85 $0A
	STA $0B			; AD00	$85 $0B
	LDY #$10		; AD02	$A0 $10
	LDA #$02		; AD04	$A9 $02
	JMP $AD1D		; AD06	$4C $1D $AD
;
;AD09
.byte $A5,$03,$18,$69,$03,$20,$64
;; [AD10 : 0x2ED10]
.byte $AD,$A9,$01,$20,$3F,$AD,$4C,$19,$AD

	LDY #$00		; AD19	$A0 $00
	LDA #$04		; AD1B	$A9 $04
	STA $00			; AD1D	$85 $00
	LDX #$00		; AD1F	$A2 $00
L2ED21:
	LDA $0A,X		; AD21	$B5 $0A
	STA $0288,Y		; AD23	$99 $88 $02
	INY			; AD26	$C8
	LDA $0E,X		; AD27	$B5 $0E
	STA $0288,Y		; AD29	$99 $88 $02
	INY			; AD2C	$C8
	LDA $12,X		; AD2D	$B5 $12
	STA $0288,Y		; AD2F	$99 $88 $02
	INY			; AD32	$C8
	LDA $06,X		; AD33	$B5 $06
	STA $0288,Y		; AD35	$99 $88 $02
	INY			; AD38	$C8
	INX			; AD39	$E8
	CPX $00			; AD3A	$E4 $00
	BNE L2ED21		; AD3C	$D0 $E3
	RTS			; AD3E	$60
; End of

; Name	:
; Marks	:
	ASL A			; AD3F	$0A
	TAX			; AD40	$AA
	LDA $93AC,X		; AD41	$BD $AC $93
	CLC			; AD44	$18
	ADC $04			; AD45	$65 $04
	STA $06			; AD47	$85 $06
	STA $08			; AD49	$85 $08
	CLC			; AD4B	$18
	ADC #$08		; AD4C	$69 $08
	STA $07			; AD4E	$85 $07
	STA $09			; AD50	$85 $09
	LDA $93AD,X		; AD52	$BD $AD $93
	CLC			; AD55	$18
	ADC $05			; AD56	$65 $05
	STA $0A			; AD58	$85 $0A
	STA $0B			; AD5A	$85 $0B
	CLC			; AD5C	$18
	ADC #$08		; AD5D	$69 $08
	STA $0C			; AD5F	$85 $0C
	STA $0D			; AD61	$85 $0D
	RTS			; AF63	$60
; End of

; Name	:
; Marks	:
	LDX #$05		; AD64	$A2 $05
	JSR Multi		; AD66	$20 $79 $FC
	LDA $02			; AD69	$A5 $02
	ADC #$55		; AD6B	$69 $55
	STA $00			; AD6D	$85 $00
	LDA $03			; AD6E	$A5 $03
	ADC #$93		; AD71	$69 $93
	STA $01			; AD73	$85 $01
	LDY #$04		; AD75	$A0 $04
	LDA ($00),Y		; AD77	$B1 $00
	ASL A			; AD79	$0A
	ASL A			; AD7A	$0A
	ADC #$A0		; AD7B	$69 $A0
	STA $02			; AD7D	$85 $02
	LDA #$93		; AD7F	$A9 $93
	ADC #$00		; AD81	$69 $00
	STA $03			; AD83	$85 $03
	LDY #$03		; AD85	$A0 $03
L2ED87:
	LDA ($00),Y		; AD87	$B1 $00
.byte $99,$0E,$00
	;STA $000E,Y		; AD89	$99 $0E $00
	LDA ($02),Y		; AD8C	$B1 $02
.byte $99,$12,$00
	;STA $0012,Y		; AD8E	$99 $12 $00
	DEY			; AD91	$88
	BPL L2ED87		; AD92	$10 $F3
	RTS			; AD94	$60
; End of

; $AD95	data block
.byte $71,$AC,$86,$AC,$9B,$AC,$D7,$AC,$EE,$AC,$09
.byte $AD,$0A

; Name	: Calc_char_addr
; A	: character index (00h, 01h, 02h, 03h)
; Ret	: A
; Marks	: character id to address
;	  00h -> 00h
;	  01h -> 40h
;	  02h -> 80h
;	  03h -> C0h
Calc_char_addr:
	ASL A			; ADA2	$0A
	ASL A			; ADA3	$0A
;ADA4
	ASL A			; ADA4	$0A
	ASL A			; ADA5	$0A
	ASL A			; ADA6	$0A
	ASL A			; ADA7	$0A
	RTS			; ADA8	$60
; End of Calc_char_addr

.byte $0A,$26,$01,$0A,$26,$01,$0A
.byte $26,$01,$0A,$26,$01,$0A,$26,$01,$0A,$26,$01,$0A,$26,$01,$60
;ADBF
.byte $AD
.byte $09,$93,$85,$E0,$A2,$03,$86,$10,$A9,$00,$9D,$D6,$7B,$9D,$DA,$7B
.byte $BD,$AE,$7B,$C9,$03,$B0,$08,$A9,$05,$9D,$C2,$7B,$20,$06,$A3,$C6
.byte $10,$A6,$10,$10,$E3,$A9,$03,$85,$11,$A2,$03,$86,$10,$20,$3A,$A4
.byte $C6,$10,$A6,$10,$10,$F7,$A9,$18,$85,$10,$20,$2A,$9E,$C6,$10,$D0

;; [AE00 : 0x2EE00]

.byte $F9,$A2,$03,$BD,$AE,$7B,$C9,$03,$B0,$08,$BD,$C2,$7B,$49,$04,$9D
.byte $C2,$7B,$CA,$10,$EE,$C6,$11,$D0,$D0,$A2,$03,$86,$10,$BD,$AE,$7B
.byte $C9,$03,$B0,$14,$BD,$CA,$7B,$D0,$05,$9D,$C2,$7B,$F0,$0A,$A9,$02
.byte $9D,$C6,$7B,$A9,$80,$20,$12,$A5,$A6,$10,$20,$3A,$A4,$C6,$10,$A6
.byte $10,$10,$DA,$20,$2A,$9E,$A2,$03,$A9,$00,$85,$00,$BD,$AE,$7B,$C9
.byte $03,$B0,$07,$BD,$CA,$7B,$05,$00,$85,$00,$CA,$10,$EF,$A5,$00,$D0
.byte $B8,$A2,$04,$A9,$F0,$9D,$00,$02,$E8,$D0,$FA,$4C,$2A,$9E,$A2,$03
.byte $86,$10,$A9,$00,$9D,$D6,$7B,$9D,$DA,$7B,$BD,$AE,$7B,$C9,$03,$B0
.byte $08,$A9,$01,$9D,$C2,$7B,$20,$3A,$A4,$C6,$10,$A6,$10,$10,$E3,$20
.byte $2A,$9E,$A2,$03,$86,$10,$BD,$AE,$7B,$C9,$03,$B0,$18,$BD,$CA,$7B
.byte $C9,$F0,$90,$07,$A9,$00,$9D,$C2,$7B,$F0,$0A,$A9,$02,$9D,$C6,$7B
.byte $A9,$00,$20,$12,$A5,$A6,$10,$20,$3A,$A4,$C6,$10,$A6,$10,$10,$D6
.byte $A9,$04,$85,$00,$20,$2A,$9E,$C6,$00,$D0,$F9,$A2,$03,$A9,$00,$85
.byte $00,$BD,$AE,$7B,$C9,$03,$B0,$07,$BD,$CA,$7B,$49,$F0,$85,$00,$CA
.byte $10,$EF,$A5,$00,$D0,$AC,$A2,$04,$A9,$F0,$9D,$00,$02,$E8,$D0,$FA
.byte $F0,$36
;AEF2
.byte $AD,$48,$7B,$C9,$7F,$F0,$0F,$AD,$0A,$93,$85,$E0,$20,$2A

;; [AF00 : 0x2EF00]

.byte $9E,$20,$34,$FC,$A5,$34,$F0,$F6,$20,$79,$9E,$A9,$40,$85,$E0,$AD
.byte $48,$7B,$C9,$7F,$F0,$07,$68,$68,$68,$68,$4C,$2E,$FE,$A9,$5A,$85
.byte $00,$20,$2A,$9E,$C6,$00,$D0,$F9,$20,$2A,$9E,$68,$68,$68,$68,$4C
.byte $0F,$FA

	JSR Wait_NMI_end	; AF32	$20 $46 $FD
	JSR $9DE7		; AF35	$20 $E7 $9D
	JSR Init_gfx_buf	; AF38	$20 $CF $9D
	LDX #$03		; AF3B	$A2 $03
	STX $04			; AF3D	$86 $04
L2EF3F:
	LDA $7BA2,X		; AF3F	$BD $A2 $7B
	BMI L2EF6E		; AF42	$30 $2A
	LDA $7BAE,X		; AF44	$BD $AE $7B
	CMP #$03		; AF47	$C9 $03
	BCS L2EF6E		; AF49	$B0 $23
	LDA #$00		; AF4B	$A9 $00
	STA $01			; AF4D	$85 $01
	LDA $7BB2,X		; AF4F	$BD $B2 $7B
	CMP #$FF		; AF52	$C9 $FF
	BEQ L2EF6E		; AF54	$F0 $18
	JSR $ADAC		; AF56	$20 $AC $AD
.byte $18,$69,$C0,$85,$00,$A5,$01
.byte $69,$9B,$85,$01,$8A,$20,$A2,$AD,$AA,$A0,$40,$20,$BA,$FB
L2EF6E:
	DEC $04			; AF6E	$C6 $04
	LDX $04			; AF70	$A6 $04
	BPL L2EF3F		; AF72	$10 $CB
	JSR Wait_MENU_snd	; AF74	$20 $5B $FD
	LDA #$80		; AF77	$A9 $80
	STA $00			; AF79	$85 $00
	LDA #$03		; AF7B	$A9 $03
	STA $01			; AF7D	$85 $01
	JSR Set_02_gfxbuf	; AF7F	$20 $C6 $9D
	JSR $9DA2		; AF82	$20 $A2 $9D
	JSR Wait_NMI_end	; AF85	$20 $46 $FD
	JSR Wait_MENU_snd	; AF88	$20 $5B $FD
	LDA #$00		; AF8B	$A9 $00
	STA $00			; AF8D	$85 $00
	LDA #$04		; AF8F	$A9 $04
	STA $01			; AF91	$85 $01
	JSR Set_02_gfxbuf	; AF93	$20 $C6 $9D
	SEC			; AF96	$38
	ROR $02			; AF97	$66 $02
	JSR $9DA2		; AF99	$20 $A2 $9D
	JSR Wait_NMI_end	; AF9C	$20 $46 $FD
	LDY #$19		; AF9F	$A0 $19
	LDX #$7C		; AFA1	$A2 $7C
	JSR Set_wpn_pal		; AFA3	$20 $03 $FC
	LDX #$03		; AFA6	$A2 $03
L2EFA8:
	TXA			; AFA8	$8A
	ASL A			; AFA9	$0A
	ASL A			; AFAA	$0A
	PHA			; AFAB	$48
	ASL A			; AFAC	$0A
	TAY			; AFAD	$A8
	PLA			; AFAE	$68
	CLC			; AFAF	$18
	ADC #$38		; AFB0	$69 $38
	STA $0281,Y		; AFB2	$99 $81 $02	OAM buffer ??
	INY			; AFB5	$C8
	INY			; AFB6	$C8
	INY			; AFB7	$C8
	INY			; AFB8	$C8
	ADC #$01		; AFB9	$69 $01
	STA $0281,Y		; AFBB	$99 $81 $02	OAM buffer ??
	DEX			; AFBE	$CA
	BPL L2EFA8		; AFBF	$10 $E7
	LDA #$80		; AFC1	$A9 $80
	STA $43			; AFC3	$85 $43
	JSR Apply_OAM_pal	; AFC5	$20 $33 $9E
	JMP Wait_MENU_snd	; AFC8	$4C $5B $FD
; End of

; Name	: Status_move
; Marks	: $00(ADDR) = OAM address ??
;	  Check all character status/frame counter
;	  Copy OAM buffer to PPU
;	  Status graphics ?? (2 OAM)
;	  1st character = $0280-$0287
;	  2nd character = $0288-$028F
;	  3rd character = $0290-$0297
;	  4th character = $0298-$029F
Status_move:
	JSR Wait_MENU_snd	; AFCB	$20 $5B $FD
	LDA #$80		; AFCE	$A9 $80
	STA $00			; AFD0	$85 $00		$00(ADDR) = $0280
	LDA #$02		; AFD2	$A9 $02
	STA $01			; AFD4	$85 $01
	LDX #$03		; AFD6	$A2 $03
L2EFD8:
	LDY #$0A		; AFD8	$A0 $0A
	LDA $7BB2,X		; AFDA	$BD $B2 $7B	status graphics ??
	CMP #$06		; AFDD	$C9 $06
	BNE L2EFE3		; AFDF	$D0 $02		if A != 06h
	LDY #$05		; AFE1	$A0 $05
L2EFE3:
	STY $06			; AFE3	$84 $06
	LDA $7BDF,X		; AFE5	$BD $DF $7B	frame counter for status animation ??
	CMP $06			; AFE8	$C5 $06
	BCC L2F048		; AFEA	$90 $5C
	LDA #$00		; AFEC	$A9 $00		counter reset ??
	STA $7BDF,X		; AFEE	$9D $DF $7B	frame counter for status animation ??
	LDA $7BCA,X		; AFF1	$BD $CA $7B	character x position (current) ??
	STA $02			; AFF4	$85 $02
	LDA #$F0		; AFF6	$A9 $F0
	LDY $7BA2,X		; AFF8	$BC $A2 $7B	character graphics type (hidden if msb set)
	BNE L2F014		; AFFB	$D0 $17
	LDY $7BB2,X		; AFFD	$BC $B2 $7B
	BMI L2F014		; B000	$30 $12
	LDA $7BCE,X		; B002	$BD $CE $7B
	CPY #$00		; B005	$C0 $00
	BNE L2F00B		; B007	$D0 $02
	ADC #$0C		; B009	$69 $0C
L2F00B:
	SEC			; B00B	$38
	SBC #$04		; B00C	$E9 $04
	CPY #$06		; B00E	$C0 $06
	BNE L2F014		; B010	$D0 $02
	SBC #$04		; B012	$E9 $04
L2F014:
	STA $03			; B014	$85 $03
	TXA			; B016	$8A
	ASL A			; B017	$0A
	ASL A			; B018	$0A
	ASL A			; B019	$0A
	TAY			; B01A	$A8
	LDA #$02		; B01B	$A9 $02		for OAM 16 x 8 ?? (2 OAM)
	STA $04			; B01D	$85 $04
L2F01F:
	LDA $03			; B01F	$A5 $03
	STA ($00),Y		; B021	$91 $00		OAM Y
	INY			; B023	$C8
	LDA ($00),Y		; B024	$B1 $00		INDEX
	EOR #$02		; B026	$49 $02
	STA ($00),Y		; B028	$91 $00		INDEX
	INY			; B02A	$C8
	LDA #$02		; B02B	$A9 $02
	STA ($00),Y		; B02D	$91 $00		ATTR
	INY			; B02F	$C8
	LDA $02			; B030	$A5 $02
	STA ($00),Y		; B032	$91 $00		OAM X
	CLC			; B034	$18
	ADC #$08		; B035	$69 $08
	STA $02			; B037	$85 $02
	INY			; B039	$C8
	DEC $04			; B03A	$C6 $04
	BNE L2F01F		; B03C	$D0 $E1		loop
	LDA $7BB2,X		; B03E	$BD $B2 $7B	status graphics (FFh = none)
	CMP #$06		; B041	$C9 $06
	BNE L2F048		; B043	$D0 $03
	JSR $B051		; B045	$20 $51 $B0
L2F048:
	INC $7BDF,X		; B048	$FE $DF $7B	frame conter for status animation
	DEX			; B04B	$CA
	BPL L2EFD8		; B04C	$10 $8A		loop - for all characters
	JMP Copy_OAM		; B04E	$4C $4E $9E
; End of Status_move

; Name	:
; Marks	:
	TXA			; B051	$8A
	JSR $ADA4		; B052	$20 $A4 $AD
	STA $02			; B055	$85 $02
	TXA			; B057	$8A
	JSR $ADA5		; B058	$20 $A5 $AD
	CLC			; B05B	$18
	ADC $02			; B05C	$65 $02
	ADC #$31		; B05E	$69 $31
	TAY			; B060	$A8
	LDA ($00),Y		; B061	$B1 $00
	EOR #$02		; B063	$49 $02
	STA ($00),Y		; B065	$91 $00
	JSR $9DFC		; B067	$20 $FC $9D
	LDA ($00),Y		; B06A	$B1 $00
	EOR #$02		; B06C	$49 $02
	STA ($00),Y		; B06E	$91 $00
	RTS			; B070	$60
; End of

; $B071 - attack ??
	JSR Wait_NMI_end	; B071	$20 $46 $FD
	LDX char_idx_atk	; B074	$A6 $26
	CPX #$04		; B076	$E0 $04
	BCC L2F07D		; B078	$90 $03
	JMP $B0E8		; B07A	$4C $E8 $B0
L2F07D:
	LDA $2B			; B07D	$A5 $2B
	BNE L2F0E5		; B07F	$D0 $64
	LDX char_idx_atk	; B081	$A6 $26
	JSR Char_mov_act	; B083	$20 $20 $A6
	JSR $B469		; B086	$20 $69 $B4	Check weapon ??
	LDX #$01		; B089	$A2 $01
L2F08B:
	STX $22			; B08B	$86 $22		loop counter ??
	LDA $20,X		; B08D	$B5 $20		weapon action type ??
	BEQ L2F0D0		; B08F	$F0 $3F
	TXA			; B091	$8A
	BEQ L2F096		; B092	$F0 $02
	LDA #$0A		; B094	$A9 $0A		left hand ??
L2F096:
	CLC			; B096	$18
	ADC $20,X		; B097	$75 $20
	TAY			; B099	$A8
	LDA $93E6,Y		; B09A	$B9 $E6 $93
	STA $06			; B09D	$85 $06
	LDA $93EB,Y		; B09F	$B9 $EB $93
	STA $07			; B0A2	$85 $07
	LDX $26			; B0A4	$A6 $26		X = character index
	LDA $7BA2,X		; B0A6	$BD $A2 $7B	character graphics type
	BEQ L2F0B2		; B0A9	$F0 $07
	LDX #$02		; B0AB	$A2 $02
	STX $06			; B0AD	$86 $06
	INX			; B0AF	$E8
	STX $07			; B0B0	$86 $07
L2F0B2:
	LDX $22			; B0B2	$A6 $22		loop counter ??
	LDA $20,X		; B0B4	$B5 $20
	JSR $A2BD		; B0B6	$20 $BD $A2
	LDX $22			; B0B9	$A6 $22
	LDA $1E,X		; B0BB	$B5 $1E
	LDY $20,X		; B0BD	$B4 $20
	CPY #$04		; B0BF	$C0 $04
	BNE L2F0C5		; B0C1	$D0 $02
	LDA #$08		; B0C3	$A9 $08
L2F0C5:
	JSR $ABA9		; B0C5	$20 $A9 $AB
	LDX $22			; B0C8	$A6 $22
	JSR $B436		; B0CA	$20 $36 $B4
	JSR $B4B5		; B0CD	$20 $B5 $B4
L2F0D0:
	LDX $22			; B0D0	$A6 $22
	DEX			; B0D2	$CA
	BPL L2F08B		; B0D3	$10 $B6		loop
	JSR $9DE7		; B0D5	$20 $E7 $9D
	LDX $26			; B0D8	$A6 $26
	JSR $A43A		; B0DA	$20 $3A $A4
	JSR $9E2A		; B0DD	$20 $2A $9E
	LDX $26			; B0E0	$A6 $26
	JSR $A633		; B0E2	$20 $33 $A6
L2F0E5:
	JMP $B0EB		; B0E5	$4C $EB $B0
	JMP $B0EB		; B0E8	$4C $EB $B0
	LDX $27			; B0EB	$A6 $27
	CPX #$04		; B0ED	$E0 $04
	BCC L2F100		; B0EF	$90 $0F
	LDX $26			; B0F1	$A6 $26
	CPX #$04		; B0F3	$E0 $04
	BCC L2F0FD		; B0F5	$90 $06
	LDA #$02		; B0F7	$A9 $02
	STA $20			; B0F9	$85 $20
	STA $21			; B0FB	$85 $21
L2F0FD:
	JMP $B184		; B0FD	$4C $84 $B1
L2F100:
	BIT $28			; B100	$24 $28
	BVC L2F12E		; B102	$50 $2A
	BMI L2F10C		; B104	$30 $06
	JSR $B5F6		; B106	$20 $F6 $B5
;; [$B109 : 
.byte $4C,$96,$B1
L2F10C:
	LDX $24			; B10C	$A6 $24
	BNE L2F11B		; B10E	$D0 $0B
	LDX #$0D		; B110	$A2 $0D
	JSR $9E72		; B112	$20 $72 $9E
	JSR $B131		; B115	$20 $31 $B1
	JMP $B196		; B118	$4C $96 $B1
L2F11B:
.byte $A2,$0A,$20,$72,$9E
.byte $A9,$F0,$85,$11,$A9,$04,$85,$10,$20,$4B,$B1,$20,$31,$B1
L2F12E:
	JMP $B196		; B12E	$4C $96 $B1

; Name	:
; Marks	:
	LDA #$08		; B131	$A9 $08
	STA $17			; B133	$85 $17
L2F135:
	LDX $27			; B135	$A6 $27
	LDA $7BCA,X		; B137	$BD $CA $7B
	CLC			; B13A	$18
	ADC #$04		; B13B	$69 $04
	STA $11			; B13D	$85 $11
	LDA #$02		; B13F	$A9 $02
	STA $10			; B141	$85 $10
	JSR $B14B		; B143	$20 $4B $B1
	DEC $17			; B146	$C6 $17
	BNE L2F135		; B148	$D0 $EB
	RTS			; B14A	$60
; End of

; Name	:
; Marks	:
	LDX $27			; B14B	$A6 $27
	LDA $7BCA,X		; B14D	$BD $CA $7B
L2F150:
	STA $7BCA,X		; B150	$9D $CA $7B
	JSR $A43A		; B153	$20 $3A $A4
	JSR $9E2A		; B156	$20 $2A $9E
	LDX $27			; B159	$A6 $27
	LDA $7BCA,X		; B15B	$BD $CA $7B
	CLC			; B15E	$18
	ADC $10			; B15F	$65 $10
	CMP $11			; B161	$C5 $11
	BNE L2F150		; B163	$D0 $EB
L2F165:
	STA $7BCA,X		; B165	$9D $CA $7B
	JSR $A43A		; B168	$20 $3A $A4
	JSR $9E2A		; B16B	$20 $2A $9E
	LDX $27			; B16E	$A6 $27
	LDA $7BCA,X		; B170	$BD $CA $7B
	SEC			; B173	$38
	SBC $10			; B174	$E5 $10
	CMP $7BD2,X		; B176	$DD $D2 $7B
	BNE L2F165		; B179	$D0 $EA
	STA $7BCA,X		; B17B	$9D $CA $7B
	JSR $A43A		; B17E	$20 $3A $A4
	JMP $9E2A		; B181	$4C $2A $9E
	BIT $28			; B184	$24 $28
	BVC L2F193		; B186	$50 $0B
	BPL L2F190		; B188	$10 $06
	JSR $B199		; B18A	$20 $99 $B1
;B18D
.byte $4C,$93,$B1
L2F190:
.byte $20,$F6,$B5
L2F193:
	JMP $B196		; B193	$4C $96 $B1
	JMP $9E2A		; B196	$4C $2A $9E
; End of

; Name	:
; Marks	: $00(ADDR) = $9320 = battle animation graphics
	LDA #$20		; B199	$A9 $20
	STA $00			; B19B	$85 $00
	LDA #$93		; B19D	$A9 $93
	STA $01			; B19F	$85 $01
	LDX #$00		; B1A1	$A2 $00
	LDY #$60		; B1A3	$A0 $60
	JSR Copy_char_tile	; B1A5	$20 $BA $FB
	JSR Wait_MENU_snd	; B1A8	$20 $5B $FD
	LDA #$40		; B1AB	$A9 $40
	STA $00			; B1AD	$85 $00
	LDA #$04		; B1AF	$A9 $04
	STA $01			; B1B1	$85 $01
	LDX #$60		; B1B3	$A2 $60
	JSR Apply_OAM_tile	; B1B5	$20 $BA $9D
	JSR Wait_NMI_end	; B1B8	$20 $46 $FD
	LDX #$00		; B1BB	$A2 $00
	STX $18			; B1BD	$86 $18
	JSR $B436		; B1BF	$20 $36 $B4
.byte $A6,$18,$B5,$20,$20,$D2,$B1,$E6,$18,$A6,$18,$E0,$02,$D0
.byte $EE,$60,$A8,$D0,$01,$60,$24,$28,$70,$01,$60,$88,$D0,$03,$4C,$91
.byte $B2,$88,$D0,$03,$4C,$44,$B3,$20,$01,$9E,$86,$16,$A2,$07,$A9,$F0
.byte $95,$0A,$CA,$10,$FB,$A9,$01,$85,$1D,$A6,$9C,$E0,$04,$90,$07,$8A

;; [$B200 : 

.byte $4A,$4A,$85,$1D,$A2,$03,$86,$1C,$20,$2A,$9E,$A6,$1C,$86,$09,$A4
.byte $16,$B9,$9A,$7B,$18,$79,$8A,$7B,$AA,$69,$01,$20,$11,$FD,$0A,$0A
.byte $0A,$A6,$09,$95,$0A,$A4,$16,$B9,$92,$7B,$AA,$E8,$38,$79,$82,$7B
.byte $E9,$02,$20,$11,$FD,$0A,$0A,$0A,$A6,$09,$95,$0E,$C6,$09,$10,$CF
.byte $20,$2A,$9E,$A6,$16,$BD,$8A,$7B,$4A,$85,$19,$20,$D7,$B3,$A0,$84
.byte $A9,$F0,$20,$F9,$9D,$20,$FC,$9D,$C0,$A4,$D0,$F6,$A2,$09,$20,$72
.byte $9E,$20,$2A,$9E,$20,$25,$B4,$20,$D7,$B3,$C6,$19,$D0,$F3,$A0,$80
.byte $A9,$F0,$20,$F9,$9D,$20,$FC,$9D,$C0,$A0,$D0,$F6,$20,$2A,$9E,$A9
.byte $08,$20,$1F,$9E,$C6,$1D,$F0,$03,$4C,$08,$B2,$20,$E1,$9D,$4C,$2A
.byte $9E,$A9,$00,$85,$02,$A2,$07,$20,$72,$9E,$20,$E1,$9D,$A0,$71,$A2
.byte $00,$BD,$61,$B4,$20,$F9,$9D,$E8,$E0,$04,$D0,$F5,$A0,$72,$A2,$00
.byte $BD,$65,$B4,$45,$02,$20,$F9,$9D,$E8,$E0,$04,$D0,$F3,$A9,$01,$A2
.byte $F8,$A4,$02,$F0,$04,$A9,$FE,$A2,$08,$85,$03,$86,$05,$20,$01,$9E
.byte $BD,$8A,$7B,$4A,$18,$65,$03,$7D,$9A,$7B,$0A,$0A,$0A,$85,$04,$A0
.byte $73,$A2,$00,$A5,$04,$20,$F9,$9D,$18,$A5,$04,$65,$05,$85,$04,$E8
.byte $E0,$04,$D0,$EF,$20,$01,$9E,$BD,$82,$7B,$4A,$38,$E9,$02,$18,$7D

;; [$B300 : 

.byte $92,$7B,$0A,$0A,$0A,$85,$06,$A0,$70,$84,$07,$A5,$06,$20,$F9,$9D
.byte $18,$69,$08,$85,$06,$84,$07,$20,$33,$9E,$A4,$07,$C0,$80,$D0,$EB
.byte $A0,$70,$84,$07,$A9,$F0,$20,$F9,$9D,$84,$07,$20,$33,$9E,$A4,$07
.byte $C0,$80,$D0,$F0,$A5,$24,$F0,$0B,$A5,$02,$49,$40,$85,$02,$F0,$03
.byte $4C,$9A,$B2,$60,$A9,$16,$8D,$C1,$79,$A9,$26,$8D,$C2,$79,$A9,$30
.byte $8D,$C3,$79,$20,$01,$9E,$86,$16,$A5,$9C,$0A,$85,$17,$D0,$01,$60
.byte $A2,$08,$20,$72,$9E,$20,$E1,$9D,$A6,$16,$BD,$82,$7B,$20,$56,$B4
.byte $85,$00,$A6,$16,$BD,$92,$7B,$0A,$0A,$0A,$65,$00,$AA,$A5,$17,$29
.byte $01,$F0,$02,$A2,$F0,$8A,$85,$0A,$85,$0B,$18,$69,$08,$85,$0C,$85
.byte $0D,$A6,$16,$BD,$8A,$7B,$20,$56,$B4,$85,$00,$A6,$16,$BD,$9A,$7B
.byte $0A,$0A,$0A,$65,$00,$85,$06,$85,$08,$18,$69,$08,$85,$07,$85,$09
.byte $A2,$46,$86,$0E,$86,$10,$E8,$86,$0F,$86,$11,$A9,$02,$85,$12,$85
.byte $13,$A9,$82,$85,$14,$85,$15,$20,$19,$AD,$20,$33,$9E,$A9,$02,$20
.byte $1F,$9E,$C6,$17,$D0,$8A,$60,$A0,$48,$A9,$02,$A6,$27,$E0,$04,$B0
.byte $09,$09,$40,$84,$03,$C8,$84,$02,$D0,$05,$84,$02,$C8,$84,$03,$85
.byte $00,$A0,$00,$A2,$00,$B5,$0E,$99,$80,$02,$99,$84,$02,$A5,$02,$99

;; [$B400 : 

.byte $81,$02,$A5,$03,$99,$85,$02,$A5,$00,$99,$82,$02,$99,$86,$02,$B5
.byte $0A,$99,$83,$02,$18,$69,$08,$99,$87,$02,$98,$18,$69,$08,$A8,$E8
.byte $E0,$04,$D0,$D1,$60,$A2,$03,$B5,$0A,$C9,$F0,$F0,$05,$38,$E9,$08
.byte $95,$0A,$CA,$10,$F2,$60

; Name	:
; X	:
; Marks	:
	STX $00			; B436	$86 $00
	LDY $20,X		; B438	$B4 $20		weapon action type ??
	LDX $7CB1		; B43A	$AE $B1 $7C	attack animation palette
	CPY #$04		; B43D	$C0 $04
	BEQ L2F44E		; B43F	$F0 $0D
	LDX $00			; B441	$A6 $00
	LDA $D0,X		; B443	$B5 $D0		right hand weapon temp ??
	SEC			; B445	$38
	SBC #$0A		; B446	$E9 $0A
	BMI L2F453		; B448	$30 $09		if shield or fist
	TAY			; B44A	$A8
	LDX $8D88,Y		; B44B	$BE $88 $8D	weapon palettes offset
L2F44E:
	LDY #$19		; B44E	$A0 $19
	JSR Set_wpn_pal		; B450	$20 $03 $FC
L2F453:
	JMP Apply_OAM_pal	; B453	$4C $33 $9E
; End of

;B456
.byte $38,$E9,$02,$A2,$00,$20,$11,$FD,$4C,$A5
.byte $AD,$45,$44,$44,$45,$02,$02,$02,$C2

; Name	:
; Marks	: Check left/right hand for weapon
	LDA char_idx_atk	; B469	$A5 $26
	JSR Calc_char_addr	; B46B	$20 $A2 $AD
	TAX			; B46E	$AA
	LDA ch_stats,X		; B46F	$BD $00 $61
	AND #$80		; B472	$29 $80		l/r hand
	STA $25			; B474	$85 $25		l/r hand ??
	LDA $611C,X		; B476	$BD $1C $61	right hand weapon
	SEC			; B479	$38
	SBC #$30		; B47A	$E9 $30
	STA $D0			; B47C	$85 $D0		right hand weapon temp(1st weapon is Buckler:31h)
	LDA $611D,X		; B47E	$BD $1D $61	left hand waepon
	SEC			; B481	$38
	SBC #$30		; B482	$E9 $30
	STA $D1			; B484	$85 $D1		left hand weapon temp
	LDA #$00		; B486	$A9 $00
	STA $20			; B488	$85 $20
	STA $21			; B48A	$85 $21
	BIT $28			; B48C	$24 $28
	BMI L2F495		; B48E	$30 $05
	LDA #$04		; B490	$A9 $04
	STA $20			; B492	$85 $20
	RTS			; B494	$60
; End of
L2F495:
	JSR Weapon_type		; B495	$20 $C7 $FD
	LDX #$01		; B498	$A2 $01		left hand ??
L2F49A:
	LDY $1E,X		; B49A	$B4 $1E
	LDA $93DE,Y		; B49C	$B9 $DE $93	weapon action type ??
	STA $20,X		; B49F	$95 $20
	DEX			; B4A1	$CA
	BPL L2F49A		; B4A2	$10 $F6		loop
	LDA $1E			; B4A4	$A5 $1E		right hand weapon type temp ??
	ORA $1F			; B4A6	$05 $1F		left hand weapon type temp ??
	CMP #$02		; B4A8	$C9 $02
	BCS L2F4B4		; B4AA	$B0 $08
	LDX #$02		; B4AC	$A2 $02		equipped with a shield or fist
	LDY #$00		; B4AE	$A0 $00
	STX $20			; B4B0	$86 $20
	STY $21			; B4B2	$84 $21
L2F4B4:
	RTS			; B4B4	$60
; End of

; Name	:
; Marks	:
	LDX $26			; B4B5	$A6 $26
	JSR $9DDA		; B4B7	$20 $DA $9D
	JSR $9DE1		; B4BA	$20 $E1 $9D
	STX $16			; B4BD	$86 $16
	LDA #$04		; B4BF	$A9 $04
	STA $17			; B4C1	$85 $17
	LDX $22			; B4C3	$A6 $22
	TXA			; B4C5	$8A
	BEQ L2F4CA		; B4C6	$F0 $02
	LDA #$05		; B4C8	$A9 $05
L2F4CA:
	CLC			; B4CA	$18
	ADC $20,X		; B4CB	$75 $20
	TAX			; B4CD	$AA
	LDY $B5DE,X		; B4CE	$BC $DE $B5
	BNE L2F4D4		; B4D1	$D0 $01
	RTS			; B4D3	$60
; End of
L2F4D4:
	DEY			; B4D4	$88
	TYA			; B4D5	$98
	ASL A			; B4D6	$0A
	TAX			; B4D7	$AA
	LDA $B5D4,X		; B4D8	$BD $D4 $B5
	STA $00			; B4DB	$85 $00
	LDA $B5D5,X		; B4DD	$BD $D5 $B5
	STA $01			; B4E0	$85 $01
.byte $6C,$00,$00
	;JMP ($0000)		; B4E2	$6C $00 $00
	INY			; B4E5	$C8
	STY $19			; B4E6	$84 $19
	LDA #$04		; B4E8	$A9 $04
	STA $18			; B4EA	$85 $18
L2F4EC:
	LDX #$00		; B4EC	$A2 $00
	JSR $B5AB		; B4EE	$20 $AB $B5
	LDA $16			; B4F1	$A5 $16
	EOR #$01		; B4F3	$49 $01
	STA $16			; B4F5	$85 $16
	DEC $18			; B4F7	$C6 $18
	BNE L2F4EC		; B3F9	$D0 $F1
	RTS			; B4FB	$60
; End of

;B4FC
.byte $C8
L2F4FD:
.byte $84,$19,$A5

;; [$B500 : 

.byte $9C,$18,$69,$02,$0A,$85,$18,$A2,$01,$20,$AB,$B5,$E6,$16,$C6,$18
.byte $D0,$F5,$60

	INY			; B513	$C8
	STY $19			; B514	$84 $19
	LDX $26			; B516	$A6 $26
	LDA $7BA2,X		; B518	$BD $A2 $7B
	BEQ L2F521		; B51B	$F0 $04
	LDY #$03		; B51D	$A0 $03
	BNE L2F4FD		; B51F	$D0 $DC
L2F521:
	JSR $9E2A		; B521	$20 $2A $9E
	LDX $26			; B524	$A6 $26
	LDA $7BCA,X		; B526	$BD $CA $7B
	SEC			; B529	$38
	SBC #$0C		; B52A	$E9 $0C
	STA $1C			; B52C	$85 $1C
	LDA $7BCE,X		; B52E	$BD $CE $7B
	CLC			; B531	$18
	ADC #$04		; B532	$69 $04
	STA $1D			; B534	$85 $1D
	LDA #$01		; B536	$A9 $01
	STA $16			; B538	$85 $16
	LDX #$05		; B53A	$A2 $05
	JSR $AC4B		; B53C	$20 $4B $AC
	JSR $B5AE		; B53F	$20 $AE $B5
	LDA #$00		; B542	$A9 $00
	STA $16			; B544	$85 $16
	LDA #$08		; B546	$A9 $08
	STA $17			; B548	$85 $17
	LDA $1C			; B54A	$A5 $1C
	CLC			; B54C	$18
	ADC #$08		; B54D	$69 $08
	STA $1C			; B54F	$85 $1C
	LDX #$05		; B551	$A2 $05
	JSR $AC4B		; B553	$20 $4B $AC
	JSR $B5AE		; B556	$20 $AE $B5
	LDX #$02		; B559	$A2 $02
	JSR $9E72		; B55B	$20 $72 $9E
	LDA #$01		; B55E	$A9 $01
	STA $17			; B560	$85 $17
L2F562:
	LDX #$05		; B562	$A2 $05
	JSR $AC4B		; B564	$20 $4B $AC
	JSR $B5AE		; B567	$20 $AE $B5
	INC $16			; B56A	$E6 $16
	LDA $1C			; B56C	$A5 $1C
	SEC			; B56E	$38
	SBC #$08		; B56F	$E9 $08
	STA $1C			; B571	$85 $1C
	CMP #$A0		; B573	$C9 $A0
	BCS L2F562		; B575	$B0 $EB
	RTS			; B577	$60
; End of

.byte $C8,$C8,$84,$19,$A2,$03,$20,$72
.byte $9E,$A2,$0C,$86,$18,$A5,$18,$29,$01,$F0,$04,$A9,$0F,$D0,$03,$AD
.byte $C1,$79,$20,$71,$9D,$A6,$18,$BD,$E8,$B5,$85,$16,$20,$AE,$B5,$C6
.byte $18,$10,$E2,$A9,$0F,$20,$71,$9D,$4C,$33,$9E

; Name	;
; Marks	:
	JSR $9E72		; B5AB	$20 $72 $9E
; Name	:
; Marks	:
	LDX $26			; B5AE	$A6 $26
	LDY #$38		; B5B0	$A0 $38
	LDA $16			; B5B2	$A5 $16
	AND #$01		; B5B4	$29 $01
	BEQ L2F5BA		; B5B6	$F0 $02
	LDY #$3E		; B5B8	$A0 $3E
L2F5BA:
	TYA			; B5BA	$98
	JSR $AC07		; B5BB	$20 $07 $AC
	LDX $26			; B5BE	$A6 $26
	LDA $7BA2,X		; B5C0	$BD $A2 $7B
	BNE L2F5CC		; B5C3	$D0 $07
	LDX $19			; B5C5	$A6 $19
	LDA $16			; B5C7	$A5 $16
	JSR $AC4B		; B5C9	$20 $4B $AC
L2F5CC:
	JSR Apply_OAM_pal	; B5CC	$20 $33 $9E
	LDA $17			; B5CF	$A5 $17
	JMP $9E1F		; B5D1	$4C $1F $9E
; End of

;B5D4 - data block
.byte $E5,$B4,$E5,$B4,$FC,$B4,$13,$B5,$78,$B5,$00,$01
.byte $03,$04,$05,$00,$02,$03,$04,$05,$09,$08,$07,$06,$05,$04,$03,$02
.byte $05,$04,$03,$02,$01,$00,$20,$FF,$B5,$20,$E7,$9D,$4C,$33,$9E,$AD

;; [$B600 : 

.byte $B0,$7C,$C9,$18,$B0,$39,$0A,$AA,$BD,$62,$B6,$85,$00,$BD,$63,$B6
.byte $85,$01,$A2,$00,$A0,$C0,$20,$BA,$FB,$A9,$40,$85,$00,$A9,$04,$85
.byte $01,$20,$C6,$9D,$20,$5B,$FD,$A2,$60,$20,$BD,$9D,$98,$18,$65,$02
.byte $85,$02,$98,$18,$65,$00,$85,$00,$20,$46,$FD,$A5,$00,$D0,$E5,$20
.byte $E7,$9D,$20,$2A,$9E,$AE,$B1,$7C,$A0,$19,$20,$03,$FC,$20,$33,$9E
.byte $AD,$B0,$7C,$0A,$AA,$BD,$92,$B6,$85,$00,$BD,$93,$B6,$85,$01,$6C
.byte $00,$00,$00,$97,$C0,$97,$80,$96,$80,$95,$00,$96,$40,$95,$00,$95
.byte $00,$90,$00,$94,$C0,$95,$80,$93,$E0,$94,$80,$94,$00,$90,$00,$90
.byte $00,$90,$C0,$9D,$80,$9D,$00,$90,$00,$90,$00,$90,$60,$88,$60,$93
.byte $60,$88,$FB,$B8,$B4,$B9,$3D,$BA,$53,$BA,$56,$BA,$65,$BA,$61,$BB
.byte $AC,$BB,$D3,$BB,$E9,$BB,$F8,$BB,$07,$BC,$16,$BC,$D8,$BE,$D8,$BE
.byte $D8,$BE,$C0,$BC,$FF,$BC,$31,$BD,$31,$BD,$31,$BD,$9D,$BD,$B0,$BE
.byte $C4,$BE,$60,$A5,$29,$C9,$08,$90,$02,$A9,$07,$09,$01,$85,$18,$A2
.byte $01,$20,$E5,$B8,$20,$FE,$B6,$A6,$18,$20,$14,$B8,$A5,$14,$A6,$18
.byte $20,$4C,$B8,$20,$6B,$9E,$A5,$12,$20,$AD,$B8,$20,$6A,$B8,$A5,$13
.byte $20,$1F,$9E,$20,$27,$B7,$20,$46,$B7,$C9,$FF,$F0,$EE,$60,$A9,$08

;; [$B700 : 

.byte $85,$00,$85,$01,$20,$01,$9E,$BD,$8A,$7B,$0A,$0A,$85,$02,$BD,$82
.byte $7B,$0A,$0A,$85,$03,$20,$C8,$B7,$A6,$27,$E0,$04,$90,$08,$C6,$0C
.byte $C6,$0C,$C6,$0D,$C6,$0D,$60,$A2,$00,$FE,$30,$76,$BD,$30,$76,$30
.byte $0C,$FE,$20,$76,$C5,$1B,$90,$05,$A9,$80,$9D,$20,$76,$9D,$30,$76
.byte $E8,$E4,$18,$D0,$E4,$60,$A2,$00,$8A,$BC,$20,$76,$C0,$80,$F0,$02
.byte $A9,$FF,$E8,$E4,$18,$D0,$F2,$60,$BD,$FA,$93,$18,$65,$01,$99,$00
.byte $02,$BD,$7A,$94,$99,$01,$02,$BD,$FA,$94,$99,$02,$02,$BD,$7A,$95
.byte $18,$65,$00,$99,$03,$02,$4C,$FC,$9D,$A0,$10,$A5,$01,$99,$00,$02
.byte $A5,$02,$99,$01,$02,$A9,$02,$99,$02,$02,$A5,$00,$99,$03,$02,$4C
.byte $FC,$9D,$20,$E7,$9D,$20,$01,$9E,$BD,$8A,$7B,$4A,$18,$7D,$9A,$7B
.byte $0A,$0A,$0A,$85,$00,$BD,$82,$7B,$4A,$18,$7D,$92,$7B,$0A,$0A,$0A
.byte $85,$01,$BC,$7A,$7B,$BE,$56,$7B,$A0,$19,$20,$03,$FC,$A9,$00,$85
.byte $03,$A9,$10,$85,$04,$4C,$33,$9E,$20,$D4,$B7,$85,$0A,$84,$0B,$85
.byte $00,$84,$01,$60,$A6,$27,$E0,$04,$B0,$15,$A0,$03,$84,$0D,$88,$84
.byte $0C,$BD,$CE,$7B,$38,$E5,$01,$A8,$BD,$CA,$7B,$38,$E5,$00,$60,$20
.byte $03,$9E,$BD,$82,$7B,$85,$0D,$4A,$18,$7D,$92,$7B,$0A,$0A,$0A,$38

;; [$B800 : 

.byte $E5,$03,$A8,$BD,$8A,$7B,$85,$0C,$4A,$18,$7D,$9A,$7B,$0A,$0A,$0A
.byte $38,$E5,$02,$60,$CA,$86,$09,$20,$2A,$9E,$A2,$00,$A5,$0C,$20,$11
.byte $FD,$A4,$09,$0A,$0A,$0A,$65,$0A,$99,$00,$76,$A2,$00,$A5,$0D,$20
.byte $11,$FD,$A4,$09,$0A,$0A,$0A,$65,$0B,$99,$10,$76,$A5,$09,$29,$02
.byte $D0,$03,$20,$2A,$9E,$C6,$09,$10,$D1,$4C,$2A,$9E,$85,$1C,$CA,$86
.byte $1D,$20,$2A,$9E,$A2,$00,$A5,$1C,$20,$11,$FD,$38,$E5,$1C,$A6,$1D
.byte $9D,$30,$76,$C6,$1D,$10,$ED,$4C,$2A,$9E,$20,$E7,$9D,$A9,$10,$85
.byte $19,$A0,$00,$84,$02,$B9,$00,$76,$85,$00,$B9,$10,$76,$85,$01,$A5
.byte $1A,$85,$03,$B9,$30,$76,$30,$1D,$B9,$20,$76,$30,$18,$20,$A4,$AD
.byte $AA,$86,$04,$BD,$40,$76,$AA,$A4,$19,$20,$58,$B7,$84,$19,$A6,$04
.byte $E8,$C6,$03,$D0,$EC,$A4,$02,$C8,$C4,$18,$D0,$C7,$60,$0A,$AA,$BD
.byte $25,$BF,$85,$1C,$BD,$26,$BF,$85,$1D,$A0,$00,$B1,$1C,$85,$1A,$C8
.byte $B1,$1C,$85,$1B,$85,$00,$C8,$A2,$00,$A5,$1A,$85,$01,$B1,$1C,$9D
.byte $40,$76,$C8,$E8,$C6,$01,$D0,$F5,$CA,$8A,$29,$F0,$18,$69,$10,$AA
.byte $C6,$00,$D0,$E5,$60,$A0,$20,$A9,$FF,$99,$00,$76,$C8,$C0,$30,$D0
.byte $F8,$8A,$99,$00,$76,$C8,$C0,$40,$D0,$F8,$60,$A5,$29,$C9,$08,$90

;; [$B900 : 

.byte $02,$A9,$08,$4A,$85,$06,$4A,$85,$07,$A9,$10,$85,$00,$A9,$E8,$85
.byte $01,$A9,$18,$85,$02,$A9,$00,$85,$03,$20,$C8,$B7,$A5,$27,$C9,$04
.byte $90,$09,$BD,$82,$7B,$0A,$0A,$65,$0B,$85,$0B,$A9,$02,$38,$E5,$07
.byte $0A,$0A,$0A,$65,$0A,$85,$0A,$A6,$06,$BD,$AA,$B9,$85,$0C,$85,$17
.byte $BD,$AF,$B9,$85,$0D,$85,$16,$8A,$0A,$69,$03,$A2,$07,$95,$0E,$49
.byte $01,$CA,$10,$F9,$20,$6B,$9E,$A2,$00,$86,$18,$20,$E7,$9D,$A5,$0A
.byte $85,$08,$A4,$07,$C8,$84,$19,$A0,$10,$A6,$18,$B5,$0C,$4A,$08,$0A
.byte $69,$02,$85,$1A,$4A,$0A,$0A,$0A,$85,$02,$A5,$0B,$38,$E5,$02,$85
.byte $01,$A5,$08,$85,$00,$18,$69,$10,$85,$08,$A2,$00,$28,$90,$02,$A2
.byte $0C,$20,$58,$B7,$E8,$C6,$1A,$D0,$F8,$C6,$19,$D0,$CC,$A9,$03,$20
.byte $1F,$9E,$A6,$18,$E8,$E0,$0C,$D0,$B0,$60,$00,$01,$03,$05,$07,$01
.byte $02,$04,$06,$08,$A2,$03,$BD,$B0,$79,$95,$10,$CA,$10,$F8,$A0,$04
.byte $A2,$08,$20,$42,$97,$20,$33,$9E,$20,$6B,$9E,$A2,$05,$86,$0E,$86
.byte $0F,$A2,$20,$A9,$C0,$20,$11,$FD,$85,$00,$A9,$08,$85,$01,$A0,$10
.byte $84,$03,$A2,$18,$A4,$03,$20,$58,$B7,$84,$03,$E8,$E0,$24,$D0,$F4
.byte $A9,$01,$20,$1F,$9E,$20,$E7,$9D,$A9,$02,$20,$1F,$9E,$C6,$0E,$D0

;; [$BA00 : 

.byte $DD,$A2,$03,$B5,$10,$9D,$B0,$79,$CA,$10,$F8,$20,$E7,$9D,$A9,$03
.byte $20,$1F,$9E,$A9,$FC,$85,$00,$A9,$10,$85,$01,$A9,$18,$85,$03,$A9
.byte $04,$85,$02,$20,$C8,$B7,$A0,$10,$A2,$26,$20,$58,$B7,$A5,$01,$18
.byte $69,$08,$85,$01,$C0,$24,$D0,$F2,$A9,$03,$4C,$1F,$9E,$A9,$06,$85
.byte $14,$A9,$01,$85,$12,$A9,$04,$85,$13,$A5,$29,$4A,$4A,$0A,$69,$07
.byte $4C,$CD,$B6,$4C,$16,$BF,$A9,$06,$85,$14,$A9,$04,$85,$12,$A9,$04
.byte $85,$13,$4C,$C3,$B6,$20,$CF,$9D,$20,$01,$9E,$BC,$72,$7B,$B9,$38
.byte $BB,$85,$02,$B9,$48,$BB,$85,$03,$A9,$10,$85,$00,$85,$01,$20,$C8
.byte $B7,$A9,$09,$85,$12,$A5,$0B,$18,$69,$30,$A6,$27,$E0,$04,$90,$17
.byte $20,$03,$9E,$BC,$82,$7B,$C0,$07,$90,$0D,$69,$2F,$06,$12,$BC,$8A
.byte $7B,$C0,$07,$90,$02,$06,$12,$85,$10,$A0,$00,$B9,$58,$BB,$20,$07
.byte $FD,$0A,$0A,$0A,$65,$0A,$99,$C0,$76,$99,$C9,$76,$69,$30,$99,$D2
.byte $76,$99,$DB,$76,$8A,$0A,$0A,$0A,$65,$0B,$99,$00,$76,$99,$12,$76
.byte $69,$30,$99,$09,$76,$99,$1B,$76,$C8,$C0,$09,$D0,$CE,$20,$2A,$9E
.byte $20,$6B,$9E,$A9,$02,$85,$03,$A2,$44,$86,$0E,$A9,$06,$85,$11,$A2
.byte $00,$A0,$10,$A5,$03,$49,$40,$85,$03,$A5,$0E,$85,$02,$BD,$00,$76

;; [$BB00 : 

.byte $18,$69,$08,$C5,$10,$D0,$02,$A5,$0B,$9D,$00,$76,$85,$01,$BD,$C0
.byte $76,$85,$00,$20,$08,$9E,$E8,$E4,$12,$D0,$D8,$A9,$01,$20,$1F,$9E
.byte $C6,$11,$D0,$CB,$A6,$0E,$E8,$E0,$48,$D0,$BE,$A6,$27,$E0,$04,$90
.byte $06,$20,$03,$9E,$20,$51,$A9,$60,$18,$18,$18,$18,$18,$18,$18,$18
.byte $18,$30,$30,$30,$30,$30,$30,$30,$18,$18,$18,$18,$18,$18,$18,$18
.byte $30,$30,$30,$30,$30,$30,$30,$30,$02,$11,$14,$23,$25,$30,$42,$44
.byte $51,$A9,$01,$85,$18,$A2,$01,$20,$E5,$B8,$A9,$00,$8D,$20,$76,$8D
.byte $30,$76,$A9,$04,$85,$01,$A9,$08,$85,$00,$A9,$0F,$85,$03,$A9,$10
.byte $85,$02,$20,$C8,$B7,$A5,$0A,$8D,$00,$76,$A4,$0B,$8C,$10,$76,$20
.byte $6B,$9E,$A9,$03,$20,$AD,$B8,$20,$6A,$B8,$A9,$04,$20,$1F,$9E,$A6
.byte $27,$E0,$04,$90,$06,$20,$03,$9E,$20,$51,$A9,$60,$20,$6B,$9E,$A4
.byte $27,$C0,$04,$90,$1D,$88,$88,$88,$88,$A9,$03,$20,$16,$A2,$20,$3F
.byte $9E,$20,$E4,$A1,$20,$46,$FD,$A9,$06,$20,$1F,$9E,$20,$01,$9E,$20
.byte $51,$A9,$60,$A9,$08,$85,$14,$A9,$01,$85,$12,$A9,$06,$85,$13,$A5
.byte $29,$4A,$4A,$0A,$69,$07,$4C,$CD,$B6,$A9,$06,$85,$14,$A9,$05,$85
.byte $12,$A9,$05,$85,$13,$4C,$C3,$B6,$A9,$06,$85,$14,$A9,$06,$85,$12

;; [$BC00 : 

.byte $A9,$06,$85,$13,$4C,$C3,$B6,$A9,$06,$85,$14,$A9,$07,$85,$12,$A9
.byte $04,$85,$13,$4C,$C3,$B6,$A9,$01,$85,$18,$A2,$01,$20,$E5,$B8,$A6
.byte $27,$E0,$04,$B0,$17,$A9,$08,$85,$10,$A0,$03,$84,$0D,$88,$84,$0C
.byte $BD,$CE,$7B,$A8,$BD,$CA,$7B,$38,$E9,$08,$D0,$27,$A9,$0E,$85,$10
.byte $20,$03,$9E,$BD,$82,$7B,$85,$0D,$4A,$18,$7D,$92,$7B,$0A,$0A,$0A
.byte $38,$E9,$0D,$A8,$BD,$8A,$7B,$85,$0C,$38,$E9,$01,$18,$7D,$9A,$7B
.byte $0A,$0A,$0A,$8D,$00,$76,$8C,$10,$76,$85,$0A,$84,$0B,$A2,$00,$A5
.byte $29,$C9,$08,$90,$01,$E8,$8A,$18,$65,$10,$20,$AD,$B8,$A5,$29,$4A
.byte $0A,$09,$01,$85,$07,$49,$FF,$AA,$86,$09,$A9,$00,$8D,$20,$76,$8D
.byte $30,$76,$85,$08,$85,$0F,$20,$6B,$9E,$A5,$29,$85,$0E,$20,$6A,$B8
.byte $A9,$01,$20,$1F,$9E,$A6,$0F,$B5,$07,$18,$6D,$10,$76,$8D,$10,$76
.byte $E8,$E0,$03,$90,$02,$A2,$00,$86,$0F,$C6,$0E,$D0,$E0,$4C,$2A,$9E
.byte $20,$FF,$BE,$A6,$27,$E0,$04,$B0,$01,$60,$20,$92,$B7,$20,$DD,$BC
.byte $20,$79,$B7,$A9,$02,$20,$1F,$9E,$C6,$04,$D0,$F1,$60,$A5,$03,$29
.byte $07,$85,$03,$A8,$A5,$00,$38,$F9,$33,$93,$85,$00,$A5,$01,$18,$79
.byte $3B,$93,$85,$01,$B9,$43,$93,$18,$69,$43,$85,$02,$E6,$03,$60,$20

;; [$BD00 : 

.byte $FF,$BE,$A6,$27,$E0,$04,$B0,$01,$60,$20,$92,$B7,$A9,$44,$85,$02
.byte $20,$20,$BD,$20,$79,$B7,$A9,$02,$20,$1F,$9E,$C6,$04,$D0,$F1,$60
.byte $A5,$03,$29,$07,$85,$03,$C6,$00,$A5,$02,$49,$01,$85,$02,$E6,$03
.byte $60,$20,$6B,$9E,$AD,$B6,$93,$85,$01,$A0,$01,$84,$02,$AE,$B0,$7C
.byte $E0,$13,$F0,$05,$B9,$B6,$93,$85,$39,$C8,$E0,$12,$F0,$06,$B9,$B6
.byte $93,$20,$71,$9D,$C8,$B9,$B6,$93,$C8,$84,$02,$20,$1F,$9E,$A4,$02
.byte $C6,$01,$D0,$D7,$A9,$0F,$20,$71,$9D,$A9,$00,$85,$39,$20,$33,$9E
.byte $AD,$B0,$7C,$C9,$14,$F0,$01,$60,$A0,$08,$A9,$80,$91,$9F,$AE,$BB
.byte $7C,$BD,$5E,$7D,$38,$E9,$04,$AA,$48,$A9,$03,$85,$A5,$20,$70,$A9
.byte $68,$AA,$A9,$FF,$9D,$62,$7B,$CE,$4D,$7B,$4C,$2A,$9E,$A9,$03,$85
.byte $14,$20,$AE,$BD,$C6,$14,$D0,$F9,$20,$31,$B1,$4C,$2A,$9E,$20,$E5
.byte $B8,$A9,$0B,$20,$AD,$B8,$A2,$03,$86,$18,$A0,$07,$20,$47,$BE,$A6
.byte $18,$BD,$10,$76,$9D,$10,$77,$BD,$00,$76,$9D,$00,$77,$CA,$10,$F1
.byte $A0,$03,$20,$47,$BE,$A6,$18,$BD,$00,$77,$38,$FD,$00,$76,$9D,$20
.byte $77,$BD,$10,$77,$38,$FD,$10,$76,$9D,$30,$77,$4A,$9D,$40,$77,$CA
.byte $10,$E5,$A9,$7F,$A6,$18,$20,$4C,$B8,$A9,$08,$85,$17,$20,$4F,$BE

;; [$BE00 : 

.byte $C6,$17,$D0,$F9,$20,$6A,$B8,$20,$2A,$9E,$A2,$00,$A0,$00,$BD,$10
.byte $76,$DD,$10,$77,$F0,$02,$A0,$FF,$E8,$E4,$18,$D0,$F1,$98,$D0,$D9
.byte $4C,$2A,$9E,$A6,$27,$E0,$04,$B0,$0B,$A9,$A0,$85,$00,$A9,$BE,$85
.byte $01,$4C,$3C,$BE,$A9,$A8,$85,$00,$A9,$BE,$85,$01,$A2,$03,$B1,$00
.byte $95,$0A,$88,$CA,$10,$F8,$60,$20,$23,$BE,$A6,$18,$4C,$14,$B8,$A2
.byte $00,$86,$16,$FE,$30,$76,$BD,$30,$76,$30,$3F,$20,$6B,$9E,$A6,$16
.byte $A9,$00,$9D,$20,$76,$9D,$30,$76,$BD,$10,$76,$DD,$10,$77,$D0,$07
.byte $A9,$80,$9D,$30,$76,$D0,$23,$FE,$10,$76,$BD,$40,$77,$18,$7D,$20
.byte $77,$9D,$40,$77,$DD,$30,$77,$90,$03,$FE,$00,$76,$BD,$40,$77,$DD
.byte $30,$77,$90,$03,$FD,$30,$77,$9D,$40,$77,$E8,$E4,$18,$D0,$B2,$60
.byte $98,$00,$04,$02,$C0,$78,$06,$02,$00,$00,$05,$02,$60,$78,$06,$02
.byte $A6,$27,$E0,$04,$90,$01,$60,$A2,$0D,$20,$72,$9E,$A6,$27,$20,$31
.byte $B1,$4C,$2A,$9E,$A6,$27,$E0,$04,$90,$01,$60,$A2,$0D,$20,$72,$9E
.byte $A6,$27,$20,$31,$B1,$4C,$2A,$9E,$20,$6B,$9E,$A2,$10,$86,$04,$8A
.byte $4A,$90,$04,$A9,$0F,$D0,$03,$AD,$C1,$79,$20,$71,$9D,$A9,$02,$20
.byte $1F,$9E,$A6,$04,$CA,$D0,$E6,$A9,$0F,$20,$71,$9D,$4C,$33,$9E,$20

;; [$BF00 : 0x2FF00 ]

.byte $16,$BF,$A6,$27,$E0,$04,$B0,$01,$60,$A5,$27,$48,$20,$03,$9E,$20
.byte $51,$A9,$68,$85,$27,$60,$A9,$06,$85,$14,$A9,$0A,$85,$12,$A9,$06
.byte $85,$13,$4C,$C3,$B6,$45,$BF,$53,$BF,$5D,$BF,$75,$BF,$67,$BF,$87
.byte $BF,$99,$BF,$AB,$BF,$B5,$BF,$BA,$BF,$BF,$BF,$CD,$BF,$D3,$BF,$D7
.byte $BF,$DB,$BF,$E0,$BF,$04,$03,$27,$6C,$6D,$6E,$28,$6F,$70,$71,$29
.byte $72,$73,$74,$01,$08,$00,$24,$25,$26,$27,$28,$29,$2A,$02,$03,$00
.byte $2B,$24,$2C,$25,$2D,$26,$2E,$04,$03,$00,$01,$2B,$2F,$25,$30,$2D
.byte $31,$27,$32,$33,$34,$10,$01,$0C,$0D,$3E,$3F,$0E,$0F,$40,$41,$42
.byte $43,$44,$45,$46,$47,$48,$49,$04,$04,$00,$0D,$2B,$4A,$24,$4B,$2C
.byte $4C,$25,$4D,$2D,$4E,$26,$4F,$2E,$50,$04,$04,$00,$01,$02,$03,$27
.byte $32,$33,$34,$51,$52,$53,$4A,$54,$55,$56,$57,$04,$02,$00,$58,$59
.byte $5A,$24,$4B,$2C,$5C,$03,$01,$00,$5B,$5D,$03,$01,$26,$5E,$5F,$04
.byte $03,$60,$61,$62,$63,$64,$65,$66,$67,$68,$69,$6A,$6B,$04,$01,$00
.byte $01,$02,$03,$02,$01,$00,$01,$02,$01,$0C,$0D,$03,$01,$75,$76,$77
.byte $03,$01,$78,$79,$7A,$76,$77,$03,$01,$78,$79,$7A,$01,$00,$01,$02
.byte $01,$0C,$0D,$03,$01,$75,$76,$77,$03,$01,$78,$79,$7A,$FF,$F8,$FF
; ========== battle graphics code ($9600-$BFFF) END ==========
